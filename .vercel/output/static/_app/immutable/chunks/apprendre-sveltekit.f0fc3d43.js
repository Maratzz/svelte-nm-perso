import{S as nM,i as oM,s as lM,k as o,q as a,a as i,l,m as r,r as n,h as t,c,n as d,a3 as Gk,b as u,C as s,D as Ny}from"./index.65028fb2.js";function rM(jx){let ts,Fk,Zc,ee,Hl,$k,Wk,Kl,Xk,Yk,gl,Zk,ed,as,eE,ct,sE,tE,sd,Ra,aE,td,ns,nE,dt,oE,lE,ad,nd,od,Ua,rE,ld,Va,pE,rd,Ja,uE,pd,os,iE,Il,cE,dE,ud,ft,fE,Al,vE,id,Na,mE,cd,C,Rl,kE,EE,vt,_E,mt,qE,bE,CE,Ul,yE,jE,Vl,PE,hE,Jl,SE,dd,ls,OE,kt,DE,wE,fd,Ba,xE,vd,Qa,zE,md,rs,ME,Nl,LE,TE,kd,Et,Px='<code class="language-bash"><span class="token function">npm</span> create svelte@latest my-app</code>',Ed,ps,HE,Bl,KE,gE,_d,Ga,Fa,By,qd,se,IE,Ql,AE,RE,Gl,UE,VE,bd,$a,Fl,JE,Cd,Wa,NE,yd,us,BE,$l,QE,GE,jd,Xa,Ya,Qy,Pd,Za,FE,hd,_t,hx=`<code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">npm</span> run dev -- <span class="token parameter variable">--open</span></code>`,Sd,en,$E,Od,sn,tn,Gy,Dd,an,WE,wd,nn,XE,xd,on,YE,zd,te,ZE,Wl,e2,s2,Xl,t2,a2,Md,ae,n2,Yl,o2,l2,Zl,r2,p2,Ld,is,u2,er,i2,c2,Td,A,ln,sr,d2,f2,v2,qt,tr,m2,k2,ar,E2,_2,bt,nr,q2,b2,or,C2,y2,Ct,lr,j2,P2,rr,h2,Hd,rn,X,S2,pr,O2,D2,ur,w2,x2,ir,z2,M2,Kd,pn,L2,gd,m,T2,cr,H2,K2,dr,g2,I2,fr,A2,R2,vr,U2,V2,mr,J2,N2,kr,B2,Q2,Id,un,Er,G2,Ad,yt,F2,_r,$2,Rd,jt,Sx=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Salut, je suis Nico !<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Ceci est ma page "à propos"<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code>`,Ud,Pt,W2,qr,X2,Vd,ht,Ox=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Restons en contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mailto:test@test.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Envoyez-moi un mail!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code>`,Jd,St,Y2,br,Z2,Nd,Ot,Dx=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>My blog posts will go here eventually…<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code>`,Bd,cs,e3,Cr,s3,t3,Qd,Dt,wx=`<code class="language-fs">📂 src
┗ 📂 routes
  ┣ 📜 +page.svelte
  ┣ 📂 blog
  ┃ ┗ 📜 +page.svelte
  ┣ 📂 about
  ┃ ┗ 📜 +page.svelte
  ┗ 📂 contact
    ┗ 📜 +page.svelte</code>`,Gd,k,a3,yr,n3,o3,jr,l3,r3,Pr,p3,u3,hr,i3,c3,Sr,d3,f3,Or,v3,m3,Fd,cn,k3,$d,R,E3,Dr,_3,q3,wr,b3,C3,xr,y3,j3,Wd,ne,P3,zr,h3,S3,Mr,O3,D3,Xd,wt,xx=`<code class="language-fs">📂 src
┗ 📂 routes
  ┗ 📜 +layout.svelte</code>`,Yd,L,Lr,w3,x3,Tr,z3,M3,Hr,L3,T3,Kr,H3,K3,Zd,ds,g3,gr,I3,A3,ef,fs,R3,Ir,U3,V3,sf,U,J3,Ar,N3,B3,Rr,Q3,G3,Ur,F3,$3,tf,xt,zx=`<code class="language-svelte"><span class="token comment">&lt;!-- +layout.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>Hi, I'm a header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>Hello, I'm the footer.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span></code>`,af,oe,W3,Vr,X3,Y3,Jr,Z3,e_,nf,dn,fn,Fy,of,vn,s_,lf,mn,t_,rf,V,a_,Nr,n_,o_,Br,l_,r_,Qr,p_,u_,pf,Y,i_,Gr,c_,d_,Fr,f_,v_,$r,m_,uf,zt,Mx=`<code class="language-fs">📂 src
┣ 📁 routes
┗ 📂 lib
  ┗ 📂 components
    ┗ 📜 Header.svelte</code>`,cf,kn,Wr,k_,df,vs,E_,Xr,__,q_,ff,Mt,Lx=`<code class="language-svelte"><span class="token comment">&lt;!-- Header.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/blog<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/about<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>About<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/contact<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Contact<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span></code>`,vf,y,b_,Yr,C_,y_,Zr,j_,P_,ep,h_,S_,sp,O_,D_,mf,Lt,Tx=`<code class="language-svelte"><span class="token comment">&lt;!-- +layout.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">'$lib/components/Header.svelte'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span> <span class="token punctuation">/></span></span>
<span class="token comment">&lt;!-- The rest of the HTML here --></span></code>`,kf,j,w_,tp,x_,z_,ap,M_,L_,np,T_,H_,op,K_,g_,Ef,En,I_,_f,_n,A_,qf,qn,R_,bf,bn,U_,Cf,ms,V_,lp,J_,N_,yf,le,B_,rp,Q_,G_,pp,F_,$_,jf,Tt,Hx=`<code class="language-svelte"><span class="token comment">&lt;!-- Header.svelte --></span>

<span class="token comment">&lt;!-- ... The rest of the file's contents here --></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">header</span> <span class="token punctuation">&#123;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> lightskyblue<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">flex-wrap</span><span class="token punctuation">:</span> wrap<span class="token punctuation">;</span>
    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token selector">ul</span> <span class="token punctuation">&#123;</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">list-style-type</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">gap</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>

  <span class="token selector">a</span> <span class="token punctuation">&#123;</span>
    <span class="token property">text-decoration</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code>`,Pf,re,W_,up,X_,Y_,ip,Z_,eq,hf,ks,sq,cp,tq,aq,Sf,P,nq,dp,oq,lq,fp,rq,pq,vp,uq,iq,mp,cq,dq,Of,Cn,fq,Df,Es,vq,kp,mq,kq,wf,J,Eq,Ep,_q,qq,_p,bq,Cq,qp,yq,jq,xf,Ht,Kx=`<code class="language-fs">📂 src
┣ 📁 routes
┗ 📂 lib
  ┣ 📁 components
  ┗ 📂 styles
    ┗ 📜 style.css </code>`,zf,yn,Qe,Pq,bp,hq,Sq,Cp,Oq,Dq,Mf,jn,wq,Lf,Kt,gx=`<code class="language-css"><span class="token comment">/* style.css */</span>
<span class="token selector">body</span> <span class="token punctuation">&#123;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">background</span><span class="token punctuation">:</span> #eee<span class="token punctuation">;</span>
  <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>
  <span class="token property">font-family</span><span class="token punctuation">:</span> sans-serif<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token selector">main</span> <span class="token punctuation">&#123;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 1rem<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 2rem auto<span class="token punctuation">;</span>
  <span class="token property">max-width</span><span class="token punctuation">:</span> 40rem<span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,Tf,_s,xq,yp,zq,Mq,Hf,gt,Ix=`<code class="language-svelte"><span class="token comment">&lt;!-- +layout.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> Header <span class="token keyword">from</span> <span class="token string">'$lib/components/Header.svelte'</span>
  <span class="token keyword">import</span> <span class="token string">'$lib/styles/style.css'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- ...HTML here --></span></code>`,Kf,Pn,Lq,gf,pe,Tq,jp,Hq,Kq,Pp,gq,Iq,If,hn,It,Aq,hp,Rq,Uq,Af,Sn,Vq,Rf,qs,Jq,Sp,Nq,Bq,Uf,On,Op,Dn,Dp,Qq,Gq,Vf,ue,Fq,wp,$q,Wq,xp,Xq,Yq,Jf,At,Ax='<code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-D</span> svelte-preprocess sass</code>',Nf,wn,v,Zq,zp,eb,sb,Mp,tb,ab,Lp,nb,ob,Tp,lb,rb,Hp,pb,ub,Kp,ib,cb,xn,db,fb,Bf,zn,vb,Qf,Mn,mb,Gf,Ln,kb,Ff,Rt,Rx=`<code class="language-js"><span class="token comment">// svelte.config.js</span>
<span class="token keyword">import</span> sveltePreprocess <span class="token keyword">from</span> <span class="token string">'svelte-preprocess'</span>

<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">kit</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* ...other kit options here already */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>

  <span class="token literal-property property">preprocess</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">sveltePreprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`,$f,bs,Eb,gp,_b,qb,Wf,ie,bb,Ip,Cb,yb,Ap,jb,Pb,Xf,Tn,Z,hb,Rp,Sb,Ob,Up,Db,wb,Cs,xb,Vp,zb,Mb,Yf,Hn,Lb,Zf,Kn,Tb,ev,ce,Hb,Jp,Kb,gb,Np,Ib,Ab,sv,Ut,Ux=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>scss<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
// We can write SCSS here!
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code>`,tv,gn,Rb,av,h,Ub,Bp,Vb,Jb,Qp,Nb,Bb,Gp,Qb,Gb,Fp,Fb,$b,nv,Vt,Vx=`<code class="language-svelte"><span class="token comment">&lt;!-- +layout.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">import</span> <span class="token string">'$lib/styles/style.scss'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code>`,ov,In,Wb,lv,An,Xb,rv,ys,Yb,Jt,Zb,e5,pv,js,s5,$p,t5,a5,uv,Rn,n5,iv,de,Wp,o5,l5,Xp,r5,p5,Nt,u5,Yp,i5,c5,cv,Un,d5,dv,Bt,Jx='<code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-D</span> mdsvex</code>',fv,Ps,f5,Zp,v5,m5,vv,Qt,Nx=`<code class="language-js"><span class="token comment">// svelte.config.js</span>
<span class="token comment">/* Other imports here */</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> mdsvex <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'mdsvex'</span>

<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">kit</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* Kit options here */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  
  <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.svelte'</span><span class="token punctuation">,</span> <span class="token string">'.md'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

  <span class="token literal-property property">preprocess</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">sveltePreprocess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">mdsvex</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>
      <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.md'</span><span class="token punctuation">]</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">&#125;</span></code>`,mv,Vn,k5,kv,hs,Ge,E5,eu,_5,q5,su,b5,C5,y5,fe,j5,tu,P5,h5,au,S5,O5,nu,D5,Ev,Gt,ou,w5,x5,_v,Jn,z5,qv,Nn,M5,bv,Bn,L5,Cv,Qn,T5,yv,Fe,H5,lu,K5,g5,ru,I5,jv,Ft,Bx=`<code class="language-fs">📂 src
┗ 📂 routes
  ┗ 📂 uses
    ┗  📜 +page.md</code>`,Pv,$t,Qx=`<code class="language-md"><span class="token title important"><span class="token punctuation">#</span> Uses</span>

<span class="token bold"><span class="token punctuation">**</span><span class="token content">Here's some stuff I use</span><span class="token punctuation">**</span></span>

<span class="token list punctuation">-</span> SvelteKit
<span class="token list punctuation">-</span> VS Code
<span class="token list punctuation">-</span> Emojis 😎</code>`,hv,Gn,A5,Sv,Fn,R5,Ov,$n,U5,Dv,Ss,V5,pu,J5,N5,wv,Wn,B5,xv,Os,Q5,Wt,G5,F5,zv,Xt,Gx=`<code class="language-js"><span class="token comment">// JavaScript goes here,</span>
<span class="token comment">// And will be syntax-highlighted!</span></code>`,Mv,ve,$5,uu,W5,X5,Yt,Y5,Z5,Lv,Xn,e4,Tv,Yn,s4,Hv,Ds,t4,Zt,a4,n4,Kv,ea,Fx=`<code class="language-md"><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml"># frontmatter goes here</span>
<span class="token punctuation">---</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span>
import SomeComponent from '$lib/components/SomeComponent.svelte'
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token title important"><span class="token punctuation">#</span> Markdown content here</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SomeComponent</span> <span class="token punctuation">/></span></span>

More markdown <span class="token italic"><span class="token punctuation">_</span><span class="token content">here</span><span class="token punctuation">_</span></span>!</code>`,gv,Zn,sa,o4,iu,l4,r4,Iv,eo,p4,Av,so,u4,Rv,to,cu,i4,Uv,ao,c4,Vv,ws,d4,du,f4,v4,Jv,me,m4,fu,k4,E4,vu,_4,q4,Nv,no,b4,Bv,ta,$x=`<code class="language-fs">📂 src
┗ 📂 routes
  ┗ 📂 blog
    ┣ 📜 +page.svelte
    ┣ 📜 1.md
    ┗ 📜 2.md</code>`,Qv,oo,C4,Gv,aa,Wx=`<code class="language-md"><span class="token front-matter-block"><span class="token punctuation">---</span>
<span class="token front-matter yaml language-yaml">title: Un titre de post
date: "2021-12-14"</span>
<span class="token punctuation">---</span></span>
Bonjour, ceci est un <span class="token italic"><span class="token punctuation">_</span><span class="token content">billet de blog.</span><span class="token punctuation">_</span></span>
<span class="token bold"><span class="token punctuation">**</span><span class="token content">Enchanté!</span><span class="token punctuation">**</span></span></code>`,Fv,S,y4,mu,j4,P4,ku,h4,S4,Eu,O4,D4,_u,w4,x4,$v,lo,qu,z4,Wv,ro,M4,Xv,ke,L4,bu,T4,H4,Cu,K4,g4,Yv,na,Xx=`<code class="language-fs">📂 src
┗ 📂 routes
  ┗ 📂 blog
    ┣ 📜 +page.svelte
    ┣ 📜 1.md
    ┣ 📜 2.md
    ┗ 📂 [slug]</code>`,Zv,O,I4,yu,A4,R4,ju,U4,V4,Pu,J4,N4,hu,B4,Q4,em,xs,G4,Su,F4,$4,sm,zs,W4,Ou,X4,Y4,tm,po,Z4,am,Ee,e6,Du,s6,t6,oa,a6,n6,nm,uo,o6,om,_e,l6,wu,r6,p6,xu,u6,i6,lm,qe,c6,zu,d6,f6,Mu,v6,m6,rm,be,k6,Lu,E6,_6,Tu,q6,b6,pm,io,C6,um,la,Yx=`<code class="language-fs">📂 src
┗ 📂 routes
  ┗ 📂 any-route
    ┣ 📜 +page.js -- Précharge les données
    ┗ 📜 +page.svelte -- Génère la page</code>`,im,co,Ms,y6,Hu,j6,P6,Ku,h6,cm,Ls,S6,gu,O6,D6,dm,ra,Zx=`<code class="language-fs">📂 src
┗ 📂 routes
  ┗ 📂 blog
    ┗ 📂 [slug]
      ┗ +page.js</code>`,fm,Ce,w6,Iu,x6,z6,Au,M6,L6,vm,pa,ez=`<code class="language-js"><span class="token comment">// src/routes/blog/[slug]/+page.js</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> params <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> post <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">../</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>params<span class="token punctuation">.</span>slug<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">.md</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> title<span class="token punctuation">,</span> date <span class="token punctuation">&#125;</span> <span class="token operator">=</span> post<span class="token punctuation">.</span>metadata
  <span class="token keyword">const</span> content <span class="token operator">=</span> post<span class="token punctuation">.</span>default

  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
    content<span class="token punctuation">,</span>
    title<span class="token punctuation">,</span>
    date<span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,mm,fo,T6,km,ye,je,H6,Ru,K6,g6,Uu,I6,A6,Vu,T,R6,Ju,U6,V6,Nu,J6,N6,Bu,B6,Q6,Qu,G6,F6,$6,H,W6,Gu,X6,Y6,Fu,Z6,e7,$u,s7,t7,Wu,a7,n7,o7,$e,l7,Xu,r7,p7,Yu,u7,i7,Em,Pe,c7,Zu,d7,f7,ei,v7,m7,_m,ua,sz=`<code class="language-fs">📂 src
┗ 📂 routes
  ┗ 📂 blog
    ┗ 📂 [slug]
      ┣ +page.js
      ┗ +page.svelte</code>`,qm,Ts,k7,si,E7,_7,bm,he,q7,ti,b7,C7,ai,y7,j7,Cm,ia,tz=`<code class="language-svelte"><span class="token comment">&lt;!-- src/routes/[slug]/+page.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">let</span> data<span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">&#123;</span> data<span class="token punctuation">.</span>title <span class="token punctuation">&#125;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Published: <span class="token language-javascript"><span class="token punctuation">&#123;</span>data<span class="token punctuation">.</span>date<span class="token punctuation">&#125;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">svelte:</span>component</span> <span class="token attr-name">this=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>data<span class="token punctuation">.</span>content<span class="token punctuation">&#125;</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span></code>`,ym,vo,P7,jm,mo,h7,Pm,ko,Se,S7,ni,O7,D7,oi,w7,x7,li,z7,hm,Oe,M7,ri,L7,T7,pi,H7,K7,Sm,Eo,g7,Om,ca,az=`<code class="language-svelte"><span class="token comment">&lt;!-- Alternate approach! 👀 --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">export</span> <span class="token keyword">let</span> data
  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> title<span class="token punctuation">,</span> date<span class="token punctuation">,</span> Content <span class="token punctuation">&#125;</span> <span class="token operator">=</span> data
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">&#123;</span>title<span class="token punctuation">&#125;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Published: <span class="token language-javascript"><span class="token punctuation">&#123;</span>date<span class="token punctuation">&#125;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span></code>`,Dm,_o,I7,wm,qo,We,A7,ui,R7,U7,ii,V7,J7,xm,bo,N7,zm,Co,B7,Mm,Hs,Q7,da,G7,F7,Lm,yo,$7,Tm,jo,W7,Hm,De,Po,X7,ci,Y7,Z7,K,e9,di,s9,t9,fa,a9,n9,fi,o9,l9,vi,r9,p9,u9,Xe,i9,mi,c9,d9,va,f9,v9,Km,D,m9,ki,k9,E9,Ei,_9,q9,_i,b9,C9,qi,y9,j9,gm,Ye,bi,P9,h9,ma,S9,O9,Im,ho,D9,Am,N,w9,Ci,x9,z9,yi,M9,L9,ji,T9,H9,Rm,ka,nz=`<code class="language-fs">src
┗ 📂 routes
  ┗ 📂 api
    ┗ 📂 posts
      ┗ 📜 +server.js</code>`,Um,Ks,K9,Pi,g9,I9,Vm,So,A9,Jm,Ea,oz=`<code class="language-js"><span class="token comment">// +server.js</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">GET</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token punctuation">(</span><span class="token string">'Welcome to my API'</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`,Nm,gs,R9,hi,U9,V9,Bm,Oo,J9,Qm,Do,_a,N9,Si,B9,Q9,Gm,wo,G9,Fm,xo,F9,$m,Is,$9,Oi,W9,X9,Wm,qa,lz=`<code class="language-fs">📂 src
┗ 📂 lib
  ┗ 📂 utils
    ┗ 📜 index.js</code>`,Xm,As,Y9,Di,Z9,e8,Ym,ba,rz=`<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">fetchMarkdownPosts</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> allPostFiles <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">'/src/routes/blog/*.md'</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> iterablePostFiles <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>allPostFiles<span class="token punctuation">)</span>
  
  <span class="token keyword">const</span> allPosts <span class="token operator">=</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>
    iterablePostFiles<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>path<span class="token punctuation">,</span> resolver<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> metadata <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">resolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> postPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span>

      <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
        <span class="token literal-property property">meta</span><span class="token operator">:</span> metadata<span class="token punctuation">,</span>
        <span class="token literal-property property">path</span><span class="token operator">:</span> postPath<span class="token punctuation">,</span>
      <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>

  <span class="token keyword">return</span> allPosts
<span class="token punctuation">&#125;</span></code>`,Zm,zo,s8,e1,we,g,wi,t8,a8,xi,n8,o8,zi,l8,r8,Mi,p8,u8,Li,Ti,i8,c8,Ca,d8,Hi,f8,v8,m8,Mo,k8,Ki,E8,s1,Lo,_8,t1,Rs,To,q8,gi,b8,C8,Ho,y8,Ii,j8,a1,_,P8,Ai,h8,S8,Ri,O8,D8,Ui,w8,x8,Vi,z8,M8,Ji,L8,T8,n1,Ko,H8,o1,go,K8,l1,Us,g8,Ni,I8,A8,r1,ya,pz=`<code class="language-js"><span class="token comment">// src/routes/api/posts/+server.js</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> fetchMarkdownPosts <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'$lib/utils'</span>
<span class="token keyword">import</span> <span class="token punctuation">&#123;</span> json <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@sveltejs/kit'</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">GET</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> allPosts <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetchMarkdownPosts</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> sortedPosts <span class="token operator">=</span> allPosts<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>date<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>date<span class="token punctuation">)</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token function">json</span><span class="token punctuation">(</span>sortedPosts<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`,p1,xe,R8,Bi,U8,V8,Qi,J8,N8,u1,Io,B8,i1,B,ja,Q8,Gi,G8,F8,$8,Fi,W8,X8,$i,Y8,Z8,Vs,e0,Wi,s0,t0,Xi,a0,c1,Js,n0,Yi,o0,l0,d1,Ao,r0,f1,Ro,p0,v1,Uo,Ze,u0,Zi,i0,c0,ec,d0,f0,m1,Vo,v0,k1,Ns,m0,sc,k0,E0,E1,Q,_0,tc,q0,b0,ac,C0,y0,nc,j0,P0,_1,Jo,h0,q1,G,S0,oc,O0,D0,lc,w0,x0,rc,z0,M0,b1,Bs,L0,pc,T0,H0,C1,ze,No,K0,Pa,Qs,uc,g0,I0,ic,A0,R0,U0,Gs,cc,V0,J0,dc,N0,B0,Q0,Fs,fc,G0,F0,vc,$0,W0,X0,q,mc,Y0,Z0,kc,eC,sC,Ec,tC,aC,_c,nC,oC,qc,lC,rC,bc,pC,uC,y1,ha,uz=`<code class="language-js"><span class="token comment">// src/routes/blog/+page.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">load</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> fetch <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">/api/posts</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> posts <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>
    posts
  <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span></code>`,j1,F,iC,Cc,cC,dC,yc,fC,vC,jc,mC,kC,P1,Sa,iz=`<code class="language-svelte"><span class="token comment">&lt;!-- src/routes/blog/+page.svelte --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">let</span> data
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
  
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
  <span class="token each"><span class="token punctuation">&#123;</span><span class="token keyword">#each</span> <span class="token language-javascript">data<span class="token punctuation">.</span>posts </span><span class="token keyword">as</span> <span class="token language-javascript">post<span class="token punctuation">&#125;</span></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span>post<span class="token punctuation">.</span>path<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>
          <span class="token language-javascript"><span class="token punctuation">&#123;</span>post<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>title<span class="token punctuation">&#125;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
      Publié le <span class="token language-javascript"><span class="token punctuation">&#123;</span>post<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>date<span class="token punctuation">&#125;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
  <span class="token each"><span class="token punctuation">&#123;</span><span class="token keyword">/each</span><span class="token punctuation">&#125;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code>`,h1,Bo,EC,S1,Qo,_C,O1,Go,qC,D1,Fo,bC,w1,$,CC,Pc,yC,jC,hc,PC,hC,Oa,SC,OC,x1,$s,DC,Da,wC,xC,z1,wa,zC,Sc,MC,M1,xa,cz='<code class="language-bash"><span class="token function">npm</span> i <span class="token parameter variable">-D</span> @sveltejs/adapter-static</code>',L1,w,LC,Oc,TC,HC,Dc,KC,gC,wc,IC,AC,xc,RC,UC,T1,za,dz=`<code class="language-js"><span class="token comment">// Replace the original &#96;adapter-auto&#96; line with this in svelte.config.js</span>
<span class="token keyword">import</span> adapter <span class="token keyword">from</span> <span class="token string">'@sveltejs/adapter-static'</span></code>`,H1,f,VC,zc,JC,NC,Mc,BC,QC,Lc,GC,FC,Tc,$C,WC,Hc,XC,YC,Kc,ZC,ey,gc,sy,ty,Ic,ay,ny,K1,Ma,fz=`<code class="language-js"><span class="token comment">// src/routes/+layout.js</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> prerender <span class="token operator">=</span> <span class="token boolean">true</span></code>`,g1,x,oy,Ac,ly,ry,Rc,py,uy,Uc,iy,cy,Vc,dy,fy,I1,Ws,vy,La,my,ky,A1,R1,U1,$o,Ey,V1,Wo,es,_y,Jc,qy,by,Nc,Cy,yy,J1,Xs,jy,Bc,Py,hy,N1,Xo,Sy,B1,Yo,Ta,Oy,Ha,Dy,wy;return{c(){ts=o("p"),Fk=a("En démarrant la refonte de mon site perso j’avais plusieurs objectifs en tête:"),Zc=i(),ee=o("ul"),Hl=o("li"),$k=a("me familiariser avec Svelte et SvelteKit à travers un projet qui me tient à coeur"),Wk=i(),Kl=o("li"),Xk=a("documenter ma progression, ainsi que les difficultés rencontrées, les solutions, et les améliorations au fil du temps, jusqu’à obtenir le site et les fonctionnalités que je voulais"),Yk=i(),gl=o("li"),Zk=a("contribuer en français à la documentation autour de ces nouveaux outils qui est très limitée dans cette langue."),ed=i(),as=o("p"),eE=a("En faisant des recherches préliminaires je suis tombé sur "),ct=o("a"),sE=a("l’excellent billet de Josh Collinsworth"),tE=a(" sur son blog, qui m’a permis de démarrer et d’appréhender les différentes facettes de SvelteKit."),sd=i(),Ra=o("p"),aE=a("Sa concision et sa pédagogie sont un modèle pour la transmission d’informations, aussi ai-je demandé à Josh si je pouvais adapter son billet et le traduire pour en faire profiter les personnes francophones désireuses de se lancer à leur tour dans l’apprentissage de ces nouveaux outils."),td=i(),ns=o("p"),nE=a("Merci encore à Josh pour son aide ! À noter que son site, "),dt=o("a"),oE=a("https://joshcollinsworth.com/"),lE=a(" , est lui aussi entièrement fait avec Svelte et SvelteKit, et qu’il contient de nombreux articles tout aussi passionnants et informatifs que celui que j’ai choisi de traduire aujourd’hui, n’hésitez pas à y faire un tour."),ad=i(),nd=o("hr"),od=i(),Ua=o("h2"),rE=a("Ce que nous allons faire, et ce qu’il faut savoir avant de commencer"),ld=i(),Va=o("p"),pE=a("Cet article est un tutoriel pour créer un blog statique pré-rendu avec l’aide de SvelteKit, Markdown, Sass et une API (ce site est construit comme cela, au fait)"),rd=i(),Ja=o("p"),uE=a("C’est aussi une introduction à SvelteKit en soi, avec une bonne vue d’ensemble des fondamentaux qui devraient être utilisables pour n’importe quel projet."),pd=i(),os=o("p"),iE=a("C’est en dernier lieu "),Il=o("em"),cE=a("fun"),dE=a("!*"),ud=i(),ft=o("p"),fE=a("*"),Al=o("em"),vE=a("mon avis perso"),id=i(),Na=o("h2"),mE=a("Vous bénéficierez le plus de ce tuto si vous:"),cd=i(),C=o("ul"),Rl=o("li"),kE=a("connaissez déjà les bases du développement front-end et de JavaScript;"),EE=i(),vt=o("li"),_E=a("avez au préalable une connaissance basique de Svelte (vous pouvez certainement suivre l’article sans ça, mais je recommande de lire le "),mt=o("a"),qE=a("tutoriel de Svelte"),bE=a(" d’abord si vous êtes complètement novices)"),CE=i(),Ul=o("li"),yE=a("connaissez les bases de Markdown et de Sass;"),jE=i(),Vl=o("li"),PE=a("connaissez les bases de récupérer des données en JSON depuis une API"),hE=i(),Jl=o("li"),SE=a("savez déjà installer des paquets avec npm"),dd=i(),ls=o("p"),OE=a("Pour finir, si vous ne souhaitez pas faire tout le tutoriel et préféreriez avoir directement la structure complète du blog clé en main, allez voir "),kt=o("a"),DE=a("le dossier de démarrage SvelteKit"),wE=a(" (c’est plus abouti que ce qu’on va fabriquer ici, mais les concepts sous-jacents sont les mêmes.)"),fd=i(),Ba=o("p"),xE=a("C’est parti !"),vd=i(),Qa=o("h2"),zE=a("Créer une nouvelle application SvelteKit"),md=i(),rs=o("p"),ME=a("Pour générer un nouveau projet SvelteKit, exécutez cette commande dans votre terminal (évidemment, vous pouvez changer "),Nl=o("code"),LE=a("my-app"),TE=a(" pour n’importe quel autre nom que vous préférez)"),kd=i(),Et=o("pre"),Ed=i(),ps=o("p"),HE=a("Quand vous exécutez la commande "),Bl=o("code"),KE=a("init"),gE=a(" pour démarrer, SvelteKit va vous poser quelques questions sur votre projet et ce que vous voulez faire:"),_d=i(),Ga=o("p"),Fa=o("img"),qd=i(),se=o("p"),IE=a("Nous allons choisir l’option "),Ql=o("strong"),AE=a("“Skeleton project”"),RE=a(" ("),Gl=o("em"),UE=a("attention, pas Library skeleton project, car nous simplement faisons un site, pas une librairie"),VE=a(")"),bd=i(),$a=o("blockquote"),Fl=o("p"),JE=a("Si c’est la première fois que vous utilisez SvelteKit, n’hésitez pas à choisir “SvelteKit demo app”, explorer un peu le projet pour se faire une idée de comment ça marche, et revenir après. C’est une bonne introduction, mais c’est fourni avec plusieurs fichiers et styles qui prendraient du temps à effacer pour commencer"),Cd=i(),Wa=o("p"),NE=a("L’outil de préparation va également demander vos préférences au sujet de TypeScript, ESlint et Prettier. Je n’utiliserai pas TypeScript pour rester simple dans ce tutoriel, mais vous pouvez l’utiliser si vous le souhaitez (Svelte marche plutôt bien avec.)"),yd=i(),us=o("p"),BE=a("Après avoir fait vos choix et quelques secondes d’installation, vous devriez voir apparaître "),$l=o("code"),QE=a("Your project is ready!"),GE=a(" dans votre terminal, ainsi que les prochaines étapes et des liens utiles:"),jd=i(),Xa=o("p"),Ya=o("img"),Pd=i(),Za=o("p"),FE=a("À ce moment-là, ouvrez votre projet dans VS Code (ou dans votre éditeur de texte préféré). Puis installez les dépendances dans le terminal et lancez le serveur de développement:"),hd=i(),_t=o("pre"),Sd=i(),en=o("p"),$E=a("Terminez ces commandes et votre nouveau site s’affichera dans la fenêtre de votre navigateur"),Od=i(),sn=o("p"),tn=o("img"),Dd=i(),an=o("p"),WE=a("Le squelette tel quel n’est pas très excitant, et il n’y a même pas de CSS. Mais c’est okay; ça nous laisse le champ libre pour personnaliser notre application comme on le souhaite, sans avoir à supprimer ou à modifier du code déjà présent."),wd=i(),nn=o("p"),XE=a("C’est notre canvas blanc, et nous allons prochainement peindre dessus."),xd=i(),on=o("h2"),YE=a("Créer des routes dans SvelteKit"),zd=i(),te=o("p"),ZE=a("Comme beaucoup de frameworks (et PHP également, en fait), SvelteKit a une approche du "),Wl=o("em"),e2=a("routing"),s2=a(" et des pages formée sur les dossiers et les fichiers; la structure de "),Xl=o("code"),t2=a("src/routes"),a2=a(" va définir la structure de votre site."),Md=i(),ae=o("p"),n2=a("N’importe quel dossier dans "),Yl=o("code"),o2=a("src/routes"),l2=a(" devient le nom d’une page. Un fichier "),Zl=o("code"),r2=a("+page.svelte"),p2=a(" à l’intérieur de ce dossier constitue le contenu HTML de la page."),Ld=i(),is=o("p"),u2=a("Du coup, à l’intérieur de "),er=o("code"),i2=a("src/route"),c2=a(":"),Td=i(),A=o("ul"),ln=o("li"),sr=o("code"),d2=a("+page.svelte"),f2=a(" est la page d’accueil"),v2=i(),qt=o("li"),tr=o("code"),m2=a("a-propos/+page.svelte"),k2=a(" serait la page "),ar=o("code"),E2=a("/a-propos"),_2=i(),bt=o("li"),nr=o("code"),q2=a("blog/+page.svelte"),b2=a(" serait la page "),or=o("code"),C2=a("/blog"),y2=i(),Ct=o("li"),lr=o("code"),j2=a("blog/un-post/+page.svelte"),P2=a(" deviendrait "),rr=o("code"),h2=a("/blog/un-post"),Hd=i(),rn=o("blockquote"),X=o("p"),S2=a("La convention de "),pr=o("code"),O2=a("+page.svelte"),D2=a(" peut prêter à confusion ou sembler inutilement complexe, surtout si vous étiez habitué·e·s à l’ancienne convention "),ur=o("code"),w2=a("index.svelte"),x2=a(". Mais comme nous le verrons prochainement, le préfixe "),ir=o("code"),z2=a("+"),M2=a(" permet de faire la différence entre les pages et les composants. Il y a d’autres choses également que l’ont peut rajouter aux routes en plus des pages, comme des chemins dynamiques de serveur; nous verrons cela plus tard."),Kd=i(),pn=o("h3"),L2=a("Ajouter des pages"),gd=i(),m=o("p"),T2=a("Histoire de démarrer avec quelques pages sur notre site, créons les dossiers "),cr=o("code"),H2=a("a-propos"),K2=a(", "),dr=o("code"),g2=a("contact"),I2=a(" et "),fr=o("code"),A2=a("blog"),R2=a(" à l’intérieur de "),vr=o("code"),U2=a("src/routes"),V2=a(` (on peut toujours les supprimer ou les modifier plus tard.)
Dans chacun de ces dossiers nous ajouterons un fichier `),mr=o("code"),J2=a("+page.svelte"),N2=a(`, pour générer le contenu de la page, ce que les personnes verront lorsqu’elles navigueront vers cette route du site.
Dans chacun de ces fichiers insérons un petit `),kr=o("em"),B2=a("header"),Q2=a(" et un peu de texte, juste pour avoir un peu de contenu"),Id=i(),un=o("blockquote"),Er=o("p"),G2=a("Les fichiers Svelte peuvent être du HTML pur."),Ad=i(),yt=o("p"),F2=a("dans "),_r=o("code"),$2=a("a-propos/+page.svelte"),Rd=i(),jt=o("pre"),Ud=i(),Pt=o("p"),W2=a("dans "),qr=o("code"),X2=a("contact/+page.svelte"),Vd=i(),ht=o("pre"),Jd=i(),St=o("p"),Y2=a("dans "),br=o("code"),Z2=a("blog/+page.svelte"),Nd=i(),Ot=o("pre"),Bd=i(),cs=o("p"),e3=a("Notre dossier "),Cr=o("code"),s3=a("src/routes"),t3=a(" devrait ressembler à cela maintenant:"),Qd=i(),Dt=o("pre"),Gd=i(),k=o("p"),a3=a("Vous pouvez à présent visiter "),yr=o("code"),n3=a("/contact"),o3=a(", "),jr=o("code"),l3=a("/a-propos"),r3=a(" ou "),Pr=o("code"),p3=a("/blog"),u3=a(" et voir les pages que vous venez de créer. Il n’y a pas grand-chose encore, bien sûr, mais c’est chouette de voir au moins que le "),hr=o("em"),i3=a("routing"),c3=a(" est pris en charge automatiquement juste en créant des dossiers à l’intérieur de "),Sr=o("code"),d3=a("routes"),f3=a(" et en y ajoutant des fichiers "),Or=o("code"),v3=a("+page.svelte"),m3=a(" à l’intérieur."),Fd=i(),cn=o("h3"),k3=a("Ajouter un layout"),$d=i(),R=o("p"),E3=a("La plupart des sites et des applications ont des éléments qui sont réutilisés sur chaque page (les exemples les plus communs sont un "),Dr=o("code"),_3=a("header"),q3=a(" et un "),wr=o("code"),b3=a("footer"),C3=a(".) Etant donné qu’ajouter ces éléments à la main dans chaque page serait à la fois répétitif et augmente le risque de faire une erreur, SvelteKit (comme beaucoup de frameworks) nous facilite la tâche et permet de définir des "),xr=o("em"),y3=a("layouts"),j3=a("."),Wd=i(),ne=o("p"),P3=a("Dans "),zr=o("code"),h3=a("src/routes"),S3=a(", créons un nouveau fichier appelé "),Mr=o("code"),O3=a("+layout.svelte"),D3=a("."),Xd=i(),wt=o("pre"),Yd=i(),L=o("p"),Lr=o("strong"),w3=a("Ce fichier a un rôle spécial:"),x3=a(" SvelteKit vérifie automatiquement s’il y a un fichier "),Tr=o("code"),z3=a("+layout.svelte"),M3=a(" dans le dossier "),Hr=o("code"),L3=a("routes"),T3=a(" (et tous les sous-dossiers). Ce "),Kr=o("em"),H3=a("layout"),K3=a(" va s’appliquer à tout le contenu chargé depuis cette route et les sous-routes."),Zd=i(),ds=o("p"),g3=a("Un "),gr=o("em"),I3=a("layout"),A3=a(" devient un composant parent, et la page actuelle sera insérée dedans en tant que composant enfant."),ef=i(),fs=o("p"),R3=a("Donc un "),Ir=o("em"),U3=a("layout"),V3=a(" directement placé dans le dossier routes va s’appliquer de manière globale, sur chaque page."),sf=i(),U=o("p"),J3=a("Faisons un exemple pour illustrer ça: ouvrez le nouveau "),Ar=o("code"),N3=a("+layout.svelte"),B3=a(" et ajoutez un "),Rr=o("em"),Q3=a("header"),G3=a(" et "),Ur=o("em"),F3=a("footer"),$3=a(" modèle:"),tf=i(),xt=o("pre"),af=i(),oe=o("p"),W3=a("Sauvegardez et vous devriez voir le texte du "),Vr=o("em"),X3=a("header"),Y3=a(" apparaître au-dessus du contenu de la page, et le texte du "),Jr=o("em"),Z3=a("footer"),e_=a(" en-dessous."),nf=i(),dn=o("p"),fn=o("img"),of=i(),vn=o("h2"),s_=a("Créer des composants"),lf=i(),mn=o("p"),t_=a("Taper le chemin des routes dans le navigateur n’est pas terrible alors ajoutons un peu de navigation. On en profitera pour créer notre premier composant."),rf=i(),V=o("p"),a_=a("D’abord, créez un nouveau dossier appelé "),Nr=o("code"),n_=a("lib"),o_=a(" à l’intérieur de "),Br=o("code"),l_=a("src"),r_=a(" ("),Qr=o("code"),p_=a("lib"),u_=a(" est une autre convention de SvelteKit; on en reparle plus tard)."),pf=i(),Y=o("p"),i_=a("A l’intérieur de "),Gr=o("code"),c_=a("src/lib"),d_=a(", on va créer un dossier appelé "),Fr=o("code"),f_=a("components"),v_=a(", juste pour s’y retrouver, et dans ce dossier créez un nouveau composant appelé "),$r=o("code"),m_=a("Header.svelte"),uf=i(),zt=o("pre"),cf=i(),kn=o("blockquote"),Wr=o("p"),k_=a("Ce n’est pas obligatoire de nommer les composants avec une majuscule, ou de les garder dans leur propre dossier, mais c’est en général encouragé."),df=i(),vs=o("p"),E_=a("Dans notre nouveau composant "),Xr=o("code"),__=a("Header"),q_=a(" on va insérer une navigation basique mais efficace"),ff=i(),Mt=o("pre"),vf=i(),y=o("p"),b_=a("Sauvegardez tout ça et revenez sur "),Yr=o("code"),C_=a("+layout.svelte"),y_=a(` pour l’utiliser !
Pour ce faire, nous devons d’abord l’importer avec `),Zr=o("code"),j_=a("import"),P_=a(", ce qui veut dire que nous devons ajouter un tag "),ep=o("code"),h_=a("<script>"),S_=a(" à notre layout (je préfère l’ajouter tout en haut du fichier, mais Svelte est assez permissif et permet d’organiser l’ordre des composants comme vous voulez.) Une fois importé, on peut remplacer le "),sp=o("em"),O_=a("header"),D_=a(" temporaire avec le composant"),mf=i(),Lt=o("pre"),kf=i(),j=o("p"),w_=a("Remarquez le chemin de l’"),tp=o("code"),x_=a("import"),z_=a(". "),ap=o("code"),M_=a("$lib"),L_=a(" est un alias pratique qui pointe directement vers "),np=o("code"),T_=a("src/lib"),H_=a(", ce qui évite de devoir péniblement taper des chemins relatifs (vous pouvez personnaliser cet alias ou ajouter le vôtre dans "),op=o("code"),K_=a("jsconfig.json"),g_=a(", mais je n’aborderai pas ce sujet ici.)"),Ef=i(),En=o("p"),I_=a("Quoi qu’il en soit, vous devriez voir maintenant quelque chose d’un peu plus ergonomique pour l’utilisateur·rice:"),_f=i(),_n=o("p"),A_=a("img screen"),qf=i(),qn=o("p"),R_=a("L’apparence n’est toujours pas en place, mais c’est fonctionnel. On peut désormais naviguer entre les pages, ce qui va permettre de tester les choses un peu plus facilement."),bf=i(),bn=o("h3"),U_=a("L’apparence des composants"),Cf=i(),ms=o("p"),V_=a("Le style associé aux composants Svelte a une portée locale ("),lp=o("em"),J_=a("scope"),N_=a(") par défaut. On peut ainsi écrire du CSS sans avoir à se soucier d’effets de débordement à l’extérieur du composant."),yf=i(),le=o("p"),B_=a("Pour tester cela, ajoutons un tag "),rp=o("code"),Q_=a("<style>"),G_=a(" dans le "),pp=o("code"),F_=a("Header.svelte"),$_=a(" (il peut se mettre n’importe où mais je préfère le mettre à la fin.)"),jf=i(),Tt=o("pre"),Pf=i(),re=o("p"),W_=a("Si vous sauvegardez et jetez un oeil au site désormais, vous devriez voir votre "),up=o("em"),X_=a("header"),Y_=a(" avec une apparence plus standard pour un "),ip=o("em"),Z_=a("header"),eq=a(". Vous pouvez également constater que les règles CSS ne s’appliquent pas au contenu principal de la page. C’est le pouvoir de la portée locale !"),hf=i(),ks=o("p"),sq=a("Si vous le souhaitez, vous pouvez répéter ce processus avec un composant "),cp=o("code"),tq=a("<Footer />"),aq=a(". Je passe l’exercice étant donné que c’est la même chose, mais ce serait une bonne chose à faire au stade où on en est."),Sf=i(),P=o("p"),nq=a("Rappel: les composants liées au "),dp=o("em"),oq=a("routing"),lq=a(" (comme les pages, layouts et les points d’accès) commencent par un "),fp=o("code"),rq=a("+"),pq=a(". Les composants normaux, réutilisables n’ont pas ça, et commencent d’ordinaire avec une majuscule (Vous pouvez tout garder dans le dossier "),vp=o("code"),uq=a("routes"),iq=a(", mais c’est souvent préférable d’avoir les composants réutilisables dans "),mp=o("code"),cq=a("lib"),dq=a(" plutôt.)"),Of=i(),Cn=o("h2"),fq=a("Les feuilles de styles dans SvelteKit"),Df=i(),Es=o("p"),vq=a("Svelte vous permet d’importer des feuilles de style directement dans les composants, y compris les pages et les "),kp=o("em"),mq=a("layouts"),kq=a(". Il y a d’autres manières de charger des feuilles de style, mais je pense que c’est la meilleure. D’abord c’est simple, mais surtout Svelte les préprocess automatiquement, ce qui sera pratique lorsqu’on voudra ajouter Sass."),wf=i(),J=o("p"),Eq=a("Créons un nouveau dossier "),Ep=o("code"),_q=a("styles"),qq=a(" dans "),_p=o("code"),bq=a("src/lib"),Cq=a(" et ajoutons un fichier "),qp=o("code"),yq=a("style.css"),jq=a(" à l’intérieur"),xf=i(),Ht=o("pre"),zf=i(),yn=o("blockquote"),Qe=o("p"),Pq=a("Il n’y a pas règles sur comment organiser les choses à l’intérieur de "),bp=o("code"),hq=a("src/lib"),Sq=a(". Vous n’êtes même pas obligé·e·s d’utiliser "),Cp=o("code"),Oq=a("lib"),Dq=a(". Faites selon votre propre logique et/ou vos préférences."),Mf=i(),jn=o("p"),wq=a("Vous pouvez ajouter le CSS que vous voulez, mais si vous avez besoin d’un début, voici une série de règles qui devraient rendre l’ensemble un peu plus joli:"),Lf=i(),Kt=o("pre"),Tf=i(),_s=o("p"),xq=a("Une fois que nous avons la feuille de styles avec du CSS dedans, nous pouvons l’importer de manière globale comme pour le composant "),yp=o("em"),zq=a("Header"),Mq=a(":"),Hf=i(),gt=o("pre"),Kf=i(),Pn=o("p"),Lq=a("img rendu css"),gf=i(),pe=o("p"),Tq=a("Etant donné que SvelteKit est compilé et généré sur le serveur ("),jp=o("em"),Hq=a("server-side rendering"),Kq=a(", ou SSR), on peut inspecter la page et voir que notre CSS a été directement rajouté au HTML au lieu d’être construite côté client ("),Pp=o("em"),gq=a("client-side rendering"),Iq=a(" ou CSR). Chouette !"),If=i(),hn=o("blockquote"),It=o("p"),Aq=a("Importer des feuilles de style dans des fichiers JavaScript n’est pas un standard du web; c’est simplement pris en charge par quelques "),hp=o("em"),Rq=a("bundlers"),Uq=a(" et outils de compilation."),Af=i(),Sn=o("h3"),Vq=a("Ajouter Sass à SvelteKit"),Rf=i(),qs=o("p"),Jq=a("Svelte permet d’ajouter facilement des processeurs externes, grâce à "),Sp=o("code"),Nq=a("[svelte-preprocess](https://github.com/sveltejs/svelte-preprocess)"),Bq=a("."),Uf=i(),On=o("blockquote"),Op=o("p"),Dn=o("em"),Dp=o("code"),Qq=a("svelte-preprocess"),Gq=a(" transforme automatiquement le code dans vos gabarits Svelte pour fournir une prise en charge intégrée de TypeScript, PostCSS, scss/sass, Less, et de nombreuses autres technologies."),Vf=i(),ue=o("p"),Fq=a("La prochaine étape consiste à installer à la fois "),wp=o("code"),$q=a("svelte-preprocess"),Wq=a(" et "),xp=o("code"),Xq=a("sass"),Yq=a(", ce qu’on va faire dans le même mouvement"),Jf=i(),At=o("pre"),Nf=i(),wn=o("blockquote"),v=o("p"),Zq=a("Depuis la version 1.0 SvelteKit est installé avec "),zp=o("code"),eb=a("vitePreprocess"),sb=a(" en tant qu’alternative embarquée de "),Mp=o("code"),tb=a("svelte-preprocess"),ab=a(". Bien que "),Lp=o("code"),nb=a("vitePreprocess"),ob=a(" soit fourni avec SvelteKit, ce qui le rend plus simple à utiliser hors de la boîte, ce n’est toutefois pas à l’heure actuelle aussi versatile que "),Tp=o("code"),lb=a("svelte-preprocess"),rb=a(". Il manque des fonctionnalités qui sont indispensables pour moi, comme le modificateur "),Hp=o("code"),pb=a("global"),ub=a(" pour les styles des composants. C’est pour cela que j’ai préféré garder "),Kp=o("code"),ib=a("svelte-preprocess"),cb=a(" dans ce tutoriel. "),xn=o("a"),db=a("Vous pouvez en lire plus sur les deux préprocesseurs dans la documentation"),fb=a("."),Bf=i(),zn=o("h4"),vb=a("Modifier la configuration Svelte"),Qf=i(),Mn=o("p"),mb=a(`Ensuite, ouvrez le fichier svelte.config.js qu’on trouve à la racine du projet.
Comme son nom l’indique, svelte.config.js est le coeur de, ben la configuration. C’est là que nous effectuerons tous les changements nécessaires concernant les options de SvelteKit et le compilateur.`),Gf=i(),Ln=o("p"),kb=a("Ce changement-ci est minime: nous devons simplement importer svelte-preprocess et l’ajouter à la liste des pré-processeurs de SvelteKit."),Ff=i(),Rt=o("pre"),$f=i(),bs=o("p"),Eb=a("Veuillez notez qu’il faudra créer l’option "),gp=o("code"),_b=a("preprocess"),qb=a(", elle n’est pas là par défaut (on rajoutera le preprocessing de Markdown ici également, plus tard.)"),Wf=i(),ie=o("p"),bb=a("Veuillez également noter que vous "),Ip=o("em"),Cb=a("pouvez"),yb=a(" passer un objet avec plus d’options à l’intérieur de la fonction "),Ap=o("code"),jb=a("sveltePreprocess()"),Pb=a(", mais nous ne ferons pas ça pour l’instant. La fonction sait déjà quoi faire avec Sass par défaut, du coup pas besoin de personnalisation supplémentaire."),Xf=i(),Tn=o("blockquote"),Z=o("p"),hb=a("Ça vaut le coup de mentionner l’option "),Rp=o("code"),Sb=a("scss.prependData"),Ob=a(", qui permet d’injecter automatiquement du code au début de n’importe quel traitement Sass (tel que des variables Sass ou un "),Up=o("code"),Db=a("@import"),wb=a("). Vous pouvez en lire plus dans "),Cs=o("a"),xb=a("la documentation autour de "),Vp=o("code"),zb=a("svelte-preprocess"),Mb=a("; je voulais simplement le mentionner vu que c’est assez pratique."),Yf=i(),Hn=o("p"),Lb=a("Une dernière chose importante à savoir: chaque changement de configuration demande de redémarrer le serveur de développement pour appliquer les nouveaux changements."),Zf=i(),Kn=o("h3"),Tb=a("Ajouter SCSS au style des composants"),ev=i(),ce=o("p"),Hb=a("Maintenant que nous avons à la fois Sass et le pré-processeur installés, nous pouvons utiliser Sass dans n’importe quel bloc de "),Jp=o("code"),Kb=a("<style>"),gb=a(" d’un composant en ajoutant un attribut "),Np=o("code"),Ib=a("lang"),Ab=a(", comme ceci:"),sv=i(),Ut=o("pre"),tv=i(),gn=o("h3"),Rb=a("Utiliser des fichiers SCSS globaux"),av=i(),h=o("p"),Ub=a("Faire référence à des fichiers SCSS se fait de la même manière que pour des fichiers CSS. En fait vous pouvez simplement renommer le fichier existant "),Bp=o("code"),Vb=a("style.css"),Jb=a(" en "),Qp=o("code"),Nb=a("style.scss"),Bb=a(". (Il faudra aussi mettre à jour l’"),Gp=o("code"),Qb=a("import"),Gb=a(" dans notre "),Fp=o("em"),Fb=a("layout"),$b=a(" aussi, mais c’est tout.)"),nv=i(),Vt=o("pre"),ov=i(),In=o("p"),Wb=a("OK, nous avons maintenant une idée assez précise de la structure du projet et de la personnalisation. Il est temps de s’occuper de la dernière pièce du puzzle: la prise en charge de Markdown."),lv=i(),An=o("h2"),Xb=a("Ajouter Markdown à SvelteKit avec mdsvex"),rv=i(),ys=o("p"),Yb=a("Si vous avez entendu parler de MDX (généralement utilisé dans les projets sous React), vous pouvez considérer "),Jt=o("a"),Zb=a("mdsvex"),e5=a(", drôle de nom, comme l’équivalent pour Svelte."),pv=i(),js=o("p"),s5=a("Hélas le mot "),$p=o("em"),t5=a("svelte"),a5=a(" est compliqué à utiliser pour faire des portemanteaux élégants, mais ça n’arrête pas la communauté Svelte pour autant."),uv=i(),Rn=o("p"),n5=a("Quoi qu’il en soit, mdsvex fait tout ce dont nous avons besoin avec Markdown:"),iv=i(),de=o("ul"),Wp=o("li"),o5=a("ça prend en charge la conversion de Markdown vers HTML"),l5=i(),Xp=o("li"),r5=a("ça permet d’utiliser des fichiers Markdown comme des composants"),p5=i(),Nt=o("li"),u5=a("et ça permet d’utiliser des composants Svelte "),Yp=o("em"),i5=a("à l’intérieur"),c5=a(" de Markdown"),cv=i(),Un=o("p"),d5=a("D’abord, installons msdvex"),dv=i(),Bt=o("pre"),fv=i(),Ps=o("p"),f5=a("Ensuite nous devons ajouter mdsvex à notre configuration. Ouvrez "),Zp=o("code"),v5=a("svelte.config.js"),m5=a(" et mofidiez le code pour avoir ceci:"),vv=i(),Qt=o("pre"),mv=i(),Vn=o("p"),k5=a("Pour les détails:"),kv=i(),hs=o("ul"),Ge=o("li"),E5=a("la propriété "),eu=o("code"),_5=a("extensions"),q5=a(" dans "),su=o("code"),b5=a("config"),C5=a(" liste les types de fichiers qu’il faut traiter comme des composants (ce qui permet à Svelte de les importer et de les utiliser comme des composants classiques)"),y5=i(),fe=o("li"),j5=a("la fonction "),tu=o("code"),P5=a("mdsvex()"),h5=a(" pré-processe le Markdown en HTML, mais ça cible uniquement les fichiers "),au=o("code"),S5=a(".svx"),O5=a(" par défaut, alors on modifie cet argument pour inclure également les fichiers "),nu=o("code"),D5=a(".md"),Ev=i(),Gt=o("p"),ou=o("strong"),w5=a("Rappel:"),x5=a(" n’oubliez pas de redémarrer le serveur de développement après avoir effectué les changements de configuration."),_v=i(),Jn=o("p"),z5=a("Si vous rencontre des erreurs, vérifiez que tout est bien correctement installé, que toutes les importations sont présentes dans votre fichier de configuration, et qu’il n’y a pas d’erreurs de syntaxe."),qv=i(),Nn=o("h3"),M5=a("Les pages Markdown"),bv=i(),Bn=o("p"),L5=a("Grâce aux changements dans la configuration, nous pouvons désormais importer et utiliser les fichiers Markdown comme des composants Svelte."),Cv=i(),Qn=o("p"),T5=a("Grâce à mdsvex, nous pouvons donc utiliser les fichiers Markdown comme des pages."),yv=i(),Fe=o("p"),H5=a("Pour tester, créons "),lu=o("code"),K5=a("src/routes/uses/+page.md"),g5=a(" et écrivons du Markdown dedans. Vous pouvez voir le contenu en allant sur "),ru=o("code"),I5=a("/uses"),jv=i(),Ft=o("pre"),Pv=i(),$t=o("pre"),hv=i(),Gn=o("p"),A5=a("img result"),Sv=i(),Fn=o("p"),R5=a("Vous pouvez même importer et utiliser du contenu Markdown à l’intérieur d’autres fichiers, si vous avez besoin qu’une partie de la page soit intéractive par exemple, mais que le reste soit juste du texte Markdown statique."),Ov=i(),$n=o("p"),U5=a("Les pages Markdown sont une option intéressantes pour du contenu principalement textuel, vu que c’est souvent plus rapide et facile d’écrire du Markdown que de la syntaxe HTML."),Dv=i(),Ss=o("p"),V5=a("La page "),pu=o("code"),J5=a("/uses"),N5=a(" n’a pas besoin d’être permanente, mais gardons-la pour le moment; nous l’utiliserons à nouveau bientôt. Parlons de quelques fonctionnalités sympa de mdsvex."),wv=i(),Wn=o("h3"),B5=a("Blocs de code dans Markdown"),xv=i(),Os=o("p"),Q5=a("Pratique, mdsvex vient avec "),Wt=o("a"),G5=a("prism.js"),F5=a(" pré-installé pour mettre en évidence la syntaxe du code. Tout ce que vous avez à faire est de préciser le langage (en l’ajoutant au triple ` du début de bloc) et mdsvex va l’interpréter correctement."),zv=i(),Xt=o("pre"),Mv=i(),ve=o("p"),$5=a("Tous les blocs de code sur ce site sont générés avec cette technique. Bonus: mdsvex a même "),uu=o("code"),W5=a("svelte"),X5=a(` dans les langages disponibles !
Notez qu’il vous faudra un peu de CSS pour faire les couleurs, mais il y a de `),Yt=o("a"),Y5=a("nombreux thèmes utilisables tels quel"),Z5=a(", ou en tant que base pour faire le vôtre."),Lv=i(),Xn=o("h3"),e4=a("Utiliser les composants Svelte dans Markdown"),Tv=i(),Yn=o("p"),s4=a("Comme dit précédemment: mdsvex vous permet d’utiliser les composants Svelte à l’intérieur de Markdown !"),Hv=i(),Ds=o("p"),t4=a("Pour ce faire, insérez un tag script au début du fichier (juste après le "),Zt=o("a"),a4=a("frontmatter"),n4=a(") et importer le composant dedans. Vous pouvez ensuite ajouter celui-ci dans votre Markdown comme d’habitude:"),Kv=i(),ea=o("pre"),gv=i(),Zn=o("blockquote"),sa=o("p"),o4=a("Comme vous pouvez vous en douter peut-être: oui, vous pouvez importer des fichiers Markdown "),iu=o("em"),l4=a("à l’intérieur"),r4=a(" d’autres fichiers Markdown !"),Iv=i(),eo=o("h2"),p4=a("Mettre en place le blog"),Av=i(),so=o("p"),u4=a("Maintenant que nous avons fini la mise en place du traitement Markdown, nous pouvons aborder le coeur de ce tutoriel et commencer la mise en place du blog."),Rv=i(),to=o("p"),cu=o("em"),i4=a("[ À ce moment là de l’article, Josh présente deux manières d’organiser les billets Markdown, une où chaque billet est dans un dossier séparé, c’est la méthode #1 et une autre où les billets sont tous réunis dans un seul dossier, c’est la méthode #2. Etant donné que j’ai choisi d’implémenter la méthode #2, je ne vais traduire que celle-là pour le moment, le billet est déjà bien assez long comme ça. Si des personnes souhaitent une traduction de l’autre méthode, je le ferai à ce moment-là. ]"),Uv=i(),ao=o("h3"),c4=a("Méthode #2: les routes dynamiques"),Vv=i(),ws=o("p"),d4=a("Comme mentionné plus tôt: on pourrait avoir un dossier dans "),du=o("code"),f4=a("src/routes/blog"),v4=a(" pour chaque billet de blog, mais ce serait pénible et compliqué de gérer autant de fichiers passé un certain volume."),Jv=i(),me=o("p"),m4=a("Au lieu de faire ça nous allons simplement mettre tous nos billets markdown dans "),fu=o("code"),k4=a("src/routes/blog"),E4=a(" et utiliser une seule route dynamique pour les afficher ! Ce faisant on va aussi découvrir plusieurs nouveaux aspects du "),vu=o("em"),_4=a("routing"),q4=a(" dans SvelteKit."),Nv=i(),no=o("p"),b4=a("Démarrons avec quelques billets Markdown dans le dossier blog."),Bv=i(),ta=o("pre"),Qv=i(),oo=o("p"),C4=a("Dans chaque billet vous pouvez mettre ce template:"),Gv=i(),aa=o("pre"),Fv=i(),S=o("p"),y4=a("Pour le moment "),mu=o("code"),j4=a("/blog/1"),P4=a(" et "),ku=o("code"),h4=a("/blog/2"),S4=a(" ne s’afficheront pas. C’est parce que chaque route sur notre site doit avoir un "),Eu=o("code"),O4=a("+page.svelte"),D4=a(" (ou un fichier valide commençant par "),_u=o("code"),w4=a("+"),x4=a(") à afficher."),$v=i(),lo=o("blockquote"),qu=o("p"),z4=a("Vous pouvez créer un sous-dossier pour mettre tous les billets dedans, ou même les mettre complètement ailleurs, comme bon vous semble. J’ai juste utilisé le chemin le plus facile. Si vous changez l’endroit où sont les fichiers, veillez à corriger le chemin dans le code."),Wv=i(),ro=o("p"),M4=a("Du coup comment peut-on charger le contenu d’un billet ? C’est là qu’interviennent les routes dynamiques !"),Xv=i(),ke=o("p"),L4=a("Créons un dossier "),bu=o("code"),T4=a("[slug]"),H4=a(" à l’intérieur de "),Cu=o("code"),K4=a("src/routes/blog"),g4=a(" (en incluant les crochets dans le nom du dossier)."),Yv=i(),na=o("pre"),Zv=i(),O=o("p"),I4=a("Les crochets ( "),yu=o("code"),A4=a("[ ]"),R4=a(" ) indiquent que cette route est dynamique; elle correspondra à n’importe quel chemin "),ju=o("code"),U4=a("/blog/*"),V4=a(" (sauf la page "),Pu=o("code"),J4=a("/blog"),N4=a(" qui est bien sûr gérée par le fichier "),hu=o("code"),B4=a("+page.svelte"),Q4=a(")."),em=i(),xs=o("p"),G4=a("En d’autres termes: nous ne connaissons pas à l’avance la partie qui va remplacer "),Su=o("code"),F4=a("slug"),$4=a(", mais nous savons qu’il y aura quelque chose, et ce dossier va gérer ce scénario."),sm=i(),zs=o("p"),W4=a("Pour faire ça, nous allons devoir utiliser la fonction "),Ou=o("code"),X4=a("load"),Y4=a("."),tm=i(),po=o("h3"),Z4=a("Précharger le contenu de la page côté serveur"),am=i(),Ee=o("p"),e6=a("En plus d’avoir +page.svelte qui permet de générer le contenu d’une route, SvelteKit possède également "),Du=o("code"),s6=a("+page.js"),t6=a(" qui précharge sur le serveur avant la génération de la page. C’est aussi exécuté sur le client, afin de pouvoir l’"),oa=o("a"),a6=a("hydrater"),n6=a(" si besoin."),nm=i(),uo=o("p"),o6=a("Prenons un peu de recul pour expliquer plus en détails:"),om=i(),_e=o("p"),l6=a("À chaque fois qu’on visite une route dans SvelteKit (par exemple "),wu=o("code"),r6=a("/blog"),p6=a("), le router cherche une "),xu=o("code"),u6=a("+page.js"),i6=a(" dans cette route."),lm=i(),qe=o("p"),c6=a("Si ce fichier existe (et exporte une function "),zu=o("code"),d6=a("load"),f6=a(", comme attendu), SvelteKit va exécuter cette fonction sur le serveur avant de générer la route "),Mu=o("code"),v6=a("+page.svelte"),m6=a(", et va passer à celle-ci n’importe quelle donnée renvoyée par la function."),rm=i(),be=o("p"),k6=a("Pour le dire simplement: "),Lu=o("code"),E6=a("+page.js"),_6=a(" est lue en premier puis passe tout ce qui est nécessaire au modèle"),Tu=o("code"),q6=a("+page.svelte"),b6=a(" pour le générer."),pm=i(),io=o("p"),C6=a("Voici une illustration:"),um=i(),la=o("pre"),im=i(),co=o("blockquote"),Ms=o("p"),y6=a("Si vous préférez TypeScript, vous pouvez utiliser "),Hu=o("code"),j6=a(".ts"),P6=a(" au lieu de "),Ku=o("code"),h6=a(".js"),cm=i(),Ls=o("p"),S6=a("Vu qu’on fait les choses de manière dynamique, nous allons nous reposer sur les capacités de préchargement de "),gu=o("code"),O6=a("+page.js"),D6=a(". Créons donc ce fichier:"),dm=i(),ra=o("pre"),fm=i(),Ce=o("p"),w6=a("À l’intérieur de "),Iu=o("code"),x6=a("+page.js"),z6=a(" nous devons exporter une function "),Au=o("code"),M6=a("load"),L6=a(" qui va renvoyer des données utilisables par le modèle. Au minimum ça ressemble à ça:"),vm=i(),pa=o("pre"),mm=i(),fo=o("p"),T6=a("Explicitons le code en détails:"),km=i(),ye=o("ul"),je=o("li"),H6=a("le plus important: "),Ru=o("code"),K6=a("+page.js"),g6=a(" exporte une function "),Uu=o("code"),I6=a("load"),A6=a(" asynchrone qui cherche à charger le fichier Markdown correspondant à la route visitée"),Vu=o("ul"),T=o("li"),R6=a("au fait, "),Ju=o("code"),U6=a("params.slug"),V6=a(" s’appelle comme ça parce qu’on a nommé notre route "),Nu=o("code"),J6=a("[slug]"),N6=a(". Si nous avions nommé notre route dynamic "),Bu=o("code"),B6=a("[pizza]"),Q6=a(", il aurait fallu utiliser "),Qu=o("code"),G6=a("params.pizza"),F6=a(" à la place."),$6=i(),H=o("li"),W6=a("une fois que nous avons le fichier chargé de manière asynchrone, nous le déconstruisons et "),Gu=o("code"),X6=a("return"),Y6=a(" ce que nous souhaitons utiliser (ce sera disponible pour nous dans le modèle, juste après). "),Fu=o("code"),Z6=a(".metadata"),e7=a(" contient toutes les propriétés "),$u=o("em"),s7=a("frontmatter"),t7=a(" du billet, et "),Wu=o("code"),a7=a(".default"),n7=a(" est le contenu en lui-même. Ce n’est pas obligatoire de renvoyer les champs individuels comme ceci, on pourrait simplement renvoyer le billet en entier, mais j’aime bien déconstruire un peu sur le serveur afin d’avoir un modèle plus propre."),o7=i(),$e=o("li"),l7=a("idéalement nous devrions entourer tout ça d’un bloc "),Xu=o("code"),r7=a("try"),p7=a("/"),Yu=o("code"),u7=a("catch"),i7=a(" pour gérer les problèmes éventuels, mais on va juste faire le modèle minimal et fonctionnel pour le moment."),Em=i(),Pe=o("p"),c7=a("Une fois ceci en place nous pouvons créer un "),Zu=o("code"),d7=a("+page.svelte"),f7=a(" qui va accompagner notre "),ei=o("code"),v7=a("+page.js"),m7=a(". Nous avons chargé nos données, nous pouvons les utiliser."),_m=i(),ua=o("pre"),qm=i(),Ts=o("p"),k7=a("A l’intérieur de "),si=o("code"),E7=a("+page.svelte"),_7=a(" il suffit de peu de code pour terminer le tout !"),bm=i(),he=o("p"),q7=a("Les données de la function "),ti=o("code"),b7=a("load"),C7=a(" sont automatiquement disponibles à l’utilisation avec le prop "),ai=o("code"),y7=a("data"),j7=a(". Donc tout ce que nous avons à faire est d’exporter ce prop (pour que ce soit passé à l’intérieur) et l’exploiter !"),Cm=i(),ia=o("pre"),ym=i(),vo=o("p"),P7=a("En chargeant un billet de blog nous devrions maintenant voir tout son contenu"),jm=i(),mo=o("p"),h7=a("img result"),Pm=i(),ko=o("blockquote"),Se=o("p"),S7=a("Au cas où vous ne le sauriez pas, "),ni=o("code"),O7=a("<svelte: component />"),D7=a(" est ce qu’on appelle un composant dynamique; il génère un composant Svelte arbitraire (fourni en tant que valeur de la prop "),oi=o("code"),w7=a("this"),x7=a("), quand le composant final est inconnu à ce moment-là. C’est parfait dans cette situation parce que nous ne sommes pas certain·e·s du billet et du contenu qui sera généré. Aussi: tout ça fonctionne parce que nous avons préalablement déclaré les fichiers .md comme utilisables en tant que composant dans notre "),li=o("code"),z7=a("svelte.config.js"),hm=i(),Oe=o("p"),M7=a("Autre syntaxe possible: on pourrait déconstruire tous les props de "),ri=o("code"),L7=a("data"),T7=a(", et les utiliser individuellement. Cela nécessite un peu plus de préparation, mais ça a l’avantage de nous laisser utiliser "),pi=o("code"),H7=a("Content"),K7=a(" en tant que composant à part."),Sm=i(),Eo=o("p"),g7=a("Ceci est équivalent à l’exemple ci-dessus:"),Om=i(),ca=o("pre"),Dm=i(),_o=o("p"),I7=a("C’est comme vous voulez. Personnellement j’aime la practicité de la déconstruction, mais ça peut tendre vers plus de squelettage. Les deux syntaxes fonctionnent de la même façon."),wm=i(),qo=o("blockquote"),We=o("p"),A7=a("Si vous choisissez la deuxième option, veillez à mettre une majuscule pour le nom du contenu/composant ("),ui=o("code"),R7=a("Content"),U7=a(", dans ce cas-là), afin de l’identifier en composant - à la fois dans le modèle et dans les données retournées depuis la fonction "),ii=o("code"),V7=a("load"),J7=a("."),xm=i(),bo=o("p"),N7=a("Bien, nous avons à présent une bonne gestion des billets individuels. Maintenant nous allons construire la page d’index du blog, sur laquelle nous allons lister tous nos billets. Pour ce faire, et parce que nous allons sans doute lister les billets de plusieurs manières et à différents endroits, nous allons construire nos endpoints d’API."),zm=i(),Co=o("h2"),B7=a("Les routes serveur de SvelteKit"),Mm=i(),Hs=o("p"),Q7=a("Jusqu’à présent chaque route que nous avons créées étaient des pages. Mais SvelteKit offre également un autre type de route: "),da=o("a"),G7=a("les routes serveur"),F7=a(" (que vous pouvez considérer comme des endpoints d’API)."),Lm=i(),yo=o("p"),$7=a("Les routes serveur fonctionnent de la même manière que les pages, mais là où les deuxièmes renvoient du HTML, les premières renvoient des données."),Tm=i(),jo=o("p"),W7=a("Il y a trois conventions importantes à respecter au moment de créer une route serveur (qui sont, j’insiste, similaire à des endpoints d’API):"),Hm=i(),De=o("ol"),Po=o("li"),X7=a("Une route serveur doit être appelée "),ci=o("code"),Y7=a("+server.js"),Z7=i(),K=o("li"),e9=a("Le "),di=o("code"),s9=a("+server.js"),t9=a(" doit exporter une fonction nommée (non-anonyme) pour chaque "),fa=o("a"),a9=a("verbe HTTP"),n9=a(" auquel il répond (Souvent ce sera une fonction "),fi=o("code"),o9=a("GET"),l9=a(", mais vous pouvez aussi utiliser "),vi=o("code"),r9=a("POST"),p9=a(", etc.)"),u9=i(),Xe=o("li"),i9=a("Le serveur doit renvoyer une nouvelle "),mi=o("code"),c9=a("Response"),d9=a(" (Plus d’infos sur "),va=o("a"),f9=a("les spécificités web de Response"),v9=a(")."),Km=i(),D=o("p"),m9=a("En guise d’exemple: si vous faites "),ki=o("code"),k9=a("src/routes/api/+server.js"),E9=a(" et que vous mettez une fonction "),Ei=o("code"),_9=a("GET"),q9=a(" à l’intérieur, n’importe quelle requête "),_i=o("code"),b9=a("GET"),C9=a(" à "),qi=o("code"),y9=a("/api"),j9=a(" invoquerait cette fonction."),gm=i(),Ye=o("p"),bi=o("strong"),P9=a("Pourquoi une route serveur ?"),h9=a(` Parce qu’on pourrait vouloir afficher les billets à d’autres endroits dans notre application/site et utiliser un endpoint réduit la réécriture du code pour couvrir tous les endroits.
Quoi qu’il en soit, voici les détails dans la `),ma=o("a"),S9=a("documentation pour les routes serveur"),O9=a(", mais c’est moins compliqué qu’il n’y paraît, alors allons-y !"),Im=i(),ho=o("h3"),D9=a("Créer un endpoint pour nos billets"),Am=i(),N=o("p"),w9=a("Puisque nous pourrions envisager de créer des endpoints supplémentaires plus tard, créons un dossier "),Ci=o("code"),x9=a("src/routes/api"),z9=a(". À l’intérieur nous ajouterons un dossier "),yi=o("code"),M9=a("posts"),L9=a(" et dans celui-ci un fichier "),ji=o("code"),T9=a("+server.js"),H9=a(" qui permettra de renvoyer les billets."),Rm=i(),ka=o("pre"),Um=i(),Ks=o("p"),K9=a("Nous allons exporter dans ce nouveau fichier une méthode "),Pi=o("code"),g9=a("GET"),I9=a(" (puisque “get” est le seul verbe HTTP que nous accepterons: cet endpoint va uniquement renvoyer des données, et jamais en accepter)."),Vm=i(),So=o("p"),A9=a("Faisons un essaie rapide, juste pour voir le code en action:"),Jm=i(),Ea=o("pre"),Nm=i(),gs=o("p"),R9=a("Avec ça en place nous pouvons visiter "),hi=o("code"),U9=a("/api/posts"),V9=a(" et voir le texte suivant (peu impressionnant, mais néanmoins chouette) qui s’affiche dans le navigateur"),Bm=i(),Oo=o("p"),J9=a("Pas mal non? Notre route API ne renvoie rien d’utile pour l’instant, à l’évidence, mais c’est quand même excitant de faire tourner ça aussi rapidement et facilement!"),Qm=i(),Do=o("blockquote"),_a=o("p"),N9=a("Bien que nous n’allons pas aborder ça ici, il existe des paramètres qu’on peut rajouter à l’intérieur de la fonction "),Si=o("code"),B9=a("GET"),Q9=a(" qui exposent les headers, les paramètres de recherche et d’autres informations sur la requête."),Gm=i(),wo=o("h3"),G9=a("Créer un utilitaire pour récupérer les billets"),Fm=i(),xo=o("p"),F9=a("La prochaine étape consiste à récupérer les billets Markdown. Je pense qu’utiliser une fonction d’aide est adéquat ici, une que l’on pourra importer et réutiliser à différents endroits et qui permettra de garder le code un petit peu plus propre."),$m=i(),Is=o("p"),$9=a("On va créer un dossier "),Oi=o("code"),W9=a("src/lib/utils"),X9=a(" dans lequel on ajoute un fichier ìndex.js`"),Wm=i(),qa=o("pre"),Xm=i(),As=o("p"),Y9=a("Dans notre fichier JS nous allons exporter une fonction "),Di=o("code"),Z9=a("fetchMarkdownPosts"),e8=a(" asynchrone. Son but sera de récupérer tous nos billets Markdown et renvoyer leurs données. Nous nous aiderons de Vite pour ça (l’outil de compilation qui alimente SvelteKit sous le capot)."),Ym=i(),ba=o("pre"),Zm=i(),zo=o("p"),s8=a("Il se passe beaucoup de choses dans cette fonction. Explicitons:"),e1=i(),we=o("ul"),g=o("li"),wi=o("code"),t8=a("import.meta.glob"),a8=a(" est une fonction Vite. Elle importe tous les fichiers qui correspondent au "),xi=o("code"),n8=a("glob"),o8=a(" indiqué - dans ce cas présent, tous les fichiers "),zi=o("code"),l8=a(".md"),r8=a(" dans "),Mi=o("code"),p8=a("src/routes/blog"),u8=a("."),Li=o("ul"),Ti=o("li"),i8=a("cette fonction renvoie un objet qui a pour clés chaque chemin relatif des fichiers, et pour valeurs une fonction “resolver” (ma dénomination, pas officielle) qui charge le contenu du fichier en tant que promesse JavaScript."),c8=i(),Ca=o("li"),d8=a("La méthode "),Hi=o("code"),f8=a("map"),v8=a(" est juste là pour mettre en forme les données, pour les traiter plus facilement."),m8=i(),Mo=o("li"),k8=a("Etant donné que chaque élément attend la résolution d’une promesse, on entoure le tout d’un "),Ki=o("code"),E8=a("await Promise.all"),s1=i(),Lo=o("p"),_8=a("Une dernière chose à noter: le chemin d’un fichier est différent de la route en place. Par exemple:"),t1=i(),Rs=o("ul"),To=o("li"),q8=a("ce fichier: "),gi=o("code"),b8=a("/src/routes/blog/post-title.md"),C8=i(),Ho=o("li"),y8=a("charge à: "),Ii=o("code"),j8=a("/blog/post-title"),a1=i(),_=o("p"),P8=a("Il nous faut donc découper un peu la route pour extraire le chemin. Puisqu’on sait de manière sûre que la route commencera toujours par "),Ai=o("code"),h8=a("/src/routes"),S8=a("et finira toujours par "),Ri=o("code"),O8=a(".md"),D8=a(", on peut sereinement utiliser "),Ui=o("code"),w8=a(".slice(11, -3)"),x8=a(" pour retirer ces caractères, soit les 11 premiers et les 3 derniers, afin d’avoir le bon chemin relatif. (On pourrait aussi utiliser "),Vi=o("code"),z8=a(".replace"),M8=a(" ou du regex pour être un tout petit peu plus explicite, mais vu qu’on connaît déjà le chemin avec lequel on travaille, je ne vois pas l’intérêt. "),Ji=o("code"),L8=a(".slice"),T8=a("marche très bien.)"),n1=i(),Ko=o("h3"),H8=a("Récupérer les posts à partir d’un endpoint de la route serveur"),o1=i(),go=o("p"),K8=a("Maintenant que nous avons notre fonction d’aide pour attraper nos données Markdown, la prochaine étape consiste à récupérer ces données sur le endpoint de l’API."),l1=i(),Us=o("p"),g8=a("Dans "),Ni=o("code"),I8=a("+server.js"),A8=a(" nous allons mettre le code suivant:"),r1=i(),ya=o("pre"),p1=i(),xe=o("p"),R8=a("Ça l’air beaucoup vu comme ça mais quand on se rend compte que c’est "),Bi=o("em"),U8=a("tout"),V8=a(" ce qu’il nous faut pour créer un endpoint à partir duquel on récupère tous nos billets, triés par date, c’est en fait "),Qi=o("em"),J8=a("incroyable"),N8=a(" !"),u1=i(),Io=o("p"),B8=a("Explicitons:"),i1=i(),B=o("ul"),ja=o("li"),Q8=a("D’abord on import et on utilise la fonction "),Gi=o("code"),G8=a("fetchMarkdownPosts"),F8=a(" créée ci-dessus pour récupérer les données."),$8=i(),Fi=o("li"),W8=a("On importe également l’outil pratique json. Il gère la conversion des données au format JSON pour nous et paramètres automatiquement les bonnes options pour les headers."),X8=i(),$i=o("li"),Y8=a("Ensuite on trie les billets par date, du plus récent au plus ancien. (On pourrait trier les posts dans la fonction d’aide, mais pour moi la logique devrait rester côté endpoint.)"),Z8=i(),Vs=o("li"),e0=a("Pour finir on "),Wi=o("code"),s0=a("return"),t0=a(" le produit final à l’intérieur d’une fonction "),Xi=o("code"),a0=a("json()"),c1=i(),Js=o("p"),n0=a("Faisons un test ! Actualisez votre "),Yi=o("code"),o0=a("/api/posts"),l0=a(" et vous devriez voir de vraies données."),d1=i(),Ao=o("p"),r0=a("img result api"),f1=i(),Ro=o("p"),p0=a("Encore mieux: cet endpoint se mettra automatiquement à jour dès qu’on ajoutera un billet Markdown au reste."),v1=i(),Uo=o("blockquote"),Ze=o("p"),u0=a("Dans l’idéal il faudrait entourer tout ça de blocs "),Zi=o("code"),i0=a("try"),c0=a("/"),ec=o("code"),d0=a("catch"),f0=a(" pour gérer les imprévus."),m1=i(),Vo=o("h2"),v0=a("Terminer la page d’index du blog"),k1=i(),Ns=o("p"),m0=a("Avec notre "),sc=o("em"),k0=a("endpoint"),E0=a(" en place c’est très facile de construire la page d’index du blog."),E1=i(),Q=o("p"),_0=a("On "),tc=o("em"),q0=a("pourrait"),b0=a(" faire la démarche côté client, avec un "),ac=o("code"),C0=a("fetch"),y0=a(" inséré dans une fonction "),nc=o("code"),j0=a("onMount"),P0=a(", et ça serait okay, mais on se retrouverait alors avec un chargement qui n’affiche rien le temps que ça s’exécute, ce qui n’est pas terrible pour l’expérience utilisateur·rice. Au lieu de ça, exploitons la génération côté serveur de SvelteKit."),_1=i(),Jo=o("h3"),h0=a("Récupérer les billets côté serveur"),q1=i(),G=o("p"),S0=a("Vous vous rappelez que nous pouvons ajouter un "),oc=o("code"),O0=a("+page.js"),D0=a(" à notre "),lc=o("code"),w0=a("+page.svelte"),x0=a(" afin de précharger une fonction "),rc=o("code"),z0=a("load"),M0=a(" ? Eh bien, c’est tout à fait indiqué pour récupérer des données d’API telles que nos billets de blog !"),b1=i(),Bs=o("p"),L0=a("Quelques éléments supplémentaires à connaître sur "),pc=o("code"),T0=a("load"),H0=a(":"),C1=i(),ze=o("ul"),No=o("li"),K0=a("Il a un accès contextuel à certains arguments spécifiques, notamment:"),Pa=o("ul"),Qs=o("li"),uc=o("code"),g0=a("url"),I0=a(" et "),ic=o("code"),A0=a("params"),R0=a(" qui contiennent des informations sur la requête"),U0=i(),Gs=o("li"),cc=o("code"),V0=a("fetch"),J0=a(" qui est une aide permettant de normaliser l’implémentation "),dc=o("code"),N0=a("fetch"),B0=a(" (qui n’est pas la même entre le navigateur et Node)"),Q0=i(),Fs=o("li"),fc=o("code"),G0=a("load"),F0=a(" doit renvoyer un objet. Peu importe ce qu’il y a dedans, mais tout son contenu sera disponible pour nous dans "),vc=o("code"),$0=a("data"),W0=a("."),X0=i(),q=o("li"),mc=o("code"),Y0=a("+page.js"),Z0=a(" s’exécute à la fois côté serveur et côté client. Ce n’est pas très important quand il s’agit de précharger des fichiers statiques, mais il ne faudrait pas faire référence à des choses propres à l’environnement comme "),kc=o("code"),eC=a("window"),sC=a(" ou "),Ec=o("code"),tC=a("process"),aC=a(". (Si vous voulez que "),_c=o("code"),nC=a("load"),oC=a(" s’exécute uniquement sur le serveur, utilisez plutôt "),qc=o("code"),lC=a("+page.server.js"),rC=a(". À noter que "),bc=o("code"),pC=a("fetch"),uC=a(" est disponible de manière native)"),y1=i(),ha=o("pre"),j1=i(),F=o("p"),iC=a("Ce morceau de pré-chargement gère tout ce dont on a besoin ! Nous avons des "),Cc=o("code"),cC=a("posts"),dC=a(" qui sont transmis au composant (en tant que "),yc=o("code"),fC=a("data"),vC=a("), et on peut l’utiliser pour itérer parmi nos billets et les générer dans le fichier "),jc=o("code"),mC=a("+page.svelte"),kC=a(" correspondant"),P1=i(),Sa=o("pre"),h1=i(),Bo=o("p"),EC=a("Dans l’exemple ci-dessus le HTML est simplifié (et ne prend pas bien en compte le scénario où il n’y aurait pas de billets à afficher), mais vous voyez le genre. Vous pouvez augmenter le code en fonction du frontmatter de vos propres billets, en ajoutant une image/lien d’accroche, un extrait, etc."),S1=i(),Qo=o("p"),_C=a("img result index"),O1=i(),Go=o("h2"),qC=a("Précharger avec l’adaptateur statique"),D1=i(),Fo=o("p"),bC=a("SvelteKit est généré côté serveur par défaut, ce qui est bien car le SSR est en général meilleur pour les performances, l’accessibilité et le SEO. Ça veut aussi dire que le préchargement statique des fichiers (qui est ce que nous voulons) est opt-in."),w1=i(),$=o("p"),CC=a("On pourrait précharger manuellement n’importe quelle page, ce qui est pratique pour des sections telles qu’un “à propos” ou une “FAQ” qui n’ont pas de contenu dynamique. On peut aussi précharger au niveau du layout, pour gérer des dossiers entiers d’un coup. Peu importe l’option, elle est activée en exporant une constante appelée "),Pc=o("code"),yC=a("prerender"),jC=a(" avec pour valeur "),hc=o("code"),PC=a("true"),hC=i(),Oa=o("a"),SC=a("voir la documentation"),OC=a("."),x1=i(),$s=o("p"),DC=a("Maintenant si on veut que le site entier soit préchargé de manière statique c’est préférable d’utiliser directement "),Da=o("a"),wC=a("l’adaptateur statique"),xC=a(" de SvelteKit, comme ça pas besoin de retenir quelle route est statique ou non en fonction du code. Elles le seront toutes."),z1=i(),wa=o("p"),zC=a("SvelteKit a de nombreux [adaptateurs], et vient clé en main avec un qui détecte automatiquement et compile en conséquence pour Netlify, Vercel ou Cloudfare, ce qui est pratique et aussi impressionnant ! Mais pour le statique, il nous faudra l’"),Sc=o("code"),MC=a("adapter-static"),M1=i(),xa=o("pre"),L1=i(),w=o("p"),LC=a("Une fois installé il faut faire quelques changements pour précharger toutes nos pages. D’abord, changez "),Oc=o("code"),TC=a("adapter-auto"),HC=a(" en "),Dc=o("code"),KC=a("adapter-static"),gC=a(" dans le fichier "),wc=o("code"),IC=a("svelte.config.js"),AC=a(" (tout en haut, dans les "),xc=o("code"),RC=a("import"),UC=a(")"),T1=i(),za=o("pre"),H1=i(),f=o("p"),VC=a("Ensuite nous devons activer l’option en exportant une prop "),zc=o("code"),JC=a("prerender"),NC=a(" avec une valeur "),Mc=o("code"),BC=a("true"),QC=a(`.
On `),Lc=o("em"),GC=a("pourrait"),FC=a(" faire ça manuellement pour chaque page, mais ce serait pénible. La meilleure façon de faire est de créer un "),Tc=o("code"),$C=a("+layout.js"),WC=a(" dans "),Hc=o("code"),XC=a("src.routes"),YC=a(" et d’y ajouter le "),Kc=o("em"),ZC=a("prop"),ey=a(". (Attention: c’est un fichier "),gc=o("code"),sy=a(".js"),ty=a(", pas notre fichier existant "),Ic=o("code"),ay=a("+layout.svelte"),ny=a("; le nouveau fichier gère le préchargement, et non pas la génération.)"),K1=i(),Ma=o("pre"),g1=i(),x=o("p"),oy=a("Tout comme "),Ac=o("code"),ly=a("+layout.svelte"),ry=a(" gère le layout sur chaque page, "),Rc=o("code"),py=a("+layout.js"),uy=a(" gère les scripts côté serveur sur chaque page. En mettant notre prop "),Uc=o("code"),iy=a("prerender"),cy=a(" à l’intérieur de ce fichier JS, il va se "),Vc=o("em"),dy=a("diffuser"),fy=a(" sur chaque page, ce qui nous évite de devoir le répéter dans chaque page enfant."),I1=i(),Ws=o("p"),vy=a("Pour en savoir plus sur l’adaptateur statique, vous pouvez lire "),La=o("a"),my=a("la documentation"),ky=a("."),A1=i(),R1=o("hr"),U1=i(),$o=o("p"),Ey=a("Avec notre adaptateur installé et activé dans notre fichier de configuration, toutes les pages du site seront préchargées en HTML statique au moment de la compilation !"),V1=i(),Wo=o("blockquote"),es=o("p"),_y=a("Un avantage de l’option statique de SvelteKit est que ça transforme toutes les pages en HTML statique, mais ça charge également un peu de JavaScript côté client pour aider à la navigation et au pré-chargement en fond. Ainsi, le site fonctionne très bien sans JavaScript, mais reste ouvert à l’amélioration progressive. Si vous voulez désactiver ce comportement pour empaqueter moins de JS, contre une navigation potentiellement moins fluide, ajoutez "),Jc=o("code"),qy=a("export const csr = false"),by=a(" à votre "),Nc=o("code"),Cy=a("+layout.js"),yy=a("."),J1=i(),Xs=o("p"),jy=a("Un dernier point à ce sujet: vous n’êtes pas "),Bc=o("em"),Py=a("obligé·e·s"),hy=a(" d’utiliser l’adaptateur statique. Vous pouvez sauter cette étape et faire avec l’adaptateur par défaut livré avec SvelteKit. Il vous permetta de déployer le site sur Netlify, Vercel ou Cloudfare, et le site serait généré côté serveur avec des fonctions serverless, au lieu d’être construit de manière statique."),N1=i(),Xo=o("p"),Sy=a("Les deux options marchent bien, et cela dépendra surtout de votre usage et de vos préférences. Je reviens dessus simplement pour signaler à quel point c’est chouette que SvelteKit puisse passer d’une chose à l’autre simplement en échangeant d’adaptateur."),B1=i(),Yo=o("p"),Ta=o("em"),Oy=a("[ Le billet de Josh continue ensuite avec des améliorations optionnelles et des détails qui paufinent la base qu’on vient de faire, mais je pense qu’avec tout ce qu’on a fait c’est déjà un bon morceau. Si vous êtes intéressé·e·s n’hésitez pas à reprendre la lecture en anglais sur "),Ha=o("a"),Dy=a("le site de Josh"),wy=a(", et si besoin je traduirai la deuxième partie optionnelle plus tard. ]"),this.h()},l(e){ts=l(e,"P",{});var p=r(ts);Fk=n(p,"En démarrant la refonte de mon site perso j’avais plusieurs objectifs en tête:"),p.forEach(t),Zc=c(e),ee=l(e,"UL",{});var Zo=r(ee);Hl=l(Zo,"LI",{});var $y=r(Hl);$k=n($y,"me familiariser avec Svelte et SvelteKit à travers un projet qui me tient à coeur"),$y.forEach(t),Wk=c(Zo),Kl=l(Zo,"LI",{});var Wy=r(Kl);Xk=n(Wy,"documenter ma progression, ainsi que les difficultés rencontrées, les solutions, et les améliorations au fil du temps, jusqu’à obtenir le site et les fonctionnalités que je voulais"),Wy.forEach(t),Yk=c(Zo),gl=l(Zo,"LI",{});var Xy=r(gl);Zk=n(Xy,"contribuer en français à la documentation autour de ces nouveaux outils qui est très limitée dans cette langue."),Xy.forEach(t),Zo.forEach(t),ed=c(e),as=l(e,"P",{});var Q1=r(as);eE=n(Q1,"En faisant des recherches préliminaires je suis tombé sur "),ct=l(Q1,"A",{href:!0,rel:!0});var Yy=r(ct);sE=n(Yy,"l’excellent billet de Josh Collinsworth"),Yy.forEach(t),tE=n(Q1," sur son blog, qui m’a permis de démarrer et d’appréhender les différentes facettes de SvelteKit."),Q1.forEach(t),sd=c(e),Ra=l(e,"P",{});var Zy=r(Ra);aE=n(Zy,"Sa concision et sa pédagogie sont un modèle pour la transmission d’informations, aussi ai-je demandé à Josh si je pouvais adapter son billet et le traduire pour en faire profiter les personnes francophones désireuses de se lancer à leur tour dans l’apprentissage de ces nouveaux outils."),Zy.forEach(t),td=c(e),ns=l(e,"P",{});var G1=r(ns);nE=n(G1,"Merci encore à Josh pour son aide ! À noter que son site, "),dt=l(G1,"A",{href:!0,rel:!0});var ej=r(dt);oE=n(ej,"https://joshcollinsworth.com/"),ej.forEach(t),lE=n(G1," , est lui aussi entièrement fait avec Svelte et SvelteKit, et qu’il contient de nombreux articles tout aussi passionnants et informatifs que celui que j’ai choisi de traduire aujourd’hui, n’hésitez pas à y faire un tour."),G1.forEach(t),ad=c(e),nd=l(e,"HR",{}),od=c(e),Ua=l(e,"H2",{});var sj=r(Ua);rE=n(sj,"Ce que nous allons faire, et ce qu’il faut savoir avant de commencer"),sj.forEach(t),ld=c(e),Va=l(e,"P",{});var tj=r(Va);pE=n(tj,"Cet article est un tutoriel pour créer un blog statique pré-rendu avec l’aide de SvelteKit, Markdown, Sass et une API (ce site est construit comme cela, au fait)"),tj.forEach(t),rd=c(e),Ja=l(e,"P",{});var aj=r(Ja);uE=n(aj,"C’est aussi une introduction à SvelteKit en soi, avec une bonne vue d’ensemble des fondamentaux qui devraient être utilisables pour n’importe quel projet."),aj.forEach(t),pd=c(e),os=l(e,"P",{});var F1=r(os);iE=n(F1,"C’est en dernier lieu "),Il=l(F1,"EM",{});var nj=r(Il);cE=n(nj,"fun"),nj.forEach(t),dE=n(F1,"!*"),F1.forEach(t),ud=c(e),ft=l(e,"P",{});var xy=r(ft);fE=n(xy,"*"),Al=l(xy,"EM",{});var oj=r(Al);vE=n(oj,"mon avis perso"),oj.forEach(t),xy.forEach(t),id=c(e),Na=l(e,"H2",{});var lj=r(Na);mE=n(lj,"Vous bénéficierez le plus de ce tuto si vous:"),lj.forEach(t),cd=c(e),C=l(e,"UL",{});var Me=r(C);Rl=l(Me,"LI",{});var rj=r(Rl);kE=n(rj,"connaissez déjà les bases du développement front-end et de JavaScript;"),rj.forEach(t),EE=c(Me),vt=l(Me,"LI",{});var $1=r(vt);_E=n($1,"avez au préalable une connaissance basique de Svelte (vous pouvez certainement suivre l’article sans ça, mais je recommande de lire le "),mt=l($1,"A",{href:!0,rel:!0});var pj=r(mt);qE=n(pj,"tutoriel de Svelte"),pj.forEach(t),bE=n($1," d’abord si vous êtes complètement novices)"),$1.forEach(t),CE=c(Me),Ul=l(Me,"LI",{});var uj=r(Ul);yE=n(uj,"connaissez les bases de Markdown et de Sass;"),uj.forEach(t),jE=c(Me),Vl=l(Me,"LI",{});var ij=r(Vl);PE=n(ij,"connaissez les bases de récupérer des données en JSON depuis une API"),ij.forEach(t),hE=c(Me),Jl=l(Me,"LI",{});var cj=r(Jl);SE=n(cj,"savez déjà installer des paquets avec npm"),cj.forEach(t),Me.forEach(t),dd=c(e),ls=l(e,"P",{});var W1=r(ls);OE=n(W1,"Pour finir, si vous ne souhaitez pas faire tout le tutoriel et préféreriez avoir directement la structure complète du blog clé en main, allez voir "),kt=l(W1,"A",{href:!0,rel:!0});var dj=r(kt);DE=n(dj,"le dossier de démarrage SvelteKit"),dj.forEach(t),wE=n(W1," (c’est plus abouti que ce qu’on va fabriquer ici, mais les concepts sous-jacents sont les mêmes.)"),W1.forEach(t),fd=c(e),Ba=l(e,"P",{});var fj=r(Ba);xE=n(fj,"C’est parti !"),fj.forEach(t),vd=c(e),Qa=l(e,"H2",{});var vj=r(Qa);zE=n(vj,"Créer une nouvelle application SvelteKit"),vj.forEach(t),md=c(e),rs=l(e,"P",{});var X1=r(rs);ME=n(X1,"Pour générer un nouveau projet SvelteKit, exécutez cette commande dans votre terminal (évidemment, vous pouvez changer "),Nl=l(X1,"CODE",{});var mj=r(Nl);LE=n(mj,"my-app"),mj.forEach(t),TE=n(X1," pour n’importe quel autre nom que vous préférez)"),X1.forEach(t),kd=c(e),Et=l(e,"PRE",{class:!0});var vz=r(Et);vz.forEach(t),Ed=c(e),ps=l(e,"P",{});var Y1=r(ps);HE=n(Y1,"Quand vous exécutez la commande "),Bl=l(Y1,"CODE",{});var kj=r(Bl);KE=n(kj,"init"),kj.forEach(t),gE=n(Y1," pour démarrer, SvelteKit va vous poser quelques questions sur votre projet et ce que vous voulez faire:"),Y1.forEach(t),_d=c(e),Ga=l(e,"P",{});var Ej=r(Ga);Fa=l(Ej,"IMG",{src:!0,alt:!0}),Ej.forEach(t),qd=c(e),se=l(e,"P",{});var el=r(se);IE=n(el,"Nous allons choisir l’option "),Ql=l(el,"STRONG",{});var _j=r(Ql);AE=n(_j,"“Skeleton project”"),_j.forEach(t),RE=n(el," ("),Gl=l(el,"EM",{});var qj=r(Gl);UE=n(qj,"attention, pas Library skeleton project, car nous simplement faisons un site, pas une librairie"),qj.forEach(t),VE=n(el,")"),el.forEach(t),bd=c(e),$a=l(e,"BLOCKQUOTE",{});var bj=r($a);Fl=l(bj,"P",{});var Cj=r(Fl);JE=n(Cj,"Si c’est la première fois que vous utilisez SvelteKit, n’hésitez pas à choisir “SvelteKit demo app”, explorer un peu le projet pour se faire une idée de comment ça marche, et revenir après. C’est une bonne introduction, mais c’est fourni avec plusieurs fichiers et styles qui prendraient du temps à effacer pour commencer"),Cj.forEach(t),bj.forEach(t),Cd=c(e),Wa=l(e,"P",{});var yj=r(Wa);NE=n(yj,"L’outil de préparation va également demander vos préférences au sujet de TypeScript, ESlint et Prettier. Je n’utiliserai pas TypeScript pour rester simple dans ce tutoriel, mais vous pouvez l’utiliser si vous le souhaitez (Svelte marche plutôt bien avec.)"),yj.forEach(t),yd=c(e),us=l(e,"P",{});var Z1=r(us);BE=n(Z1,"Après avoir fait vos choix et quelques secondes d’installation, vous devriez voir apparaître "),$l=l(Z1,"CODE",{});var jj=r($l);QE=n(jj,"Your project is ready!"),jj.forEach(t),GE=n(Z1," dans votre terminal, ainsi que les prochaines étapes et des liens utiles:"),Z1.forEach(t),jd=c(e),Xa=l(e,"P",{});var Pj=r(Xa);Ya=l(Pj,"IMG",{src:!0,alt:!0}),Pj.forEach(t),Pd=c(e),Za=l(e,"P",{});var hj=r(Za);FE=n(hj,"À ce moment-là, ouvrez votre projet dans VS Code (ou dans votre éditeur de texte préféré). Puis installez les dépendances dans le terminal et lancez le serveur de développement:"),hj.forEach(t),hd=c(e),_t=l(e,"PRE",{class:!0});var mz=r(_t);mz.forEach(t),Sd=c(e),en=l(e,"P",{});var Sj=r(en);$E=n(Sj,"Terminez ces commandes et votre nouveau site s’affichera dans la fenêtre de votre navigateur"),Sj.forEach(t),Od=c(e),sn=l(e,"P",{});var Oj=r(sn);tn=l(Oj,"IMG",{src:!0,alt:!0}),Oj.forEach(t),Dd=c(e),an=l(e,"P",{});var Dj=r(an);WE=n(Dj,"Le squelette tel quel n’est pas très excitant, et il n’y a même pas de CSS. Mais c’est okay; ça nous laisse le champ libre pour personnaliser notre application comme on le souhaite, sans avoir à supprimer ou à modifier du code déjà présent."),Dj.forEach(t),wd=c(e),nn=l(e,"P",{});var wj=r(nn);XE=n(wj,"C’est notre canvas blanc, et nous allons prochainement peindre dessus."),wj.forEach(t),xd=c(e),on=l(e,"H2",{});var xj=r(on);YE=n(xj,"Créer des routes dans SvelteKit"),xj.forEach(t),zd=c(e),te=l(e,"P",{});var sl=r(te);ZE=n(sl,"Comme beaucoup de frameworks (et PHP également, en fait), SvelteKit a une approche du "),Wl=l(sl,"EM",{});var zj=r(Wl);e2=n(zj,"routing"),zj.forEach(t),s2=n(sl," et des pages formée sur les dossiers et les fichiers; la structure de "),Xl=l(sl,"CODE",{});var Mj=r(Xl);t2=n(Mj,"src/routes"),Mj.forEach(t),a2=n(sl," va définir la structure de votre site."),sl.forEach(t),Md=c(e),ae=l(e,"P",{});var tl=r(ae);n2=n(tl,"N’importe quel dossier dans "),Yl=l(tl,"CODE",{});var Lj=r(Yl);o2=n(Lj,"src/routes"),Lj.forEach(t),l2=n(tl," devient le nom d’une page. Un fichier "),Zl=l(tl,"CODE",{});var Tj=r(Zl);r2=n(Tj,"+page.svelte"),Tj.forEach(t),p2=n(tl," à l’intérieur de ce dossier constitue le contenu HTML de la page."),tl.forEach(t),Ld=c(e),is=l(e,"P",{});var ek=r(is);u2=n(ek,"Du coup, à l’intérieur de "),er=l(ek,"CODE",{});var Hj=r(er);i2=n(Hj,"src/route"),Hj.forEach(t),c2=n(ek,":"),ek.forEach(t),Td=c(e),A=l(e,"UL",{});var Ys=r(A);ln=l(Ys,"LI",{});var zy=r(ln);sr=l(zy,"CODE",{});var Kj=r(sr);d2=n(Kj,"+page.svelte"),Kj.forEach(t),f2=n(zy," est la page d’accueil"),zy.forEach(t),v2=c(Ys),qt=l(Ys,"LI",{});var sk=r(qt);tr=l(sk,"CODE",{});var gj=r(tr);m2=n(gj,"a-propos/+page.svelte"),gj.forEach(t),k2=n(sk," serait la page "),ar=l(sk,"CODE",{});var Ij=r(ar);E2=n(Ij,"/a-propos"),Ij.forEach(t),sk.forEach(t),_2=c(Ys),bt=l(Ys,"LI",{});var tk=r(bt);nr=l(tk,"CODE",{});var Aj=r(nr);q2=n(Aj,"blog/+page.svelte"),Aj.forEach(t),b2=n(tk," serait la page "),or=l(tk,"CODE",{});var Rj=r(or);C2=n(Rj,"/blog"),Rj.forEach(t),tk.forEach(t),y2=c(Ys),Ct=l(Ys,"LI",{});var ak=r(Ct);lr=l(ak,"CODE",{});var Uj=r(lr);j2=n(Uj,"blog/un-post/+page.svelte"),Uj.forEach(t),P2=n(ak," deviendrait "),rr=l(ak,"CODE",{});var Vj=r(rr);h2=n(Vj,"/blog/un-post"),Vj.forEach(t),ak.forEach(t),Ys.forEach(t),Hd=c(e),rn=l(e,"BLOCKQUOTE",{});var Jj=r(rn);X=l(Jj,"P",{});var Zs=r(X);S2=n(Zs,"La convention de "),pr=l(Zs,"CODE",{});var Nj=r(pr);O2=n(Nj,"+page.svelte"),Nj.forEach(t),D2=n(Zs," peut prêter à confusion ou sembler inutilement complexe, surtout si vous étiez habitué·e·s à l’ancienne convention "),ur=l(Zs,"CODE",{});var Bj=r(ur);w2=n(Bj,"index.svelte"),Bj.forEach(t),x2=n(Zs,". Mais comme nous le verrons prochainement, le préfixe "),ir=l(Zs,"CODE",{});var Qj=r(ir);z2=n(Qj,"+"),Qj.forEach(t),M2=n(Zs," permet de faire la différence entre les pages et les composants. Il y a d’autres choses également que l’ont peut rajouter aux routes en plus des pages, comme des chemins dynamiques de serveur; nous verrons cela plus tard."),Zs.forEach(t),Jj.forEach(t),Kd=c(e),pn=l(e,"H3",{});var Gj=r(pn);L2=n(Gj,"Ajouter des pages"),Gj.forEach(t),gd=c(e),m=l(e,"P",{});var z=r(m);T2=n(z,"Histoire de démarrer avec quelques pages sur notre site, créons les dossiers "),cr=l(z,"CODE",{});var Fj=r(cr);H2=n(Fj,"a-propos"),Fj.forEach(t),K2=n(z,", "),dr=l(z,"CODE",{});var $j=r(dr);g2=n($j,"contact"),$j.forEach(t),I2=n(z," et "),fr=l(z,"CODE",{});var Wj=r(fr);A2=n(Wj,"blog"),Wj.forEach(t),R2=n(z," à l’intérieur de "),vr=l(z,"CODE",{});var Xj=r(vr);U2=n(Xj,"src/routes"),Xj.forEach(t),V2=n(z,` (on peut toujours les supprimer ou les modifier plus tard.)
Dans chacun de ces dossiers nous ajouterons un fichier `),mr=l(z,"CODE",{});var Yj=r(mr);J2=n(Yj,"+page.svelte"),Yj.forEach(t),N2=n(z,`, pour générer le contenu de la page, ce que les personnes verront lorsqu’elles navigueront vers cette route du site.
Dans chacun de ces fichiers insérons un petit `),kr=l(z,"EM",{});var Zj=r(kr);B2=n(Zj,"header"),Zj.forEach(t),Q2=n(z," et un peu de texte, juste pour avoir un peu de contenu"),z.forEach(t),Id=c(e),un=l(e,"BLOCKQUOTE",{});var eP=r(un);Er=l(eP,"P",{});var sP=r(Er);G2=n(sP,"Les fichiers Svelte peuvent être du HTML pur."),sP.forEach(t),eP.forEach(t),Ad=c(e),yt=l(e,"P",{});var My=r(yt);F2=n(My,"dans "),_r=l(My,"CODE",{});var tP=r(_r);$2=n(tP,"a-propos/+page.svelte"),tP.forEach(t),My.forEach(t),Rd=c(e),jt=l(e,"PRE",{class:!0});var kz=r(jt);kz.forEach(t),Ud=c(e),Pt=l(e,"P",{});var Ly=r(Pt);W2=n(Ly,"dans "),qr=l(Ly,"CODE",{});var aP=r(qr);X2=n(aP,"contact/+page.svelte"),aP.forEach(t),Ly.forEach(t),Vd=c(e),ht=l(e,"PRE",{class:!0});var Ez=r(ht);Ez.forEach(t),Jd=c(e),St=l(e,"P",{});var Ty=r(St);Y2=n(Ty,"dans "),br=l(Ty,"CODE",{});var nP=r(br);Z2=n(nP,"blog/+page.svelte"),nP.forEach(t),Ty.forEach(t),Nd=c(e),Ot=l(e,"PRE",{class:!0});var _z=r(Ot);_z.forEach(t),Bd=c(e),cs=l(e,"P",{});var nk=r(cs);e3=n(nk,"Notre dossier "),Cr=l(nk,"CODE",{});var oP=r(Cr);s3=n(oP,"src/routes"),oP.forEach(t),t3=n(nk," devrait ressembler à cela maintenant:"),nk.forEach(t),Qd=c(e),Dt=l(e,"PRE",{class:!0});var qz=r(Dt);qz.forEach(t),Gd=c(e),k=l(e,"P",{});var M=r(k);a3=n(M,"Vous pouvez à présent visiter "),yr=l(M,"CODE",{});var lP=r(yr);n3=n(lP,"/contact"),lP.forEach(t),o3=n(M,", "),jr=l(M,"CODE",{});var rP=r(jr);l3=n(rP,"/a-propos"),rP.forEach(t),r3=n(M," ou "),Pr=l(M,"CODE",{});var pP=r(Pr);p3=n(pP,"/blog"),pP.forEach(t),u3=n(M," et voir les pages que vous venez de créer. Il n’y a pas grand-chose encore, bien sûr, mais c’est chouette de voir au moins que le "),hr=l(M,"EM",{});var uP=r(hr);i3=n(uP,"routing"),uP.forEach(t),c3=n(M," est pris en charge automatiquement juste en créant des dossiers à l’intérieur de "),Sr=l(M,"CODE",{});var iP=r(Sr);d3=n(iP,"routes"),iP.forEach(t),f3=n(M," et en y ajoutant des fichiers "),Or=l(M,"CODE",{});var cP=r(Or);v3=n(cP,"+page.svelte"),cP.forEach(t),m3=n(M," à l’intérieur."),M.forEach(t),Fd=c(e),cn=l(e,"H3",{});var dP=r(cn);k3=n(dP,"Ajouter un layout"),dP.forEach(t),$d=c(e),R=l(e,"P",{});var et=r(R);E3=n(et,"La plupart des sites et des applications ont des éléments qui sont réutilisés sur chaque page (les exemples les plus communs sont un "),Dr=l(et,"CODE",{});var fP=r(Dr);_3=n(fP,"header"),fP.forEach(t),q3=n(et," et un "),wr=l(et,"CODE",{});var vP=r(wr);b3=n(vP,"footer"),vP.forEach(t),C3=n(et,".) Etant donné qu’ajouter ces éléments à la main dans chaque page serait à la fois répétitif et augmente le risque de faire une erreur, SvelteKit (comme beaucoup de frameworks) nous facilite la tâche et permet de définir des "),xr=l(et,"EM",{});var mP=r(xr);y3=n(mP,"layouts"),mP.forEach(t),j3=n(et,"."),et.forEach(t),Wd=c(e),ne=l(e,"P",{});var al=r(ne);P3=n(al,"Dans "),zr=l(al,"CODE",{});var kP=r(zr);h3=n(kP,"src/routes"),kP.forEach(t),S3=n(al,", créons un nouveau fichier appelé "),Mr=l(al,"CODE",{});var EP=r(Mr);O3=n(EP,"+layout.svelte"),EP.forEach(t),D3=n(al,"."),al.forEach(t),Xd=c(e),wt=l(e,"PRE",{class:!0});var bz=r(wt);bz.forEach(t),Yd=c(e),L=l(e,"P",{});var ss=r(L);Lr=l(ss,"STRONG",{});var _P=r(Lr);w3=n(_P,"Ce fichier a un rôle spécial:"),_P.forEach(t),x3=n(ss," SvelteKit vérifie automatiquement s’il y a un fichier "),Tr=l(ss,"CODE",{});var qP=r(Tr);z3=n(qP,"+layout.svelte"),qP.forEach(t),M3=n(ss," dans le dossier "),Hr=l(ss,"CODE",{});var bP=r(Hr);L3=n(bP,"routes"),bP.forEach(t),T3=n(ss," (et tous les sous-dossiers). Ce "),Kr=l(ss,"EM",{});var CP=r(Kr);H3=n(CP,"layout"),CP.forEach(t),K3=n(ss," va s’appliquer à tout le contenu chargé depuis cette route et les sous-routes."),ss.forEach(t),Zd=c(e),ds=l(e,"P",{});var ok=r(ds);g3=n(ok,"Un "),gr=l(ok,"EM",{});var yP=r(gr);I3=n(yP,"layout"),yP.forEach(t),A3=n(ok," devient un composant parent, et la page actuelle sera insérée dedans en tant que composant enfant."),ok.forEach(t),ef=c(e),fs=l(e,"P",{});var lk=r(fs);R3=n(lk,"Donc un "),Ir=l(lk,"EM",{});var jP=r(Ir);U3=n(jP,"layout"),jP.forEach(t),V3=n(lk," directement placé dans le dossier routes va s’appliquer de manière globale, sur chaque page."),lk.forEach(t),sf=c(e),U=l(e,"P",{});var st=r(U);J3=n(st,"Faisons un exemple pour illustrer ça: ouvrez le nouveau "),Ar=l(st,"CODE",{});var PP=r(Ar);N3=n(PP,"+layout.svelte"),PP.forEach(t),B3=n(st," et ajoutez un "),Rr=l(st,"EM",{});var hP=r(Rr);Q3=n(hP,"header"),hP.forEach(t),G3=n(st," et "),Ur=l(st,"EM",{});var SP=r(Ur);F3=n(SP,"footer"),SP.forEach(t),$3=n(st," modèle:"),st.forEach(t),tf=c(e),xt=l(e,"PRE",{class:!0});var Cz=r(xt);Cz.forEach(t),af=c(e),oe=l(e,"P",{});var nl=r(oe);W3=n(nl,"Sauvegardez et vous devriez voir le texte du "),Vr=l(nl,"EM",{});var OP=r(Vr);X3=n(OP,"header"),OP.forEach(t),Y3=n(nl," apparaître au-dessus du contenu de la page, et le texte du "),Jr=l(nl,"EM",{});var DP=r(Jr);Z3=n(DP,"footer"),DP.forEach(t),e_=n(nl," en-dessous."),nl.forEach(t),nf=c(e),dn=l(e,"P",{});var wP=r(dn);fn=l(wP,"IMG",{src:!0,alt:!0}),wP.forEach(t),of=c(e),vn=l(e,"H2",{});var xP=r(vn);s_=n(xP,"Créer des composants"),xP.forEach(t),lf=c(e),mn=l(e,"P",{});var zP=r(mn);t_=n(zP,"Taper le chemin des routes dans le navigateur n’est pas terrible alors ajoutons un peu de navigation. On en profitera pour créer notre premier composant."),zP.forEach(t),rf=c(e),V=l(e,"P",{});var tt=r(V);a_=n(tt,"D’abord, créez un nouveau dossier appelé "),Nr=l(tt,"CODE",{});var MP=r(Nr);n_=n(MP,"lib"),MP.forEach(t),o_=n(tt," à l’intérieur de "),Br=l(tt,"CODE",{});var LP=r(Br);l_=n(LP,"src"),LP.forEach(t),r_=n(tt," ("),Qr=l(tt,"CODE",{});var TP=r(Qr);p_=n(TP,"lib"),TP.forEach(t),u_=n(tt," est une autre convention de SvelteKit; on en reparle plus tard)."),tt.forEach(t),pf=c(e),Y=l(e,"P",{});var Ka=r(Y);i_=n(Ka,"A l’intérieur de "),Gr=l(Ka,"CODE",{});var HP=r(Gr);c_=n(HP,"src/lib"),HP.forEach(t),d_=n(Ka,", on va créer un dossier appelé "),Fr=l(Ka,"CODE",{});var KP=r(Fr);f_=n(KP,"components"),KP.forEach(t),v_=n(Ka,", juste pour s’y retrouver, et dans ce dossier créez un nouveau composant appelé "),$r=l(Ka,"CODE",{});var gP=r($r);m_=n(gP,"Header.svelte"),gP.forEach(t),Ka.forEach(t),uf=c(e),zt=l(e,"PRE",{class:!0});var yz=r(zt);yz.forEach(t),cf=c(e),kn=l(e,"BLOCKQUOTE",{});var IP=r(kn);Wr=l(IP,"P",{});var AP=r(Wr);k_=n(AP,"Ce n’est pas obligatoire de nommer les composants avec une majuscule, ou de les garder dans leur propre dossier, mais c’est en général encouragé."),AP.forEach(t),IP.forEach(t),df=c(e),vs=l(e,"P",{});var rk=r(vs);E_=n(rk,"Dans notre nouveau composant "),Xr=l(rk,"CODE",{});var RP=r(Xr);__=n(RP,"Header"),RP.forEach(t),q_=n(rk," on va insérer une navigation basique mais efficace"),rk.forEach(t),ff=c(e),Mt=l(e,"PRE",{class:!0});var jz=r(Mt);jz.forEach(t),vf=c(e),y=l(e,"P",{});var Le=r(y);b_=n(Le,"Sauvegardez tout ça et revenez sur "),Yr=l(Le,"CODE",{});var UP=r(Yr);C_=n(UP,"+layout.svelte"),UP.forEach(t),y_=n(Le,` pour l’utiliser !
Pour ce faire, nous devons d’abord l’importer avec `),Zr=l(Le,"CODE",{});var VP=r(Zr);j_=n(VP,"import"),VP.forEach(t),P_=n(Le,", ce qui veut dire que nous devons ajouter un tag "),ep=l(Le,"CODE",{});var JP=r(ep);h_=n(JP,"<script>"),JP.forEach(t),S_=n(Le," à notre layout (je préfère l’ajouter tout en haut du fichier, mais Svelte est assez permissif et permet d’organiser l’ordre des composants comme vous voulez.) Une fois importé, on peut remplacer le "),sp=l(Le,"EM",{});var NP=r(sp);O_=n(NP,"header"),NP.forEach(t),D_=n(Le," temporaire avec le composant"),Le.forEach(t),mf=c(e),Lt=l(e,"PRE",{class:!0});var Pz=r(Lt);Pz.forEach(t),kf=c(e),j=l(e,"P",{});var Te=r(j);w_=n(Te,"Remarquez le chemin de l’"),tp=l(Te,"CODE",{});var BP=r(tp);x_=n(BP,"import"),BP.forEach(t),z_=n(Te,". "),ap=l(Te,"CODE",{});var QP=r(ap);M_=n(QP,"$lib"),QP.forEach(t),L_=n(Te," est un alias pratique qui pointe directement vers "),np=l(Te,"CODE",{});var GP=r(np);T_=n(GP,"src/lib"),GP.forEach(t),H_=n(Te,", ce qui évite de devoir péniblement taper des chemins relatifs (vous pouvez personnaliser cet alias ou ajouter le vôtre dans "),op=l(Te,"CODE",{});var FP=r(op);K_=n(FP,"jsconfig.json"),FP.forEach(t),g_=n(Te,", mais je n’aborderai pas ce sujet ici.)"),Te.forEach(t),Ef=c(e),En=l(e,"P",{});var $P=r(En);I_=n($P,"Quoi qu’il en soit, vous devriez voir maintenant quelque chose d’un peu plus ergonomique pour l’utilisateur·rice:"),$P.forEach(t),_f=c(e),_n=l(e,"P",{});var WP=r(_n);A_=n(WP,"img screen"),WP.forEach(t),qf=c(e),qn=l(e,"P",{});var XP=r(qn);R_=n(XP,"L’apparence n’est toujours pas en place, mais c’est fonctionnel. On peut désormais naviguer entre les pages, ce qui va permettre de tester les choses un peu plus facilement."),XP.forEach(t),bf=c(e),bn=l(e,"H3",{});var YP=r(bn);U_=n(YP,"L’apparence des composants"),YP.forEach(t),Cf=c(e),ms=l(e,"P",{});var pk=r(ms);V_=n(pk,"Le style associé aux composants Svelte a une portée locale ("),lp=l(pk,"EM",{});var ZP=r(lp);J_=n(ZP,"scope"),ZP.forEach(t),N_=n(pk,") par défaut. On peut ainsi écrire du CSS sans avoir à se soucier d’effets de débordement à l’extérieur du composant."),pk.forEach(t),yf=c(e),le=l(e,"P",{});var ol=r(le);B_=n(ol,"Pour tester cela, ajoutons un tag "),rp=l(ol,"CODE",{});var eh=r(rp);Q_=n(eh,"<style>"),eh.forEach(t),G_=n(ol," dans le "),pp=l(ol,"CODE",{});var sh=r(pp);F_=n(sh,"Header.svelte"),sh.forEach(t),$_=n(ol," (il peut se mettre n’importe où mais je préfère le mettre à la fin.)"),ol.forEach(t),jf=c(e),Tt=l(e,"PRE",{class:!0});var hz=r(Tt);hz.forEach(t),Pf=c(e),re=l(e,"P",{});var ll=r(re);W_=n(ll,"Si vous sauvegardez et jetez un oeil au site désormais, vous devriez voir votre "),up=l(ll,"EM",{});var th=r(up);X_=n(th,"header"),th.forEach(t),Y_=n(ll," avec une apparence plus standard pour un "),ip=l(ll,"EM",{});var ah=r(ip);Z_=n(ah,"header"),ah.forEach(t),eq=n(ll,". Vous pouvez également constater que les règles CSS ne s’appliquent pas au contenu principal de la page. C’est le pouvoir de la portée locale !"),ll.forEach(t),hf=c(e),ks=l(e,"P",{});var uk=r(ks);sq=n(uk,"Si vous le souhaitez, vous pouvez répéter ce processus avec un composant "),cp=l(uk,"CODE",{});var nh=r(cp);tq=n(nh,"<Footer />"),nh.forEach(t),aq=n(uk,". Je passe l’exercice étant donné que c’est la même chose, mais ce serait une bonne chose à faire au stade où on en est."),uk.forEach(t),Sf=c(e),P=l(e,"P",{});var He=r(P);nq=n(He,"Rappel: les composants liées au "),dp=l(He,"EM",{});var oh=r(dp);oq=n(oh,"routing"),oh.forEach(t),lq=n(He," (comme les pages, layouts et les points d’accès) commencent par un "),fp=l(He,"CODE",{});var lh=r(fp);rq=n(lh,"+"),lh.forEach(t),pq=n(He,". Les composants normaux, réutilisables n’ont pas ça, et commencent d’ordinaire avec une majuscule (Vous pouvez tout garder dans le dossier "),vp=l(He,"CODE",{});var rh=r(vp);uq=n(rh,"routes"),rh.forEach(t),iq=n(He,", mais c’est souvent préférable d’avoir les composants réutilisables dans "),mp=l(He,"CODE",{});var ph=r(mp);cq=n(ph,"lib"),ph.forEach(t),dq=n(He," plutôt.)"),He.forEach(t),Of=c(e),Cn=l(e,"H2",{});var uh=r(Cn);fq=n(uh,"Les feuilles de styles dans SvelteKit"),uh.forEach(t),Df=c(e),Es=l(e,"P",{});var ik=r(Es);vq=n(ik,"Svelte vous permet d’importer des feuilles de style directement dans les composants, y compris les pages et les "),kp=l(ik,"EM",{});var ih=r(kp);mq=n(ih,"layouts"),ih.forEach(t),kq=n(ik,". Il y a d’autres manières de charger des feuilles de style, mais je pense que c’est la meilleure. D’abord c’est simple, mais surtout Svelte les préprocess automatiquement, ce qui sera pratique lorsqu’on voudra ajouter Sass."),ik.forEach(t),wf=c(e),J=l(e,"P",{});var at=r(J);Eq=n(at,"Créons un nouveau dossier "),Ep=l(at,"CODE",{});var ch=r(Ep);_q=n(ch,"styles"),ch.forEach(t),qq=n(at," dans "),_p=l(at,"CODE",{});var dh=r(_p);bq=n(dh,"src/lib"),dh.forEach(t),Cq=n(at," et ajoutons un fichier "),qp=l(at,"CODE",{});var fh=r(qp);yq=n(fh,"style.css"),fh.forEach(t),jq=n(at," à l’intérieur"),at.forEach(t),xf=c(e),Ht=l(e,"PRE",{class:!0});var Sz=r(Ht);Sz.forEach(t),zf=c(e),yn=l(e,"BLOCKQUOTE",{});var vh=r(yn);Qe=l(vh,"P",{});var rl=r(Qe);Pq=n(rl,"Il n’y a pas règles sur comment organiser les choses à l’intérieur de "),bp=l(rl,"CODE",{});var mh=r(bp);hq=n(mh,"src/lib"),mh.forEach(t),Sq=n(rl,". Vous n’êtes même pas obligé·e·s d’utiliser "),Cp=l(rl,"CODE",{});var kh=r(Cp);Oq=n(kh,"lib"),kh.forEach(t),Dq=n(rl,". Faites selon votre propre logique et/ou vos préférences."),rl.forEach(t),vh.forEach(t),Mf=c(e),jn=l(e,"P",{});var Eh=r(jn);wq=n(Eh,"Vous pouvez ajouter le CSS que vous voulez, mais si vous avez besoin d’un début, voici une série de règles qui devraient rendre l’ensemble un peu plus joli:"),Eh.forEach(t),Lf=c(e),Kt=l(e,"PRE",{class:!0});var Oz=r(Kt);Oz.forEach(t),Tf=c(e),_s=l(e,"P",{});var ck=r(_s);xq=n(ck,"Une fois que nous avons la feuille de styles avec du CSS dedans, nous pouvons l’importer de manière globale comme pour le composant "),yp=l(ck,"EM",{});var _h=r(yp);zq=n(_h,"Header"),_h.forEach(t),Mq=n(ck,":"),ck.forEach(t),Hf=c(e),gt=l(e,"PRE",{class:!0});var Dz=r(gt);Dz.forEach(t),Kf=c(e),Pn=l(e,"P",{});var qh=r(Pn);Lq=n(qh,"img rendu css"),qh.forEach(t),gf=c(e),pe=l(e,"P",{});var pl=r(pe);Tq=n(pl,"Etant donné que SvelteKit est compilé et généré sur le serveur ("),jp=l(pl,"EM",{});var bh=r(jp);Hq=n(bh,"server-side rendering"),bh.forEach(t),Kq=n(pl,", ou SSR), on peut inspecter la page et voir que notre CSS a été directement rajouté au HTML au lieu d’être construite côté client ("),Pp=l(pl,"EM",{});var Ch=r(Pp);gq=n(Ch,"client-side rendering"),Ch.forEach(t),Iq=n(pl," ou CSR). Chouette !"),pl.forEach(t),If=c(e),hn=l(e,"BLOCKQUOTE",{});var yh=r(hn);It=l(yh,"P",{});var dk=r(It);Aq=n(dk,"Importer des feuilles de style dans des fichiers JavaScript n’est pas un standard du web; c’est simplement pris en charge par quelques "),hp=l(dk,"EM",{});var jh=r(hp);Rq=n(jh,"bundlers"),jh.forEach(t),Uq=n(dk," et outils de compilation."),dk.forEach(t),yh.forEach(t),Af=c(e),Sn=l(e,"H3",{});var Ph=r(Sn);Vq=n(Ph,"Ajouter Sass à SvelteKit"),Ph.forEach(t),Rf=c(e),qs=l(e,"P",{});var fk=r(qs);Jq=n(fk,"Svelte permet d’ajouter facilement des processeurs externes, grâce à "),Sp=l(fk,"CODE",{});var hh=r(Sp);Nq=n(hh,"[svelte-preprocess](https://github.com/sveltejs/svelte-preprocess)"),hh.forEach(t),Bq=n(fk,"."),fk.forEach(t),Uf=c(e),On=l(e,"BLOCKQUOTE",{});var Sh=r(On);Op=l(Sh,"P",{});var Oh=r(Op);Dn=l(Oh,"EM",{});var Hy=r(Dn);Dp=l(Hy,"CODE",{});var Dh=r(Dp);Qq=n(Dh,"svelte-preprocess"),Dh.forEach(t),Gq=n(Hy," transforme automatiquement le code dans vos gabarits Svelte pour fournir une prise en charge intégrée de TypeScript, PostCSS, scss/sass, Less, et de nombreuses autres technologies."),Hy.forEach(t),Oh.forEach(t),Sh.forEach(t),Vf=c(e),ue=l(e,"P",{});var ul=r(ue);Fq=n(ul,"La prochaine étape consiste à installer à la fois "),wp=l(ul,"CODE",{});var wh=r(wp);$q=n(wh,"svelte-preprocess"),wh.forEach(t),Wq=n(ul," et "),xp=l(ul,"CODE",{});var xh=r(xp);Xq=n(xh,"sass"),xh.forEach(t),Yq=n(ul,", ce qu’on va faire dans le même mouvement"),ul.forEach(t),Jf=c(e),At=l(e,"PRE",{class:!0});var wz=r(At);wz.forEach(t),Nf=c(e),wn=l(e,"BLOCKQUOTE",{});var zh=r(wn);v=l(zh,"P",{});var b=r(v);Zq=n(b,"Depuis la version 1.0 SvelteKit est installé avec "),zp=l(b,"CODE",{});var Mh=r(zp);eb=n(Mh,"vitePreprocess"),Mh.forEach(t),sb=n(b," en tant qu’alternative embarquée de "),Mp=l(b,"CODE",{});var Lh=r(Mp);tb=n(Lh,"svelte-preprocess"),Lh.forEach(t),ab=n(b,". Bien que "),Lp=l(b,"CODE",{});var Th=r(Lp);nb=n(Th,"vitePreprocess"),Th.forEach(t),ob=n(b," soit fourni avec SvelteKit, ce qui le rend plus simple à utiliser hors de la boîte, ce n’est toutefois pas à l’heure actuelle aussi versatile que "),Tp=l(b,"CODE",{});var Hh=r(Tp);lb=n(Hh,"svelte-preprocess"),Hh.forEach(t),rb=n(b,". Il manque des fonctionnalités qui sont indispensables pour moi, comme le modificateur "),Hp=l(b,"CODE",{});var Kh=r(Hp);pb=n(Kh,"global"),Kh.forEach(t),ub=n(b," pour les styles des composants. C’est pour cela que j’ai préféré garder "),Kp=l(b,"CODE",{});var gh=r(Kp);ib=n(gh,"svelte-preprocess"),gh.forEach(t),cb=n(b," dans ce tutoriel. "),xn=l(b,"A",{href:!0});var Ih=r(xn);db=n(Ih,"Vous pouvez en lire plus sur les deux préprocesseurs dans la documentation"),Ih.forEach(t),fb=n(b,"."),b.forEach(t),zh.forEach(t),Bf=c(e),zn=l(e,"H4",{});var Ah=r(zn);vb=n(Ah,"Modifier la configuration Svelte"),Ah.forEach(t),Qf=c(e),Mn=l(e,"P",{});var Rh=r(Mn);mb=n(Rh,`Ensuite, ouvrez le fichier svelte.config.js qu’on trouve à la racine du projet.
Comme son nom l’indique, svelte.config.js est le coeur de, ben la configuration. C’est là que nous effectuerons tous les changements nécessaires concernant les options de SvelteKit et le compilateur.`),Rh.forEach(t),Gf=c(e),Ln=l(e,"P",{});var Uh=r(Ln);kb=n(Uh,"Ce changement-ci est minime: nous devons simplement importer svelte-preprocess et l’ajouter à la liste des pré-processeurs de SvelteKit."),Uh.forEach(t),Ff=c(e),Rt=l(e,"PRE",{class:!0});var xz=r(Rt);xz.forEach(t),$f=c(e),bs=l(e,"P",{});var vk=r(bs);Eb=n(vk,"Veuillez notez qu’il faudra créer l’option "),gp=l(vk,"CODE",{});var Vh=r(gp);_b=n(Vh,"preprocess"),Vh.forEach(t),qb=n(vk,", elle n’est pas là par défaut (on rajoutera le preprocessing de Markdown ici également, plus tard.)"),vk.forEach(t),Wf=c(e),ie=l(e,"P",{});var il=r(ie);bb=n(il,"Veuillez également noter que vous "),Ip=l(il,"EM",{});var Jh=r(Ip);Cb=n(Jh,"pouvez"),Jh.forEach(t),yb=n(il," passer un objet avec plus d’options à l’intérieur de la fonction "),Ap=l(il,"CODE",{});var Nh=r(Ap);jb=n(Nh,"sveltePreprocess()"),Nh.forEach(t),Pb=n(il,", mais nous ne ferons pas ça pour l’instant. La fonction sait déjà quoi faire avec Sass par défaut, du coup pas besoin de personnalisation supplémentaire."),il.forEach(t),Xf=c(e),Tn=l(e,"BLOCKQUOTE",{});var Bh=r(Tn);Z=l(Bh,"P",{});var nt=r(Z);hb=n(nt,"Ça vaut le coup de mentionner l’option "),Rp=l(nt,"CODE",{});var Qh=r(Rp);Sb=n(Qh,"scss.prependData"),Qh.forEach(t),Ob=n(nt,", qui permet d’injecter automatiquement du code au début de n’importe quel traitement Sass (tel que des variables Sass ou un "),Up=l(nt,"CODE",{});var Gh=r(Up);Db=n(Gh,"@import"),Gh.forEach(t),wb=n(nt,"). Vous pouvez en lire plus dans "),Cs=l(nt,"A",{href:!0,rel:!0});var Ky=r(Cs);xb=n(Ky,"la documentation autour de "),Vp=l(Ky,"CODE",{});var Fh=r(Vp);zb=n(Fh,"svelte-preprocess"),Fh.forEach(t),Ky.forEach(t),Mb=n(nt,"; je voulais simplement le mentionner vu que c’est assez pratique."),nt.forEach(t),Bh.forEach(t),Yf=c(e),Hn=l(e,"P",{});var $h=r(Hn);Lb=n($h,"Une dernière chose importante à savoir: chaque changement de configuration demande de redémarrer le serveur de développement pour appliquer les nouveaux changements."),$h.forEach(t),Zf=c(e),Kn=l(e,"H3",{});var Wh=r(Kn);Tb=n(Wh,"Ajouter SCSS au style des composants"),Wh.forEach(t),ev=c(e),ce=l(e,"P",{});var cl=r(ce);Hb=n(cl,"Maintenant que nous avons à la fois Sass et le pré-processeur installés, nous pouvons utiliser Sass dans n’importe quel bloc de "),Jp=l(cl,"CODE",{});var Xh=r(Jp);Kb=n(Xh,"<style>"),Xh.forEach(t),gb=n(cl," d’un composant en ajoutant un attribut "),Np=l(cl,"CODE",{});var Yh=r(Np);Ib=n(Yh,"lang"),Yh.forEach(t),Ab=n(cl,", comme ceci:"),cl.forEach(t),sv=c(e),Ut=l(e,"PRE",{class:!0});var zz=r(Ut);zz.forEach(t),tv=c(e),gn=l(e,"H3",{});var Zh=r(gn);Rb=n(Zh,"Utiliser des fichiers SCSS globaux"),Zh.forEach(t),av=c(e),h=l(e,"P",{});var Ke=r(h);Ub=n(Ke,"Faire référence à des fichiers SCSS se fait de la même manière que pour des fichiers CSS. En fait vous pouvez simplement renommer le fichier existant "),Bp=l(Ke,"CODE",{});var eS=r(Bp);Vb=n(eS,"style.css"),eS.forEach(t),Jb=n(Ke," en "),Qp=l(Ke,"CODE",{});var sS=r(Qp);Nb=n(sS,"style.scss"),sS.forEach(t),Bb=n(Ke,". (Il faudra aussi mettre à jour l’"),Gp=l(Ke,"CODE",{});var tS=r(Gp);Qb=n(tS,"import"),tS.forEach(t),Gb=n(Ke," dans notre "),Fp=l(Ke,"EM",{});var aS=r(Fp);Fb=n(aS,"layout"),aS.forEach(t),$b=n(Ke," aussi, mais c’est tout.)"),Ke.forEach(t),nv=c(e),Vt=l(e,"PRE",{class:!0});var Mz=r(Vt);Mz.forEach(t),ov=c(e),In=l(e,"P",{});var nS=r(In);Wb=n(nS,"OK, nous avons maintenant une idée assez précise de la structure du projet et de la personnalisation. Il est temps de s’occuper de la dernière pièce du puzzle: la prise en charge de Markdown."),nS.forEach(t),lv=c(e),An=l(e,"H2",{});var oS=r(An);Xb=n(oS,"Ajouter Markdown à SvelteKit avec mdsvex"),oS.forEach(t),rv=c(e),ys=l(e,"P",{});var mk=r(ys);Yb=n(mk,"Si vous avez entendu parler de MDX (généralement utilisé dans les projets sous React), vous pouvez considérer "),Jt=l(mk,"A",{href:!0,rel:!0});var lS=r(Jt);Zb=n(lS,"mdsvex"),lS.forEach(t),e5=n(mk,", drôle de nom, comme l’équivalent pour Svelte."),mk.forEach(t),pv=c(e),js=l(e,"P",{});var kk=r(js);s5=n(kk,"Hélas le mot "),$p=l(kk,"EM",{});var rS=r($p);t5=n(rS,"svelte"),rS.forEach(t),a5=n(kk," est compliqué à utiliser pour faire des portemanteaux élégants, mais ça n’arrête pas la communauté Svelte pour autant."),kk.forEach(t),uv=c(e),Rn=l(e,"P",{});var pS=r(Rn);n5=n(pS,"Quoi qu’il en soit, mdsvex fait tout ce dont nous avons besoin avec Markdown:"),pS.forEach(t),iv=c(e),de=l(e,"UL",{});var dl=r(de);Wp=l(dl,"LI",{});var uS=r(Wp);o5=n(uS,"ça prend en charge la conversion de Markdown vers HTML"),uS.forEach(t),l5=c(dl),Xp=l(dl,"LI",{});var iS=r(Xp);r5=n(iS,"ça permet d’utiliser des fichiers Markdown comme des composants"),iS.forEach(t),p5=c(dl),Nt=l(dl,"LI",{});var Ek=r(Nt);u5=n(Ek,"et ça permet d’utiliser des composants Svelte "),Yp=l(Ek,"EM",{});var cS=r(Yp);i5=n(cS,"à l’intérieur"),cS.forEach(t),c5=n(Ek," de Markdown"),Ek.forEach(t),dl.forEach(t),cv=c(e),Un=l(e,"P",{});var dS=r(Un);d5=n(dS,"D’abord, installons msdvex"),dS.forEach(t),dv=c(e),Bt=l(e,"PRE",{class:!0});var Lz=r(Bt);Lz.forEach(t),fv=c(e),Ps=l(e,"P",{});var _k=r(Ps);f5=n(_k,"Ensuite nous devons ajouter mdsvex à notre configuration. Ouvrez "),Zp=l(_k,"CODE",{});var fS=r(Zp);v5=n(fS,"svelte.config.js"),fS.forEach(t),m5=n(_k," et mofidiez le code pour avoir ceci:"),_k.forEach(t),vv=c(e),Qt=l(e,"PRE",{class:!0});var Tz=r(Qt);Tz.forEach(t),mv=c(e),Vn=l(e,"P",{});var vS=r(Vn);k5=n(vS,"Pour les détails:"),vS.forEach(t),kv=c(e),hs=l(e,"UL",{});var qk=r(hs);Ge=l(qk,"LI",{});var fl=r(Ge);E5=n(fl,"la propriété "),eu=l(fl,"CODE",{});var mS=r(eu);_5=n(mS,"extensions"),mS.forEach(t),q5=n(fl," dans "),su=l(fl,"CODE",{});var kS=r(su);b5=n(kS,"config"),kS.forEach(t),C5=n(fl," liste les types de fichiers qu’il faut traiter comme des composants (ce qui permet à Svelte de les importer et de les utiliser comme des composants classiques)"),fl.forEach(t),y5=c(qk),fe=l(qk,"LI",{});var ga=r(fe);j5=n(ga,"la fonction "),tu=l(ga,"CODE",{});var ES=r(tu);P5=n(ES,"mdsvex()"),ES.forEach(t),h5=n(ga," pré-processe le Markdown en HTML, mais ça cible uniquement les fichiers "),au=l(ga,"CODE",{});var _S=r(au);S5=n(_S,".svx"),_S.forEach(t),O5=n(ga," par défaut, alors on modifie cet argument pour inclure également les fichiers "),nu=l(ga,"CODE",{});var qS=r(nu);D5=n(qS,".md"),qS.forEach(t),ga.forEach(t),qk.forEach(t),Ev=c(e),Gt=l(e,"P",{});var gy=r(Gt);ou=l(gy,"STRONG",{});var bS=r(ou);w5=n(bS,"Rappel:"),bS.forEach(t),x5=n(gy," n’oubliez pas de redémarrer le serveur de développement après avoir effectué les changements de configuration."),gy.forEach(t),_v=c(e),Jn=l(e,"P",{});var CS=r(Jn);z5=n(CS,"Si vous rencontre des erreurs, vérifiez que tout est bien correctement installé, que toutes les importations sont présentes dans votre fichier de configuration, et qu’il n’y a pas d’erreurs de syntaxe."),CS.forEach(t),qv=c(e),Nn=l(e,"H3",{});var yS=r(Nn);M5=n(yS,"Les pages Markdown"),yS.forEach(t),bv=c(e),Bn=l(e,"P",{});var jS=r(Bn);L5=n(jS,"Grâce aux changements dans la configuration, nous pouvons désormais importer et utiliser les fichiers Markdown comme des composants Svelte."),jS.forEach(t),Cv=c(e),Qn=l(e,"P",{});var PS=r(Qn);T5=n(PS,"Grâce à mdsvex, nous pouvons donc utiliser les fichiers Markdown comme des pages."),PS.forEach(t),yv=c(e),Fe=l(e,"P",{});var Qc=r(Fe);H5=n(Qc,"Pour tester, créons "),lu=l(Qc,"CODE",{});var hS=r(lu);K5=n(hS,"src/routes/uses/+page.md"),hS.forEach(t),g5=n(Qc," et écrivons du Markdown dedans. Vous pouvez voir le contenu en allant sur "),ru=l(Qc,"CODE",{});var SS=r(ru);I5=n(SS,"/uses"),SS.forEach(t),Qc.forEach(t),jv=c(e),Ft=l(e,"PRE",{class:!0});var Hz=r(Ft);Hz.forEach(t),Pv=c(e),$t=l(e,"PRE",{class:!0});var Kz=r($t);Kz.forEach(t),hv=c(e),Gn=l(e,"P",{});var OS=r(Gn);A5=n(OS,"img result"),OS.forEach(t),Sv=c(e),Fn=l(e,"P",{});var DS=r(Fn);R5=n(DS,"Vous pouvez même importer et utiliser du contenu Markdown à l’intérieur d’autres fichiers, si vous avez besoin qu’une partie de la page soit intéractive par exemple, mais que le reste soit juste du texte Markdown statique."),DS.forEach(t),Ov=c(e),$n=l(e,"P",{});var wS=r($n);U5=n(wS,"Les pages Markdown sont une option intéressantes pour du contenu principalement textuel, vu que c’est souvent plus rapide et facile d’écrire du Markdown que de la syntaxe HTML."),wS.forEach(t),Dv=c(e),Ss=l(e,"P",{});var bk=r(Ss);V5=n(bk,"La page "),pu=l(bk,"CODE",{});var xS=r(pu);J5=n(xS,"/uses"),xS.forEach(t),N5=n(bk," n’a pas besoin d’être permanente, mais gardons-la pour le moment; nous l’utiliserons à nouveau bientôt. Parlons de quelques fonctionnalités sympa de mdsvex."),bk.forEach(t),wv=c(e),Wn=l(e,"H3",{});var zS=r(Wn);B5=n(zS,"Blocs de code dans Markdown"),zS.forEach(t),xv=c(e),Os=l(e,"P",{});var Ck=r(Os);Q5=n(Ck,"Pratique, mdsvex vient avec "),Wt=l(Ck,"A",{href:!0,rel:!0});var MS=r(Wt);G5=n(MS,"prism.js"),MS.forEach(t),F5=n(Ck," pré-installé pour mettre en évidence la syntaxe du code. Tout ce que vous avez à faire est de préciser le langage (en l’ajoutant au triple ` du début de bloc) et mdsvex va l’interpréter correctement."),Ck.forEach(t),zv=c(e),Xt=l(e,"PRE",{class:!0});var gz=r(Xt);gz.forEach(t),Mv=c(e),ve=l(e,"P",{});var vl=r(ve);$5=n(vl,"Tous les blocs de code sur ce site sont générés avec cette technique. Bonus: mdsvex a même "),uu=l(vl,"CODE",{});var LS=r(uu);W5=n(LS,"svelte"),LS.forEach(t),X5=n(vl,` dans les langages disponibles !
Notez qu’il vous faudra un peu de CSS pour faire les couleurs, mais il y a de `),Yt=l(vl,"A",{href:!0,rel:!0});var TS=r(Yt);Y5=n(TS,"nombreux thèmes utilisables tels quel"),TS.forEach(t),Z5=n(vl,", ou en tant que base pour faire le vôtre."),vl.forEach(t),Lv=c(e),Xn=l(e,"H3",{});var HS=r(Xn);e4=n(HS,"Utiliser les composants Svelte dans Markdown"),HS.forEach(t),Tv=c(e),Yn=l(e,"P",{});var KS=r(Yn);s4=n(KS,"Comme dit précédemment: mdsvex vous permet d’utiliser les composants Svelte à l’intérieur de Markdown !"),KS.forEach(t),Hv=c(e),Ds=l(e,"P",{});var yk=r(Ds);t4=n(yk,"Pour ce faire, insérez un tag script au début du fichier (juste après le "),Zt=l(yk,"A",{href:!0,rel:!0});var gS=r(Zt);a4=n(gS,"frontmatter"),gS.forEach(t),n4=n(yk,") et importer le composant dedans. Vous pouvez ensuite ajouter celui-ci dans votre Markdown comme d’habitude:"),yk.forEach(t),Kv=c(e),ea=l(e,"PRE",{class:!0});var Iz=r(ea);Iz.forEach(t),gv=c(e),Zn=l(e,"BLOCKQUOTE",{});var IS=r(Zn);sa=l(IS,"P",{});var jk=r(sa);o4=n(jk,"Comme vous pouvez vous en douter peut-être: oui, vous pouvez importer des fichiers Markdown "),iu=l(jk,"EM",{});var AS=r(iu);l4=n(AS,"à l’intérieur"),AS.forEach(t),r4=n(jk," d’autres fichiers Markdown !"),jk.forEach(t),IS.forEach(t),Iv=c(e),eo=l(e,"H2",{});var RS=r(eo);p4=n(RS,"Mettre en place le blog"),RS.forEach(t),Av=c(e),so=l(e,"P",{});var US=r(so);u4=n(US,"Maintenant que nous avons fini la mise en place du traitement Markdown, nous pouvons aborder le coeur de ce tutoriel et commencer la mise en place du blog."),US.forEach(t),Rv=c(e),to=l(e,"P",{});var VS=r(to);cu=l(VS,"EM",{});var JS=r(cu);i4=n(JS,"[ À ce moment là de l’article, Josh présente deux manières d’organiser les billets Markdown, une où chaque billet est dans un dossier séparé, c’est la méthode #1 et une autre où les billets sont tous réunis dans un seul dossier, c’est la méthode #2. Etant donné que j’ai choisi d’implémenter la méthode #2, je ne vais traduire que celle-là pour le moment, le billet est déjà bien assez long comme ça. Si des personnes souhaitent une traduction de l’autre méthode, je le ferai à ce moment-là. ]"),JS.forEach(t),VS.forEach(t),Uv=c(e),ao=l(e,"H3",{});var NS=r(ao);c4=n(NS,"Méthode #2: les routes dynamiques"),NS.forEach(t),Vv=c(e),ws=l(e,"P",{});var Pk=r(ws);d4=n(Pk,"Comme mentionné plus tôt: on pourrait avoir un dossier dans "),du=l(Pk,"CODE",{});var BS=r(du);f4=n(BS,"src/routes/blog"),BS.forEach(t),v4=n(Pk," pour chaque billet de blog, mais ce serait pénible et compliqué de gérer autant de fichiers passé un certain volume."),Pk.forEach(t),Jv=c(e),me=l(e,"P",{});var ml=r(me);m4=n(ml,"Au lieu de faire ça nous allons simplement mettre tous nos billets markdown dans "),fu=l(ml,"CODE",{});var QS=r(fu);k4=n(QS,"src/routes/blog"),QS.forEach(t),E4=n(ml," et utiliser une seule route dynamique pour les afficher ! Ce faisant on va aussi découvrir plusieurs nouveaux aspects du "),vu=l(ml,"EM",{});var GS=r(vu);_4=n(GS,"routing"),GS.forEach(t),q4=n(ml," dans SvelteKit."),ml.forEach(t),Nv=c(e),no=l(e,"P",{});var FS=r(no);b4=n(FS,"Démarrons avec quelques billets Markdown dans le dossier blog."),FS.forEach(t),Bv=c(e),ta=l(e,"PRE",{class:!0});var Az=r(ta);Az.forEach(t),Qv=c(e),oo=l(e,"P",{});var $S=r(oo);C4=n($S,"Dans chaque billet vous pouvez mettre ce template:"),$S.forEach(t),Gv=c(e),aa=l(e,"PRE",{class:!0});var Rz=r(aa);Rz.forEach(t),Fv=c(e),S=l(e,"P",{});var ge=r(S);y4=n(ge,"Pour le moment "),mu=l(ge,"CODE",{});var WS=r(mu);j4=n(WS,"/blog/1"),WS.forEach(t),P4=n(ge," et "),ku=l(ge,"CODE",{});var XS=r(ku);h4=n(XS,"/blog/2"),XS.forEach(t),S4=n(ge," ne s’afficheront pas. C’est parce que chaque route sur notre site doit avoir un "),Eu=l(ge,"CODE",{});var YS=r(Eu);O4=n(YS,"+page.svelte"),YS.forEach(t),D4=n(ge," (ou un fichier valide commençant par "),_u=l(ge,"CODE",{});var ZS=r(_u);w4=n(ZS,"+"),ZS.forEach(t),x4=n(ge,") à afficher."),ge.forEach(t),$v=c(e),lo=l(e,"BLOCKQUOTE",{});var eO=r(lo);qu=l(eO,"P",{});var sO=r(qu);z4=n(sO,"Vous pouvez créer un sous-dossier pour mettre tous les billets dedans, ou même les mettre complètement ailleurs, comme bon vous semble. J’ai juste utilisé le chemin le plus facile. Si vous changez l’endroit où sont les fichiers, veillez à corriger le chemin dans le code."),sO.forEach(t),eO.forEach(t),Wv=c(e),ro=l(e,"P",{});var tO=r(ro);M4=n(tO,"Du coup comment peut-on charger le contenu d’un billet ? C’est là qu’interviennent les routes dynamiques !"),tO.forEach(t),Xv=c(e),ke=l(e,"P",{});var kl=r(ke);L4=n(kl,"Créons un dossier "),bu=l(kl,"CODE",{});var aO=r(bu);T4=n(aO,"[slug]"),aO.forEach(t),H4=n(kl," à l’intérieur de "),Cu=l(kl,"CODE",{});var nO=r(Cu);K4=n(nO,"src/routes/blog"),nO.forEach(t),g4=n(kl," (en incluant les crochets dans le nom du dossier)."),kl.forEach(t),Yv=c(e),na=l(e,"PRE",{class:!0});var Uz=r(na);Uz.forEach(t),Zv=c(e),O=l(e,"P",{});var Ie=r(O);I4=n(Ie,"Les crochets ( "),yu=l(Ie,"CODE",{});var oO=r(yu);A4=n(oO,"[ ]"),oO.forEach(t),R4=n(Ie," ) indiquent que cette route est dynamique; elle correspondra à n’importe quel chemin "),ju=l(Ie,"CODE",{});var lO=r(ju);U4=n(lO,"/blog/*"),lO.forEach(t),V4=n(Ie," (sauf la page "),Pu=l(Ie,"CODE",{});var rO=r(Pu);J4=n(rO,"/blog"),rO.forEach(t),N4=n(Ie," qui est bien sûr gérée par le fichier "),hu=l(Ie,"CODE",{});var pO=r(hu);B4=n(pO,"+page.svelte"),pO.forEach(t),Q4=n(Ie,")."),Ie.forEach(t),em=c(e),xs=l(e,"P",{});var hk=r(xs);G4=n(hk,"En d’autres termes: nous ne connaissons pas à l’avance la partie qui va remplacer "),Su=l(hk,"CODE",{});var uO=r(Su);F4=n(uO,"slug"),uO.forEach(t),$4=n(hk,", mais nous savons qu’il y aura quelque chose, et ce dossier va gérer ce scénario."),hk.forEach(t),sm=c(e),zs=l(e,"P",{});var Sk=r(zs);W4=n(Sk,"Pour faire ça, nous allons devoir utiliser la fonction "),Ou=l(Sk,"CODE",{});var iO=r(Ou);X4=n(iO,"load"),iO.forEach(t),Y4=n(Sk,"."),Sk.forEach(t),tm=c(e),po=l(e,"H3",{});var cO=r(po);Z4=n(cO,"Précharger le contenu de la page côté serveur"),cO.forEach(t),am=c(e),Ee=l(e,"P",{});var El=r(Ee);e6=n(El,"En plus d’avoir +page.svelte qui permet de générer le contenu d’une route, SvelteKit possède également "),Du=l(El,"CODE",{});var dO=r(Du);s6=n(dO,"+page.js"),dO.forEach(t),t6=n(El," qui précharge sur le serveur avant la génération de la page. C’est aussi exécuté sur le client, afin de pouvoir l’"),oa=l(El,"A",{href:!0,rel:!0});var fO=r(oa);a6=n(fO,"hydrater"),fO.forEach(t),n6=n(El," si besoin."),El.forEach(t),nm=c(e),uo=l(e,"P",{});var vO=r(uo);o6=n(vO,"Prenons un peu de recul pour expliquer plus en détails:"),vO.forEach(t),om=c(e),_e=l(e,"P",{});var _l=r(_e);l6=n(_l,"À chaque fois qu’on visite une route dans SvelteKit (par exemple "),wu=l(_l,"CODE",{});var mO=r(wu);r6=n(mO,"/blog"),mO.forEach(t),p6=n(_l,"), le router cherche une "),xu=l(_l,"CODE",{});var kO=r(xu);u6=n(kO,"+page.js"),kO.forEach(t),i6=n(_l," dans cette route."),_l.forEach(t),lm=c(e),qe=l(e,"P",{});var ql=r(qe);c6=n(ql,"Si ce fichier existe (et exporte une function "),zu=l(ql,"CODE",{});var EO=r(zu);d6=n(EO,"load"),EO.forEach(t),f6=n(ql,", comme attendu), SvelteKit va exécuter cette fonction sur le serveur avant de générer la route "),Mu=l(ql,"CODE",{});var _O=r(Mu);v6=n(_O,"+page.svelte"),_O.forEach(t),m6=n(ql,", et va passer à celle-ci n’importe quelle donnée renvoyée par la function."),ql.forEach(t),rm=c(e),be=l(e,"P",{});var bl=r(be);k6=n(bl,"Pour le dire simplement: "),Lu=l(bl,"CODE",{});var qO=r(Lu);E6=n(qO,"+page.js"),qO.forEach(t),_6=n(bl," est lue en premier puis passe tout ce qui est nécessaire au modèle"),Tu=l(bl,"CODE",{});var bO=r(Tu);q6=n(bO,"+page.svelte"),bO.forEach(t),b6=n(bl," pour le générer."),bl.forEach(t),pm=c(e),io=l(e,"P",{});var CO=r(io);C6=n(CO,"Voici une illustration:"),CO.forEach(t),um=c(e),la=l(e,"PRE",{class:!0});var Vz=r(la);Vz.forEach(t),im=c(e),co=l(e,"BLOCKQUOTE",{});var yO=r(co);Ms=l(yO,"P",{});var Gc=r(Ms);y6=n(Gc,"Si vous préférez TypeScript, vous pouvez utiliser "),Hu=l(Gc,"CODE",{});var jO=r(Hu);j6=n(jO,".ts"),jO.forEach(t),P6=n(Gc," au lieu de "),Ku=l(Gc,"CODE",{});var PO=r(Ku);h6=n(PO,".js"),PO.forEach(t),Gc.forEach(t),yO.forEach(t),cm=c(e),Ls=l(e,"P",{});var Ok=r(Ls);S6=n(Ok,"Vu qu’on fait les choses de manière dynamique, nous allons nous reposer sur les capacités de préchargement de "),gu=l(Ok,"CODE",{});var hO=r(gu);O6=n(hO,"+page.js"),hO.forEach(t),D6=n(Ok,". Créons donc ce fichier:"),Ok.forEach(t),dm=c(e),ra=l(e,"PRE",{class:!0});var Jz=r(ra);Jz.forEach(t),fm=c(e),Ce=l(e,"P",{});var Cl=r(Ce);w6=n(Cl,"À l’intérieur de "),Iu=l(Cl,"CODE",{});var SO=r(Iu);x6=n(SO,"+page.js"),SO.forEach(t),z6=n(Cl," nous devons exporter une function "),Au=l(Cl,"CODE",{});var OO=r(Au);M6=n(OO,"load"),OO.forEach(t),L6=n(Cl," qui va renvoyer des données utilisables par le modèle. Au minimum ça ressemble à ça:"),Cl.forEach(t),vm=c(e),pa=l(e,"PRE",{class:!0});var Nz=r(pa);Nz.forEach(t),mm=c(e),fo=l(e,"P",{});var DO=r(fo);T6=n(DO,"Explicitons le code en détails:"),DO.forEach(t),km=c(e),ye=l(e,"UL",{});var yl=r(ye);je=l(yl,"LI",{});var Ia=r(je);H6=n(Ia,"le plus important: "),Ru=l(Ia,"CODE",{});var wO=r(Ru);K6=n(wO,"+page.js"),wO.forEach(t),g6=n(Ia," exporte une function "),Uu=l(Ia,"CODE",{});var xO=r(Uu);I6=n(xO,"load"),xO.forEach(t),A6=n(Ia," asynchrone qui cherche à charger le fichier Markdown correspondant à la route visitée"),Vu=l(Ia,"UL",{});var zO=r(Vu);T=l(zO,"LI",{});var Ae=r(T);R6=n(Ae,"au fait, "),Ju=l(Ae,"CODE",{});var MO=r(Ju);U6=n(MO,"params.slug"),MO.forEach(t),V6=n(Ae," s’appelle comme ça parce qu’on a nommé notre route "),Nu=l(Ae,"CODE",{});var LO=r(Nu);J6=n(LO,"[slug]"),LO.forEach(t),N6=n(Ae,". Si nous avions nommé notre route dynamic "),Bu=l(Ae,"CODE",{});var TO=r(Bu);B6=n(TO,"[pizza]"),TO.forEach(t),Q6=n(Ae,", il aurait fallu utiliser "),Qu=l(Ae,"CODE",{});var HO=r(Qu);G6=n(HO,"params.pizza"),HO.forEach(t),F6=n(Ae," à la place."),Ae.forEach(t),zO.forEach(t),Ia.forEach(t),$6=c(yl),H=l(yl,"LI",{});var Re=r(H);W6=n(Re,"une fois que nous avons le fichier chargé de manière asynchrone, nous le déconstruisons et "),Gu=l(Re,"CODE",{});var KO=r(Gu);X6=n(KO,"return"),KO.forEach(t),Y6=n(Re," ce que nous souhaitons utiliser (ce sera disponible pour nous dans le modèle, juste après). "),Fu=l(Re,"CODE",{});var gO=r(Fu);Z6=n(gO,".metadata"),gO.forEach(t),e7=n(Re," contient toutes les propriétés "),$u=l(Re,"EM",{});var IO=r($u);s7=n(IO,"frontmatter"),IO.forEach(t),t7=n(Re," du billet, et "),Wu=l(Re,"CODE",{});var AO=r(Wu);a7=n(AO,".default"),AO.forEach(t),n7=n(Re," est le contenu en lui-même. Ce n’est pas obligatoire de renvoyer les champs individuels comme ceci, on pourrait simplement renvoyer le billet en entier, mais j’aime bien déconstruire un peu sur le serveur afin d’avoir un modèle plus propre."),Re.forEach(t),o7=c(yl),$e=l(yl,"LI",{});var jl=r($e);l7=n(jl,"idéalement nous devrions entourer tout ça d’un bloc "),Xu=l(jl,"CODE",{});var RO=r(Xu);r7=n(RO,"try"),RO.forEach(t),p7=n(jl,"/"),Yu=l(jl,"CODE",{});var UO=r(Yu);u7=n(UO,"catch"),UO.forEach(t),i7=n(jl," pour gérer les problèmes éventuels, mais on va juste faire le modèle minimal et fonctionnel pour le moment."),jl.forEach(t),yl.forEach(t),Em=c(e),Pe=l(e,"P",{});var Pl=r(Pe);c7=n(Pl,"Une fois ceci en place nous pouvons créer un "),Zu=l(Pl,"CODE",{});var VO=r(Zu);d7=n(VO,"+page.svelte"),VO.forEach(t),f7=n(Pl," qui va accompagner notre "),ei=l(Pl,"CODE",{});var JO=r(ei);v7=n(JO,"+page.js"),JO.forEach(t),m7=n(Pl,". Nous avons chargé nos données, nous pouvons les utiliser."),Pl.forEach(t),_m=c(e),ua=l(e,"PRE",{class:!0});var Bz=r(ua);Bz.forEach(t),qm=c(e),Ts=l(e,"P",{});var Dk=r(Ts);k7=n(Dk,"A l’intérieur de "),si=l(Dk,"CODE",{});var NO=r(si);E7=n(NO,"+page.svelte"),NO.forEach(t),_7=n(Dk," il suffit de peu de code pour terminer le tout !"),Dk.forEach(t),bm=c(e),he=l(e,"P",{});var hl=r(he);q7=n(hl,"Les données de la function "),ti=l(hl,"CODE",{});var BO=r(ti);b7=n(BO,"load"),BO.forEach(t),C7=n(hl," sont automatiquement disponibles à l’utilisation avec le prop "),ai=l(hl,"CODE",{});var QO=r(ai);y7=n(QO,"data"),QO.forEach(t),j7=n(hl,". Donc tout ce que nous avons à faire est d’exporter ce prop (pour que ce soit passé à l’intérieur) et l’exploiter !"),hl.forEach(t),Cm=c(e),ia=l(e,"PRE",{class:!0});var Qz=r(ia);Qz.forEach(t),ym=c(e),vo=l(e,"P",{});var GO=r(vo);P7=n(GO,"En chargeant un billet de blog nous devrions maintenant voir tout son contenu"),GO.forEach(t),jm=c(e),mo=l(e,"P",{});var FO=r(mo);h7=n(FO,"img result"),FO.forEach(t),Pm=c(e),ko=l(e,"BLOCKQUOTE",{});var $O=r(ko);Se=l($O,"P",{});var Aa=r(Se);S7=n(Aa,"Au cas où vous ne le sauriez pas, "),ni=l(Aa,"CODE",{});var WO=r(ni);O7=n(WO,"<svelte: component />"),WO.forEach(t),D7=n(Aa," est ce qu’on appelle un composant dynamique; il génère un composant Svelte arbitraire (fourni en tant que valeur de la prop "),oi=l(Aa,"CODE",{});var XO=r(oi);w7=n(XO,"this"),XO.forEach(t),x7=n(Aa,"), quand le composant final est inconnu à ce moment-là. C’est parfait dans cette situation parce que nous ne sommes pas certain·e·s du billet et du contenu qui sera généré. Aussi: tout ça fonctionne parce que nous avons préalablement déclaré les fichiers .md comme utilisables en tant que composant dans notre "),li=l(Aa,"CODE",{});var YO=r(li);z7=n(YO,"svelte.config.js"),YO.forEach(t),Aa.forEach(t),$O.forEach(t),hm=c(e),Oe=l(e,"P",{});var Sl=r(Oe);M7=n(Sl,"Autre syntaxe possible: on pourrait déconstruire tous les props de "),ri=l(Sl,"CODE",{});var ZO=r(ri);L7=n(ZO,"data"),ZO.forEach(t),T7=n(Sl,", et les utiliser individuellement. Cela nécessite un peu plus de préparation, mais ça a l’avantage de nous laisser utiliser "),pi=l(Sl,"CODE",{});var eD=r(pi);H7=n(eD,"Content"),eD.forEach(t),K7=n(Sl," en tant que composant à part."),Sl.forEach(t),Sm=c(e),Eo=l(e,"P",{});var sD=r(Eo);g7=n(sD,"Ceci est équivalent à l’exemple ci-dessus:"),sD.forEach(t),Om=c(e),ca=l(e,"PRE",{class:!0});var Gz=r(ca);Gz.forEach(t),Dm=c(e),_o=l(e,"P",{});var tD=r(_o);I7=n(tD,"C’est comme vous voulez. Personnellement j’aime la practicité de la déconstruction, mais ça peut tendre vers plus de squelettage. Les deux syntaxes fonctionnent de la même façon."),tD.forEach(t),wm=c(e),qo=l(e,"BLOCKQUOTE",{});var aD=r(qo);We=l(aD,"P",{});var Ol=r(We);A7=n(Ol,"Si vous choisissez la deuxième option, veillez à mettre une majuscule pour le nom du contenu/composant ("),ui=l(Ol,"CODE",{});var nD=r(ui);R7=n(nD,"Content"),nD.forEach(t),U7=n(Ol,", dans ce cas-là), afin de l’identifier en composant - à la fois dans le modèle et dans les données retournées depuis la fonction "),ii=l(Ol,"CODE",{});var oD=r(ii);V7=n(oD,"load"),oD.forEach(t),J7=n(Ol,"."),Ol.forEach(t),aD.forEach(t),xm=c(e),bo=l(e,"P",{});var lD=r(bo);N7=n(lD,"Bien, nous avons à présent une bonne gestion des billets individuels. Maintenant nous allons construire la page d’index du blog, sur laquelle nous allons lister tous nos billets. Pour ce faire, et parce que nous allons sans doute lister les billets de plusieurs manières et à différents endroits, nous allons construire nos endpoints d’API."),lD.forEach(t),zm=c(e),Co=l(e,"H2",{});var rD=r(Co);B7=n(rD,"Les routes serveur de SvelteKit"),rD.forEach(t),Mm=c(e),Hs=l(e,"P",{});var wk=r(Hs);Q7=n(wk,"Jusqu’à présent chaque route que nous avons créées étaient des pages. Mais SvelteKit offre également un autre type de route: "),da=l(wk,"A",{href:!0,rel:!0});var pD=r(da);G7=n(pD,"les routes serveur"),pD.forEach(t),F7=n(wk," (que vous pouvez considérer comme des endpoints d’API)."),wk.forEach(t),Lm=c(e),yo=l(e,"P",{});var uD=r(yo);$7=n(uD,"Les routes serveur fonctionnent de la même manière que les pages, mais là où les deuxièmes renvoient du HTML, les premières renvoient des données."),uD.forEach(t),Tm=c(e),jo=l(e,"P",{});var iD=r(jo);W7=n(iD,"Il y a trois conventions importantes à respecter au moment de créer une route serveur (qui sont, j’insiste, similaire à des endpoints d’API):"),iD.forEach(t),Hm=c(e),De=l(e,"OL",{});var Dl=r(De);Po=l(Dl,"LI",{});var Iy=r(Po);X7=n(Iy,"Une route serveur doit être appelée "),ci=l(Iy,"CODE",{});var cD=r(ci);Y7=n(cD,"+server.js"),cD.forEach(t),Iy.forEach(t),Z7=c(Dl),K=l(Dl,"LI",{});var Ue=r(K);e9=n(Ue,"Le "),di=l(Ue,"CODE",{});var dD=r(di);s9=n(dD,"+server.js"),dD.forEach(t),t9=n(Ue," doit exporter une fonction nommée (non-anonyme) pour chaque "),fa=l(Ue,"A",{href:!0,rel:!0});var fD=r(fa);a9=n(fD,"verbe HTTP"),fD.forEach(t),n9=n(Ue," auquel il répond (Souvent ce sera une fonction "),fi=l(Ue,"CODE",{});var vD=r(fi);o9=n(vD,"GET"),vD.forEach(t),l9=n(Ue,", mais vous pouvez aussi utiliser "),vi=l(Ue,"CODE",{});var mD=r(vi);r9=n(mD,"POST"),mD.forEach(t),p9=n(Ue,", etc.)"),Ue.forEach(t),u9=c(Dl),Xe=l(Dl,"LI",{});var wl=r(Xe);i9=n(wl,"Le serveur doit renvoyer une nouvelle "),mi=l(wl,"CODE",{});var kD=r(mi);c9=n(kD,"Response"),kD.forEach(t),d9=n(wl," (Plus d’infos sur "),va=l(wl,"A",{href:!0,rel:!0});var ED=r(va);f9=n(ED,"les spécificités web de Response"),ED.forEach(t),v9=n(wl,")."),wl.forEach(t),Dl.forEach(t),Km=c(e),D=l(e,"P",{});var Ve=r(D);m9=n(Ve,"En guise d’exemple: si vous faites "),ki=l(Ve,"CODE",{});var _D=r(ki);k9=n(_D,"src/routes/api/+server.js"),_D.forEach(t),E9=n(Ve," et que vous mettez une fonction "),Ei=l(Ve,"CODE",{});var qD=r(Ei);_9=n(qD,"GET"),qD.forEach(t),q9=n(Ve," à l’intérieur, n’importe quelle requête "),_i=l(Ve,"CODE",{});var bD=r(_i);b9=n(bD,"GET"),bD.forEach(t),C9=n(Ve," à "),qi=l(Ve,"CODE",{});var CD=r(qi);y9=n(CD,"/api"),CD.forEach(t),j9=n(Ve," invoquerait cette fonction."),Ve.forEach(t),gm=c(e),Ye=l(e,"P",{});var Fc=r(Ye);bi=l(Fc,"STRONG",{});var yD=r(bi);P9=n(yD,"Pourquoi une route serveur ?"),yD.forEach(t),h9=n(Fc,` Parce qu’on pourrait vouloir afficher les billets à d’autres endroits dans notre application/site et utiliser un endpoint réduit la réécriture du code pour couvrir tous les endroits.
Quoi qu’il en soit, voici les détails dans la `),ma=l(Fc,"A",{href:!0,rel:!0});var jD=r(ma);S9=n(jD,"documentation pour les routes serveur"),jD.forEach(t),O9=n(Fc,", mais c’est moins compliqué qu’il n’y paraît, alors allons-y !"),Fc.forEach(t),Im=c(e),ho=l(e,"H3",{});var PD=r(ho);D9=n(PD,"Créer un endpoint pour nos billets"),PD.forEach(t),Am=c(e),N=l(e,"P",{});var ot=r(N);w9=n(ot,"Puisque nous pourrions envisager de créer des endpoints supplémentaires plus tard, créons un dossier "),Ci=l(ot,"CODE",{});var hD=r(Ci);x9=n(hD,"src/routes/api"),hD.forEach(t),z9=n(ot,". À l’intérieur nous ajouterons un dossier "),yi=l(ot,"CODE",{});var SD=r(yi);M9=n(SD,"posts"),SD.forEach(t),L9=n(ot," et dans celui-ci un fichier "),ji=l(ot,"CODE",{});var OD=r(ji);T9=n(OD,"+server.js"),OD.forEach(t),H9=n(ot," qui permettra de renvoyer les billets."),ot.forEach(t),Rm=c(e),ka=l(e,"PRE",{class:!0});var Fz=r(ka);Fz.forEach(t),Um=c(e),Ks=l(e,"P",{});var xk=r(Ks);K9=n(xk,"Nous allons exporter dans ce nouveau fichier une méthode "),Pi=l(xk,"CODE",{});var DD=r(Pi);g9=n(DD,"GET"),DD.forEach(t),I9=n(xk," (puisque “get” est le seul verbe HTTP que nous accepterons: cet endpoint va uniquement renvoyer des données, et jamais en accepter)."),xk.forEach(t),Vm=c(e),So=l(e,"P",{});var wD=r(So);A9=n(wD,"Faisons un essaie rapide, juste pour voir le code en action:"),wD.forEach(t),Jm=c(e),Ea=l(e,"PRE",{class:!0});var $z=r(Ea);$z.forEach(t),Nm=c(e),gs=l(e,"P",{});var zk=r(gs);R9=n(zk,"Avec ça en place nous pouvons visiter "),hi=l(zk,"CODE",{});var xD=r(hi);U9=n(xD,"/api/posts"),xD.forEach(t),V9=n(zk," et voir le texte suivant (peu impressionnant, mais néanmoins chouette) qui s’affiche dans le navigateur"),zk.forEach(t),Bm=c(e),Oo=l(e,"P",{});var zD=r(Oo);J9=n(zD,"Pas mal non? Notre route API ne renvoie rien d’utile pour l’instant, à l’évidence, mais c’est quand même excitant de faire tourner ça aussi rapidement et facilement!"),zD.forEach(t),Qm=c(e),Do=l(e,"BLOCKQUOTE",{});var MD=r(Do);_a=l(MD,"P",{});var Mk=r(_a);N9=n(Mk,"Bien que nous n’allons pas aborder ça ici, il existe des paramètres qu’on peut rajouter à l’intérieur de la fonction "),Si=l(Mk,"CODE",{});var LD=r(Si);B9=n(LD,"GET"),LD.forEach(t),Q9=n(Mk," qui exposent les headers, les paramètres de recherche et d’autres informations sur la requête."),Mk.forEach(t),MD.forEach(t),Gm=c(e),wo=l(e,"H3",{});var TD=r(wo);G9=n(TD,"Créer un utilitaire pour récupérer les billets"),TD.forEach(t),Fm=c(e),xo=l(e,"P",{});var HD=r(xo);F9=n(HD,"La prochaine étape consiste à récupérer les billets Markdown. Je pense qu’utiliser une fonction d’aide est adéquat ici, une que l’on pourra importer et réutiliser à différents endroits et qui permettra de garder le code un petit peu plus propre."),HD.forEach(t),$m=c(e),Is=l(e,"P",{});var Lk=r(Is);$9=n(Lk,"On va créer un dossier "),Oi=l(Lk,"CODE",{});var KD=r(Oi);W9=n(KD,"src/lib/utils"),KD.forEach(t),X9=n(Lk," dans lequel on ajoute un fichier ìndex.js`"),Lk.forEach(t),Wm=c(e),qa=l(e,"PRE",{class:!0});var Wz=r(qa);Wz.forEach(t),Xm=c(e),As=l(e,"P",{});var Tk=r(As);Y9=n(Tk,"Dans notre fichier JS nous allons exporter une fonction "),Di=l(Tk,"CODE",{});var gD=r(Di);Z9=n(gD,"fetchMarkdownPosts"),gD.forEach(t),e8=n(Tk," asynchrone. Son but sera de récupérer tous nos billets Markdown et renvoyer leurs données. Nous nous aiderons de Vite pour ça (l’outil de compilation qui alimente SvelteKit sous le capot)."),Tk.forEach(t),Ym=c(e),ba=l(e,"PRE",{class:!0});var Xz=r(ba);Xz.forEach(t),Zm=c(e),zo=l(e,"P",{});var ID=r(zo);s8=n(ID,"Il se passe beaucoup de choses dans cette fonction. Explicitons:"),ID.forEach(t),e1=c(e),we=l(e,"UL",{});var xl=r(we);g=l(xl,"LI",{});var Je=r(g);wi=l(Je,"CODE",{});var AD=r(wi);t8=n(AD,"import.meta.glob"),AD.forEach(t),a8=n(Je," est une fonction Vite. Elle importe tous les fichiers qui correspondent au "),xi=l(Je,"CODE",{});var RD=r(xi);n8=n(RD,"glob"),RD.forEach(t),o8=n(Je," indiqué - dans ce cas présent, tous les fichiers "),zi=l(Je,"CODE",{});var UD=r(zi);l8=n(UD,".md"),UD.forEach(t),r8=n(Je," dans "),Mi=l(Je,"CODE",{});var VD=r(Mi);p8=n(VD,"src/routes/blog"),VD.forEach(t),u8=n(Je,"."),Li=l(Je,"UL",{});var JD=r(Li);Ti=l(JD,"LI",{});var ND=r(Ti);i8=n(ND,"cette fonction renvoie un objet qui a pour clés chaque chemin relatif des fichiers, et pour valeurs une fonction “resolver” (ma dénomination, pas officielle) qui charge le contenu du fichier en tant que promesse JavaScript."),ND.forEach(t),JD.forEach(t),Je.forEach(t),c8=c(xl),Ca=l(xl,"LI",{});var Hk=r(Ca);d8=n(Hk,"La méthode "),Hi=l(Hk,"CODE",{});var BD=r(Hi);f8=n(BD,"map"),BD.forEach(t),v8=n(Hk," est juste là pour mettre en forme les données, pour les traiter plus facilement."),Hk.forEach(t),m8=c(xl),Mo=l(xl,"LI",{});var Ay=r(Mo);k8=n(Ay,"Etant donné que chaque élément attend la résolution d’une promesse, on entoure le tout d’un "),Ki=l(Ay,"CODE",{});var QD=r(Ki);E8=n(QD,"await Promise.all"),QD.forEach(t),Ay.forEach(t),xl.forEach(t),s1=c(e),Lo=l(e,"P",{});var GD=r(Lo);_8=n(GD,"Une dernière chose à noter: le chemin d’un fichier est différent de la route en place. Par exemple:"),GD.forEach(t),t1=c(e),Rs=l(e,"UL",{});var Kk=r(Rs);To=l(Kk,"LI",{});var Ry=r(To);q8=n(Ry,"ce fichier: "),gi=l(Ry,"CODE",{});var FD=r(gi);b8=n(FD,"/src/routes/blog/post-title.md"),FD.forEach(t),Ry.forEach(t),C8=c(Kk),Ho=l(Kk,"LI",{});var Uy=r(Ho);y8=n(Uy,"charge à: "),Ii=l(Uy,"CODE",{});var $D=r(Ii);j8=n($D,"/blog/post-title"),$D.forEach(t),Uy.forEach(t),Kk.forEach(t),a1=c(e),_=l(e,"P",{});var W=r(_);P8=n(W,"Il nous faut donc découper un peu la route pour extraire le chemin. Puisqu’on sait de manière sûre que la route commencera toujours par "),Ai=l(W,"CODE",{});var WD=r(Ai);h8=n(WD,"/src/routes"),WD.forEach(t),S8=n(W,"et finira toujours par "),Ri=l(W,"CODE",{});var XD=r(Ri);O8=n(XD,".md"),XD.forEach(t),D8=n(W,", on peut sereinement utiliser "),Ui=l(W,"CODE",{});var YD=r(Ui);w8=n(YD,".slice(11, -3)"),YD.forEach(t),x8=n(W," pour retirer ces caractères, soit les 11 premiers et les 3 derniers, afin d’avoir le bon chemin relatif. (On pourrait aussi utiliser "),Vi=l(W,"CODE",{});var ZD=r(Vi);z8=n(ZD,".replace"),ZD.forEach(t),M8=n(W," ou du regex pour être un tout petit peu plus explicite, mais vu qu’on connaît déjà le chemin avec lequel on travaille, je ne vois pas l’intérêt. "),Ji=l(W,"CODE",{});var ew=r(Ji);L8=n(ew,".slice"),ew.forEach(t),T8=n(W,"marche très bien.)"),W.forEach(t),n1=c(e),Ko=l(e,"H3",{});var sw=r(Ko);H8=n(sw,"Récupérer les posts à partir d’un endpoint de la route serveur"),sw.forEach(t),o1=c(e),go=l(e,"P",{});var tw=r(go);K8=n(tw,"Maintenant que nous avons notre fonction d’aide pour attraper nos données Markdown, la prochaine étape consiste à récupérer ces données sur le endpoint de l’API."),tw.forEach(t),l1=c(e),Us=l(e,"P",{});var gk=r(Us);g8=n(gk,"Dans "),Ni=l(gk,"CODE",{});var aw=r(Ni);I8=n(aw,"+server.js"),aw.forEach(t),A8=n(gk," nous allons mettre le code suivant:"),gk.forEach(t),r1=c(e),ya=l(e,"PRE",{class:!0});var Yz=r(ya);Yz.forEach(t),p1=c(e),xe=l(e,"P",{});var zl=r(xe);R8=n(zl,"Ça l’air beaucoup vu comme ça mais quand on se rend compte que c’est "),Bi=l(zl,"EM",{});var nw=r(Bi);U8=n(nw,"tout"),nw.forEach(t),V8=n(zl," ce qu’il nous faut pour créer un endpoint à partir duquel on récupère tous nos billets, triés par date, c’est en fait "),Qi=l(zl,"EM",{});var ow=r(Qi);J8=n(ow,"incroyable"),ow.forEach(t),N8=n(zl," !"),zl.forEach(t),u1=c(e),Io=l(e,"P",{});var lw=r(Io);B8=n(lw,"Explicitons:"),lw.forEach(t),i1=c(e),B=l(e,"UL",{});var lt=r(B);ja=l(lt,"LI",{});var Ik=r(ja);Q8=n(Ik,"D’abord on import et on utilise la fonction "),Gi=l(Ik,"CODE",{});var rw=r(Gi);G8=n(rw,"fetchMarkdownPosts"),rw.forEach(t),F8=n(Ik," créée ci-dessus pour récupérer les données."),Ik.forEach(t),$8=c(lt),Fi=l(lt,"LI",{});var pw=r(Fi);W8=n(pw,"On importe également l’outil pratique json. Il gère la conversion des données au format JSON pour nous et paramètres automatiquement les bonnes options pour les headers."),pw.forEach(t),X8=c(lt),$i=l(lt,"LI",{});var uw=r($i);Y8=n(uw,"Ensuite on trie les billets par date, du plus récent au plus ancien. (On pourrait trier les posts dans la fonction d’aide, mais pour moi la logique devrait rester côté endpoint.)"),uw.forEach(t),Z8=c(lt),Vs=l(lt,"LI",{});var $c=r(Vs);e0=n($c,"Pour finir on "),Wi=l($c,"CODE",{});var iw=r(Wi);s0=n(iw,"return"),iw.forEach(t),t0=n($c," le produit final à l’intérieur d’une fonction "),Xi=l($c,"CODE",{});var cw=r(Xi);a0=n(cw,"json()"),cw.forEach(t),$c.forEach(t),lt.forEach(t),c1=c(e),Js=l(e,"P",{});var Ak=r(Js);n0=n(Ak,"Faisons un test ! Actualisez votre "),Yi=l(Ak,"CODE",{});var dw=r(Yi);o0=n(dw,"/api/posts"),dw.forEach(t),l0=n(Ak," et vous devriez voir de vraies données."),Ak.forEach(t),d1=c(e),Ao=l(e,"P",{});var fw=r(Ao);r0=n(fw,"img result api"),fw.forEach(t),f1=c(e),Ro=l(e,"P",{});var vw=r(Ro);p0=n(vw,"Encore mieux: cet endpoint se mettra automatiquement à jour dès qu’on ajoutera un billet Markdown au reste."),vw.forEach(t),v1=c(e),Uo=l(e,"BLOCKQUOTE",{});var mw=r(Uo);Ze=l(mw,"P",{});var Ml=r(Ze);u0=n(Ml,"Dans l’idéal il faudrait entourer tout ça de blocs "),Zi=l(Ml,"CODE",{});var kw=r(Zi);i0=n(kw,"try"),kw.forEach(t),c0=n(Ml,"/"),ec=l(Ml,"CODE",{});var Ew=r(ec);d0=n(Ew,"catch"),Ew.forEach(t),f0=n(Ml," pour gérer les imprévus."),Ml.forEach(t),mw.forEach(t),m1=c(e),Vo=l(e,"H2",{});var _w=r(Vo);v0=n(_w,"Terminer la page d’index du blog"),_w.forEach(t),k1=c(e),Ns=l(e,"P",{});var Rk=r(Ns);m0=n(Rk,"Avec notre "),sc=l(Rk,"EM",{});var qw=r(sc);k0=n(qw,"endpoint"),qw.forEach(t),E0=n(Rk," en place c’est très facile de construire la page d’index du blog."),Rk.forEach(t),E1=c(e),Q=l(e,"P",{});var rt=r(Q);_0=n(rt,"On "),tc=l(rt,"EM",{});var bw=r(tc);q0=n(bw,"pourrait"),bw.forEach(t),b0=n(rt," faire la démarche côté client, avec un "),ac=l(rt,"CODE",{});var Cw=r(ac);C0=n(Cw,"fetch"),Cw.forEach(t),y0=n(rt," inséré dans une fonction "),nc=l(rt,"CODE",{});var yw=r(nc);j0=n(yw,"onMount"),yw.forEach(t),P0=n(rt,", et ça serait okay, mais on se retrouverait alors avec un chargement qui n’affiche rien le temps que ça s’exécute, ce qui n’est pas terrible pour l’expérience utilisateur·rice. Au lieu de ça, exploitons la génération côté serveur de SvelteKit."),rt.forEach(t),_1=c(e),Jo=l(e,"H3",{});var jw=r(Jo);h0=n(jw,"Récupérer les billets côté serveur"),jw.forEach(t),q1=c(e),G=l(e,"P",{});var pt=r(G);S0=n(pt,"Vous vous rappelez que nous pouvons ajouter un "),oc=l(pt,"CODE",{});var Pw=r(oc);O0=n(Pw,"+page.js"),Pw.forEach(t),D0=n(pt," à notre "),lc=l(pt,"CODE",{});var hw=r(lc);w0=n(hw,"+page.svelte"),hw.forEach(t),x0=n(pt," afin de précharger une fonction "),rc=l(pt,"CODE",{});var Sw=r(rc);z0=n(Sw,"load"),Sw.forEach(t),M0=n(pt," ? Eh bien, c’est tout à fait indiqué pour récupérer des données d’API telles que nos billets de blog !"),pt.forEach(t),b1=c(e),Bs=l(e,"P",{});var Uk=r(Bs);L0=n(Uk,"Quelques éléments supplémentaires à connaître sur "),pc=l(Uk,"CODE",{});var Ow=r(pc);T0=n(Ow,"load"),Ow.forEach(t),H0=n(Uk,":"),Uk.forEach(t),C1=c(e),ze=l(e,"UL",{});var Ll=r(ze);No=l(Ll,"LI",{});var Vy=r(No);K0=n(Vy,"Il a un accès contextuel à certains arguments spécifiques, notamment:"),Pa=l(Vy,"UL",{});var Vk=r(Pa);Qs=l(Vk,"LI",{});var Wc=r(Qs);uc=l(Wc,"CODE",{});var Dw=r(uc);g0=n(Dw,"url"),Dw.forEach(t),I0=n(Wc," et "),ic=l(Wc,"CODE",{});var ww=r(ic);A0=n(ww,"params"),ww.forEach(t),R0=n(Wc," qui contiennent des informations sur la requête"),Wc.forEach(t),U0=c(Vk),Gs=l(Vk,"LI",{});var Xc=r(Gs);cc=l(Xc,"CODE",{});var xw=r(cc);V0=n(xw,"fetch"),xw.forEach(t),J0=n(Xc," qui est une aide permettant de normaliser l’implémentation "),dc=l(Xc,"CODE",{});var zw=r(dc);N0=n(zw,"fetch"),zw.forEach(t),B0=n(Xc," (qui n’est pas la même entre le navigateur et Node)"),Xc.forEach(t),Vk.forEach(t),Vy.forEach(t),Q0=c(Ll),Fs=l(Ll,"LI",{});var Yc=r(Fs);fc=l(Yc,"CODE",{});var Mw=r(fc);G0=n(Mw,"load"),Mw.forEach(t),F0=n(Yc," doit renvoyer un objet. Peu importe ce qu’il y a dedans, mais tout son contenu sera disponible pour nous dans "),vc=l(Yc,"CODE",{});var Lw=r(vc);$0=n(Lw,"data"),Lw.forEach(t),W0=n(Yc,"."),Yc.forEach(t),X0=c(Ll),q=l(Ll,"LI",{});var I=r(q);mc=l(I,"CODE",{});var Tw=r(mc);Y0=n(Tw,"+page.js"),Tw.forEach(t),Z0=n(I," s’exécute à la fois côté serveur et côté client. Ce n’est pas très important quand il s’agit de précharger des fichiers statiques, mais il ne faudrait pas faire référence à des choses propres à l’environnement comme "),kc=l(I,"CODE",{});var Hw=r(kc);eC=n(Hw,"window"),Hw.forEach(t),sC=n(I," ou "),Ec=l(I,"CODE",{});var Kw=r(Ec);tC=n(Kw,"process"),Kw.forEach(t),aC=n(I,". (Si vous voulez que "),_c=l(I,"CODE",{});var gw=r(_c);nC=n(gw,"load"),gw.forEach(t),oC=n(I," s’exécute uniquement sur le serveur, utilisez plutôt "),qc=l(I,"CODE",{});var Iw=r(qc);lC=n(Iw,"+page.server.js"),Iw.forEach(t),rC=n(I,". À noter que "),bc=l(I,"CODE",{});var Aw=r(bc);pC=n(Aw,"fetch"),Aw.forEach(t),uC=n(I," est disponible de manière native)"),I.forEach(t),Ll.forEach(t),y1=c(e),ha=l(e,"PRE",{class:!0});var Zz=r(ha);Zz.forEach(t),j1=c(e),F=l(e,"P",{});var ut=r(F);iC=n(ut,"Ce morceau de pré-chargement gère tout ce dont on a besoin ! Nous avons des "),Cc=l(ut,"CODE",{});var Rw=r(Cc);cC=n(Rw,"posts"),Rw.forEach(t),dC=n(ut," qui sont transmis au composant (en tant que "),yc=l(ut,"CODE",{});var Uw=r(yc);fC=n(Uw,"data"),Uw.forEach(t),vC=n(ut,"), et on peut l’utiliser pour itérer parmi nos billets et les générer dans le fichier "),jc=l(ut,"CODE",{});var Vw=r(jc);mC=n(Vw,"+page.svelte"),Vw.forEach(t),kC=n(ut," correspondant"),ut.forEach(t),P1=c(e),Sa=l(e,"PRE",{class:!0});var eM=r(Sa);eM.forEach(t),h1=c(e),Bo=l(e,"P",{});var Jw=r(Bo);EC=n(Jw,"Dans l’exemple ci-dessus le HTML est simplifié (et ne prend pas bien en compte le scénario où il n’y aurait pas de billets à afficher), mais vous voyez le genre. Vous pouvez augmenter le code en fonction du frontmatter de vos propres billets, en ajoutant une image/lien d’accroche, un extrait, etc."),Jw.forEach(t),S1=c(e),Qo=l(e,"P",{});var Nw=r(Qo);_C=n(Nw,"img result index"),Nw.forEach(t),O1=c(e),Go=l(e,"H2",{});var Bw=r(Go);qC=n(Bw,"Précharger avec l’adaptateur statique"),Bw.forEach(t),D1=c(e),Fo=l(e,"P",{});var Qw=r(Fo);bC=n(Qw,"SvelteKit est généré côté serveur par défaut, ce qui est bien car le SSR est en général meilleur pour les performances, l’accessibilité et le SEO. Ça veut aussi dire que le préchargement statique des fichiers (qui est ce que nous voulons) est opt-in."),Qw.forEach(t),w1=c(e),$=l(e,"P",{});var it=r($);CC=n(it,"On pourrait précharger manuellement n’importe quelle page, ce qui est pratique pour des sections telles qu’un “à propos” ou une “FAQ” qui n’ont pas de contenu dynamique. On peut aussi précharger au niveau du layout, pour gérer des dossiers entiers d’un coup. Peu importe l’option, elle est activée en exporant une constante appelée "),Pc=l(it,"CODE",{});var Gw=r(Pc);yC=n(Gw,"prerender"),Gw.forEach(t),jC=n(it," avec pour valeur "),hc=l(it,"CODE",{});var Fw=r(hc);PC=n(Fw,"true"),Fw.forEach(t),hC=c(it),Oa=l(it,"A",{href:!0,rel:!0});var $w=r(Oa);SC=n($w,"voir la documentation"),$w.forEach(t),OC=n(it,"."),it.forEach(t),x1=c(e),$s=l(e,"P",{});var Jk=r($s);DC=n(Jk,"Maintenant si on veut que le site entier soit préchargé de manière statique c’est préférable d’utiliser directement "),Da=l(Jk,"A",{href:!0,rel:!0});var Ww=r(Da);wC=n(Ww,"l’adaptateur statique"),Ww.forEach(t),xC=n(Jk," de SvelteKit, comme ça pas besoin de retenir quelle route est statique ou non en fonction du code. Elles le seront toutes."),Jk.forEach(t),z1=c(e),wa=l(e,"P",{});var Jy=r(wa);zC=n(Jy,"SvelteKit a de nombreux [adaptateurs], et vient clé en main avec un qui détecte automatiquement et compile en conséquence pour Netlify, Vercel ou Cloudfare, ce qui est pratique et aussi impressionnant ! Mais pour le statique, il nous faudra l’"),Sc=l(Jy,"CODE",{});var Xw=r(Sc);MC=n(Xw,"adapter-static"),Xw.forEach(t),Jy.forEach(t),M1=c(e),xa=l(e,"PRE",{class:!0});var sM=r(xa);sM.forEach(t),L1=c(e),w=l(e,"P",{});var Ne=r(w);LC=n(Ne,"Une fois installé il faut faire quelques changements pour précharger toutes nos pages. D’abord, changez "),Oc=l(Ne,"CODE",{});var Yw=r(Oc);TC=n(Yw,"adapter-auto"),Yw.forEach(t),HC=n(Ne," en "),Dc=l(Ne,"CODE",{});var Zw=r(Dc);KC=n(Zw,"adapter-static"),Zw.forEach(t),gC=n(Ne," dans le fichier "),wc=l(Ne,"CODE",{});var ex=r(wc);IC=n(ex,"svelte.config.js"),ex.forEach(t),AC=n(Ne," (tout en haut, dans les "),xc=l(Ne,"CODE",{});var sx=r(xc);RC=n(sx,"import"),sx.forEach(t),UC=n(Ne,")"),Ne.forEach(t),T1=c(e),za=l(e,"PRE",{class:!0});var tM=r(za);tM.forEach(t),H1=c(e),f=l(e,"P",{});var E=r(f);VC=n(E,"Ensuite nous devons activer l’option en exportant une prop "),zc=l(E,"CODE",{});var tx=r(zc);JC=n(tx,"prerender"),tx.forEach(t),NC=n(E," avec une valeur "),Mc=l(E,"CODE",{});var ax=r(Mc);BC=n(ax,"true"),ax.forEach(t),QC=n(E,`.
On `),Lc=l(E,"EM",{});var nx=r(Lc);GC=n(nx,"pourrait"),nx.forEach(t),FC=n(E," faire ça manuellement pour chaque page, mais ce serait pénible. La meilleure façon de faire est de créer un "),Tc=l(E,"CODE",{});var ox=r(Tc);$C=n(ox,"+layout.js"),ox.forEach(t),WC=n(E," dans "),Hc=l(E,"CODE",{});var lx=r(Hc);XC=n(lx,"src.routes"),lx.forEach(t),YC=n(E," et d’y ajouter le "),Kc=l(E,"EM",{});var rx=r(Kc);ZC=n(rx,"prop"),rx.forEach(t),ey=n(E,". (Attention: c’est un fichier "),gc=l(E,"CODE",{});var px=r(gc);sy=n(px,".js"),px.forEach(t),ty=n(E,", pas notre fichier existant "),Ic=l(E,"CODE",{});var ux=r(Ic);ay=n(ux,"+layout.svelte"),ux.forEach(t),ny=n(E,"; le nouveau fichier gère le préchargement, et non pas la génération.)"),E.forEach(t),K1=c(e),Ma=l(e,"PRE",{class:!0});var aM=r(Ma);aM.forEach(t),g1=c(e),x=l(e,"P",{});var Be=r(x);oy=n(Be,"Tout comme "),Ac=l(Be,"CODE",{});var ix=r(Ac);ly=n(ix,"+layout.svelte"),ix.forEach(t),ry=n(Be," gère le layout sur chaque page, "),Rc=l(Be,"CODE",{});var cx=r(Rc);py=n(cx,"+layout.js"),cx.forEach(t),uy=n(Be," gère les scripts côté serveur sur chaque page. En mettant notre prop "),Uc=l(Be,"CODE",{});var dx=r(Uc);iy=n(dx,"prerender"),dx.forEach(t),cy=n(Be," à l’intérieur de ce fichier JS, il va se "),Vc=l(Be,"EM",{});var fx=r(Vc);dy=n(fx,"diffuser"),fx.forEach(t),fy=n(Be," sur chaque page, ce qui nous évite de devoir le répéter dans chaque page enfant."),Be.forEach(t),I1=c(e),Ws=l(e,"P",{});var Nk=r(Ws);vy=n(Nk,"Pour en savoir plus sur l’adaptateur statique, vous pouvez lire "),La=l(Nk,"A",{href:!0,rel:!0});var vx=r(La);my=n(vx,"la documentation"),vx.forEach(t),ky=n(Nk,"."),Nk.forEach(t),A1=c(e),R1=l(e,"HR",{}),U1=c(e),$o=l(e,"P",{});var mx=r($o);Ey=n(mx,"Avec notre adaptateur installé et activé dans notre fichier de configuration, toutes les pages du site seront préchargées en HTML statique au moment de la compilation !"),mx.forEach(t),V1=c(e),Wo=l(e,"BLOCKQUOTE",{});var kx=r(Wo);es=l(kx,"P",{});var Tl=r(es);_y=n(Tl,"Un avantage de l’option statique de SvelteKit est que ça transforme toutes les pages en HTML statique, mais ça charge également un peu de JavaScript côté client pour aider à la navigation et au pré-chargement en fond. Ainsi, le site fonctionne très bien sans JavaScript, mais reste ouvert à l’amélioration progressive. Si vous voulez désactiver ce comportement pour empaqueter moins de JS, contre une navigation potentiellement moins fluide, ajoutez "),Jc=l(Tl,"CODE",{});var Ex=r(Jc);qy=n(Ex,"export const csr = false"),Ex.forEach(t),by=n(Tl," à votre "),Nc=l(Tl,"CODE",{});var _x=r(Nc);Cy=n(_x,"+layout.js"),_x.forEach(t),yy=n(Tl,"."),Tl.forEach(t),kx.forEach(t),J1=c(e),Xs=l(e,"P",{});var Bk=r(Xs);jy=n(Bk,"Un dernier point à ce sujet: vous n’êtes pas "),Bc=l(Bk,"EM",{});var qx=r(Bc);Py=n(qx,"obligé·e·s"),qx.forEach(t),hy=n(Bk," d’utiliser l’adaptateur statique. Vous pouvez sauter cette étape et faire avec l’adaptateur par défaut livré avec SvelteKit. Il vous permetta de déployer le site sur Netlify, Vercel ou Cloudfare, et le site serait généré côté serveur avec des fonctions serverless, au lieu d’être construit de manière statique."),Bk.forEach(t),N1=c(e),Xo=l(e,"P",{});var bx=r(Xo);Sy=n(bx,"Les deux options marchent bien, et cela dépendra surtout de votre usage et de vos préférences. Je reviens dessus simplement pour signaler à quel point c’est chouette que SvelteKit puisse passer d’une chose à l’autre simplement en échangeant d’adaptateur."),bx.forEach(t),B1=c(e),Yo=l(e,"P",{});var Cx=r(Yo);Ta=l(Cx,"EM",{});var Qk=r(Ta);Oy=n(Qk,"[ Le billet de Josh continue ensuite avec des améliorations optionnelles et des détails qui paufinent la base qu’on vient de faire, mais je pense qu’avec tout ce qu’on a fait c’est déjà un bon morceau. Si vous êtes intéressé·e·s n’hésitez pas à reprendre la lecture en anglais sur "),Ha=l(Qk,"A",{href:!0,rel:!0});var yx=r(Ha);Dy=n(yx,"le site de Josh"),yx.forEach(t),wy=n(Qk,", et si besoin je traduirai la deuxième partie optionnelle plus tard. ]"),Qk.forEach(t),Cx.forEach(t),this.h()},h(){d(ct,"href","https://joshcollinsworth.com/blog/build-static-sveltekit-markdown-blog"),d(ct,"rel","nofollow"),d(dt,"href","https://joshcollinsworth.com/"),d(dt,"rel","nofollow"),d(mt,"href","https://svelte.dev/tutorial/basics"),d(mt,"rel","nofollow"),d(kt,"href","https://github.com/josh-collinsworth/sveltekit-blog-starter"),d(kt,"rel","nofollow"),d(Et,"class","language-bash"),Gk(Fa.src,By="/img/blog/sveltekit_setup.png")||d(Fa,"src",By),d(Fa,"alt","Questionnaire pour préciser le projet"),Gk(Ya.src,Qy="/img/blog/sveltekit_setup_complete.png")||d(Ya,"src",Qy),d(Ya,"alt","Finalisation de l'installation de SvelteKit"),d(_t,"class","language-bash"),Gk(tn.src,Gy="/img/blog/localhost_welcome.png")||d(tn,"src",Gy),d(tn,"alt","La base du site après installation de SvelteKit"),d(jt,"class","language-svelte"),d(ht,"class","language-svelte"),d(Ot,"class","language-svelte"),d(Dt,"class","language-fs"),d(wt,"class","language-fs"),d(xt,"class","language-svelte"),Gk(fn.src,Fy="/img/blog/localhost_header_and_footer.png")||d(fn,"src",Fy),d(fn,"alt","Le layout avec le header et le footer est appliqué"),d(zt,"class","language-fs"),d(Mt,"class","language-svelte"),d(Lt,"class","language-svelte"),d(Tt,"class","language-svelte"),d(Ht,"class","language-fs"),d(Kt,"class","language-css"),d(gt,"class","language-svelte"),d(At,"class","language-bash"),d(xn,"href","npm%20i%20-D%20svelte-preprocess%20sass"),d(Rt,"class","language-js"),d(Cs,"href","https://github.com/sveltejs/svelte-preprocess/blob/main/docs/getting-started.md#31-prepending-content"),d(Cs,"rel","nofollow"),d(Ut,"class","language-svelte"),d(Vt,"class","language-svelte"),d(Jt,"href","https://mdsvex.pngwn.io/"),d(Jt,"rel","nofollow"),d(Bt,"class","language-bash"),d(Qt,"class","language-js"),d(Ft,"class","language-fs"),d($t,"class","language-md"),d(Wt,"href","https://prismjs.com/"),d(Wt,"rel","nofollow"),d(Xt,"class","language-js"),d(Yt,"href","https://github.com/PrismJS/prism-themes"),d(Yt,"rel","nofollow"),d(Zt,"href","https://docusaurus.io/fr/docs/2.0.1/markdown-features#front-matter"),d(Zt,"rel","nofollow"),d(ea,"class","language-md"),d(ta,"class","language-fs"),d(aa,"class","language-md"),d(na,"class","language-fs"),d(oa,"href","https://en.wikipedia.org/wiki/Hydration_%28web_development%29"),d(oa,"rel","nofollow"),d(la,"class","language-fs"),d(ra,"class","language-fs"),d(pa,"class","language-js"),d(ua,"class","language-fs"),d(ia,"class","language-svelte"),d(ca,"class","language-svelte"),d(da,"href","https://kit.svelte.dev/docs/routing#server"),d(da,"rel","nofollow"),d(fa,"href","https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods"),d(fa,"rel","nofollow"),d(va,"href","https://developer.mozilla.org/en-US/docs/Web/API/Response"),d(va,"rel","nofollow"),d(ma,"href","https://kit.svelte.dev/docs/routing#server"),d(ma,"rel","nofollow"),d(ka,"class","language-fs"),d(Ea,"class","language-js"),d(qa,"class","language-fs"),d(ba,"class","language-js"),d(ya,"class","language-js"),d(ha,"class","language-js"),d(Sa,"class","language-svelte"),d(Oa,"href","https://kit.svelte.dev/docs/page-options#prerender"),d(Oa,"rel","nofollow"),d(Da,"href","https://github.com/sveltejs/kit/tree/master/packages/adapter-static"),d(Da,"rel","nofollow"),d(xa,"class","language-bash"),d(za,"class","language-js"),d(Ma,"class","language-js"),d(La,"href","https://github.com/sveltejs/kit/tree/master/packages/adapter-static"),d(La,"rel","nofollow"),d(Ha,"href","https://joshcollinsworth.com/blog/build-static-sveltekit-markdown-blog#optional-finishing-touches-and-extra-features"),d(Ha,"rel","nofollow")},m(e,p){u(e,ts,p),s(ts,Fk),u(e,Zc,p),u(e,ee,p),s(ee,Hl),s(Hl,$k),s(ee,Wk),s(ee,Kl),s(Kl,Xk),s(ee,Yk),s(ee,gl),s(gl,Zk),u(e,ed,p),u(e,as,p),s(as,eE),s(as,ct),s(ct,sE),s(as,tE),u(e,sd,p),u(e,Ra,p),s(Ra,aE),u(e,td,p),u(e,ns,p),s(ns,nE),s(ns,dt),s(dt,oE),s(ns,lE),u(e,ad,p),u(e,nd,p),u(e,od,p),u(e,Ua,p),s(Ua,rE),u(e,ld,p),u(e,Va,p),s(Va,pE),u(e,rd,p),u(e,Ja,p),s(Ja,uE),u(e,pd,p),u(e,os,p),s(os,iE),s(os,Il),s(Il,cE),s(os,dE),u(e,ud,p),u(e,ft,p),s(ft,fE),s(ft,Al),s(Al,vE),u(e,id,p),u(e,Na,p),s(Na,mE),u(e,cd,p),u(e,C,p),s(C,Rl),s(Rl,kE),s(C,EE),s(C,vt),s(vt,_E),s(vt,mt),s(mt,qE),s(vt,bE),s(C,CE),s(C,Ul),s(Ul,yE),s(C,jE),s(C,Vl),s(Vl,PE),s(C,hE),s(C,Jl),s(Jl,SE),u(e,dd,p),u(e,ls,p),s(ls,OE),s(ls,kt),s(kt,DE),s(ls,wE),u(e,fd,p),u(e,Ba,p),s(Ba,xE),u(e,vd,p),u(e,Qa,p),s(Qa,zE),u(e,md,p),u(e,rs,p),s(rs,ME),s(rs,Nl),s(Nl,LE),s(rs,TE),u(e,kd,p),u(e,Et,p),Et.innerHTML=Px,u(e,Ed,p),u(e,ps,p),s(ps,HE),s(ps,Bl),s(Bl,KE),s(ps,gE),u(e,_d,p),u(e,Ga,p),s(Ga,Fa),u(e,qd,p),u(e,se,p),s(se,IE),s(se,Ql),s(Ql,AE),s(se,RE),s(se,Gl),s(Gl,UE),s(se,VE),u(e,bd,p),u(e,$a,p),s($a,Fl),s(Fl,JE),u(e,Cd,p),u(e,Wa,p),s(Wa,NE),u(e,yd,p),u(e,us,p),s(us,BE),s(us,$l),s($l,QE),s(us,GE),u(e,jd,p),u(e,Xa,p),s(Xa,Ya),u(e,Pd,p),u(e,Za,p),s(Za,FE),u(e,hd,p),u(e,_t,p),_t.innerHTML=hx,u(e,Sd,p),u(e,en,p),s(en,$E),u(e,Od,p),u(e,sn,p),s(sn,tn),u(e,Dd,p),u(e,an,p),s(an,WE),u(e,wd,p),u(e,nn,p),s(nn,XE),u(e,xd,p),u(e,on,p),s(on,YE),u(e,zd,p),u(e,te,p),s(te,ZE),s(te,Wl),s(Wl,e2),s(te,s2),s(te,Xl),s(Xl,t2),s(te,a2),u(e,Md,p),u(e,ae,p),s(ae,n2),s(ae,Yl),s(Yl,o2),s(ae,l2),s(ae,Zl),s(Zl,r2),s(ae,p2),u(e,Ld,p),u(e,is,p),s(is,u2),s(is,er),s(er,i2),s(is,c2),u(e,Td,p),u(e,A,p),s(A,ln),s(ln,sr),s(sr,d2),s(ln,f2),s(A,v2),s(A,qt),s(qt,tr),s(tr,m2),s(qt,k2),s(qt,ar),s(ar,E2),s(A,_2),s(A,bt),s(bt,nr),s(nr,q2),s(bt,b2),s(bt,or),s(or,C2),s(A,y2),s(A,Ct),s(Ct,lr),s(lr,j2),s(Ct,P2),s(Ct,rr),s(rr,h2),u(e,Hd,p),u(e,rn,p),s(rn,X),s(X,S2),s(X,pr),s(pr,O2),s(X,D2),s(X,ur),s(ur,w2),s(X,x2),s(X,ir),s(ir,z2),s(X,M2),u(e,Kd,p),u(e,pn,p),s(pn,L2),u(e,gd,p),u(e,m,p),s(m,T2),s(m,cr),s(cr,H2),s(m,K2),s(m,dr),s(dr,g2),s(m,I2),s(m,fr),s(fr,A2),s(m,R2),s(m,vr),s(vr,U2),s(m,V2),s(m,mr),s(mr,J2),s(m,N2),s(m,kr),s(kr,B2),s(m,Q2),u(e,Id,p),u(e,un,p),s(un,Er),s(Er,G2),u(e,Ad,p),u(e,yt,p),s(yt,F2),s(yt,_r),s(_r,$2),u(e,Rd,p),u(e,jt,p),jt.innerHTML=Sx,u(e,Ud,p),u(e,Pt,p),s(Pt,W2),s(Pt,qr),s(qr,X2),u(e,Vd,p),u(e,ht,p),ht.innerHTML=Ox,u(e,Jd,p),u(e,St,p),s(St,Y2),s(St,br),s(br,Z2),u(e,Nd,p),u(e,Ot,p),Ot.innerHTML=Dx,u(e,Bd,p),u(e,cs,p),s(cs,e3),s(cs,Cr),s(Cr,s3),s(cs,t3),u(e,Qd,p),u(e,Dt,p),Dt.innerHTML=wx,u(e,Gd,p),u(e,k,p),s(k,a3),s(k,yr),s(yr,n3),s(k,o3),s(k,jr),s(jr,l3),s(k,r3),s(k,Pr),s(Pr,p3),s(k,u3),s(k,hr),s(hr,i3),s(k,c3),s(k,Sr),s(Sr,d3),s(k,f3),s(k,Or),s(Or,v3),s(k,m3),u(e,Fd,p),u(e,cn,p),s(cn,k3),u(e,$d,p),u(e,R,p),s(R,E3),s(R,Dr),s(Dr,_3),s(R,q3),s(R,wr),s(wr,b3),s(R,C3),s(R,xr),s(xr,y3),s(R,j3),u(e,Wd,p),u(e,ne,p),s(ne,P3),s(ne,zr),s(zr,h3),s(ne,S3),s(ne,Mr),s(Mr,O3),s(ne,D3),u(e,Xd,p),u(e,wt,p),wt.innerHTML=xx,u(e,Yd,p),u(e,L,p),s(L,Lr),s(Lr,w3),s(L,x3),s(L,Tr),s(Tr,z3),s(L,M3),s(L,Hr),s(Hr,L3),s(L,T3),s(L,Kr),s(Kr,H3),s(L,K3),u(e,Zd,p),u(e,ds,p),s(ds,g3),s(ds,gr),s(gr,I3),s(ds,A3),u(e,ef,p),u(e,fs,p),s(fs,R3),s(fs,Ir),s(Ir,U3),s(fs,V3),u(e,sf,p),u(e,U,p),s(U,J3),s(U,Ar),s(Ar,N3),s(U,B3),s(U,Rr),s(Rr,Q3),s(U,G3),s(U,Ur),s(Ur,F3),s(U,$3),u(e,tf,p),u(e,xt,p),xt.innerHTML=zx,u(e,af,p),u(e,oe,p),s(oe,W3),s(oe,Vr),s(Vr,X3),s(oe,Y3),s(oe,Jr),s(Jr,Z3),s(oe,e_),u(e,nf,p),u(e,dn,p),s(dn,fn),u(e,of,p),u(e,vn,p),s(vn,s_),u(e,lf,p),u(e,mn,p),s(mn,t_),u(e,rf,p),u(e,V,p),s(V,a_),s(V,Nr),s(Nr,n_),s(V,o_),s(V,Br),s(Br,l_),s(V,r_),s(V,Qr),s(Qr,p_),s(V,u_),u(e,pf,p),u(e,Y,p),s(Y,i_),s(Y,Gr),s(Gr,c_),s(Y,d_),s(Y,Fr),s(Fr,f_),s(Y,v_),s(Y,$r),s($r,m_),u(e,uf,p),u(e,zt,p),zt.innerHTML=Mx,u(e,cf,p),u(e,kn,p),s(kn,Wr),s(Wr,k_),u(e,df,p),u(e,vs,p),s(vs,E_),s(vs,Xr),s(Xr,__),s(vs,q_),u(e,ff,p),u(e,Mt,p),Mt.innerHTML=Lx,u(e,vf,p),u(e,y,p),s(y,b_),s(y,Yr),s(Yr,C_),s(y,y_),s(y,Zr),s(Zr,j_),s(y,P_),s(y,ep),s(ep,h_),s(y,S_),s(y,sp),s(sp,O_),s(y,D_),u(e,mf,p),u(e,Lt,p),Lt.innerHTML=Tx,u(e,kf,p),u(e,j,p),s(j,w_),s(j,tp),s(tp,x_),s(j,z_),s(j,ap),s(ap,M_),s(j,L_),s(j,np),s(np,T_),s(j,H_),s(j,op),s(op,K_),s(j,g_),u(e,Ef,p),u(e,En,p),s(En,I_),u(e,_f,p),u(e,_n,p),s(_n,A_),u(e,qf,p),u(e,qn,p),s(qn,R_),u(e,bf,p),u(e,bn,p),s(bn,U_),u(e,Cf,p),u(e,ms,p),s(ms,V_),s(ms,lp),s(lp,J_),s(ms,N_),u(e,yf,p),u(e,le,p),s(le,B_),s(le,rp),s(rp,Q_),s(le,G_),s(le,pp),s(pp,F_),s(le,$_),u(e,jf,p),u(e,Tt,p),Tt.innerHTML=Hx,u(e,Pf,p),u(e,re,p),s(re,W_),s(re,up),s(up,X_),s(re,Y_),s(re,ip),s(ip,Z_),s(re,eq),u(e,hf,p),u(e,ks,p),s(ks,sq),s(ks,cp),s(cp,tq),s(ks,aq),u(e,Sf,p),u(e,P,p),s(P,nq),s(P,dp),s(dp,oq),s(P,lq),s(P,fp),s(fp,rq),s(P,pq),s(P,vp),s(vp,uq),s(P,iq),s(P,mp),s(mp,cq),s(P,dq),u(e,Of,p),u(e,Cn,p),s(Cn,fq),u(e,Df,p),u(e,Es,p),s(Es,vq),s(Es,kp),s(kp,mq),s(Es,kq),u(e,wf,p),u(e,J,p),s(J,Eq),s(J,Ep),s(Ep,_q),s(J,qq),s(J,_p),s(_p,bq),s(J,Cq),s(J,qp),s(qp,yq),s(J,jq),u(e,xf,p),u(e,Ht,p),Ht.innerHTML=Kx,u(e,zf,p),u(e,yn,p),s(yn,Qe),s(Qe,Pq),s(Qe,bp),s(bp,hq),s(Qe,Sq),s(Qe,Cp),s(Cp,Oq),s(Qe,Dq),u(e,Mf,p),u(e,jn,p),s(jn,wq),u(e,Lf,p),u(e,Kt,p),Kt.innerHTML=gx,u(e,Tf,p),u(e,_s,p),s(_s,xq),s(_s,yp),s(yp,zq),s(_s,Mq),u(e,Hf,p),u(e,gt,p),gt.innerHTML=Ix,u(e,Kf,p),u(e,Pn,p),s(Pn,Lq),u(e,gf,p),u(e,pe,p),s(pe,Tq),s(pe,jp),s(jp,Hq),s(pe,Kq),s(pe,Pp),s(Pp,gq),s(pe,Iq),u(e,If,p),u(e,hn,p),s(hn,It),s(It,Aq),s(It,hp),s(hp,Rq),s(It,Uq),u(e,Af,p),u(e,Sn,p),s(Sn,Vq),u(e,Rf,p),u(e,qs,p),s(qs,Jq),s(qs,Sp),s(Sp,Nq),s(qs,Bq),u(e,Uf,p),u(e,On,p),s(On,Op),s(Op,Dn),s(Dn,Dp),s(Dp,Qq),s(Dn,Gq),u(e,Vf,p),u(e,ue,p),s(ue,Fq),s(ue,wp),s(wp,$q),s(ue,Wq),s(ue,xp),s(xp,Xq),s(ue,Yq),u(e,Jf,p),u(e,At,p),At.innerHTML=Ax,u(e,Nf,p),u(e,wn,p),s(wn,v),s(v,Zq),s(v,zp),s(zp,eb),s(v,sb),s(v,Mp),s(Mp,tb),s(v,ab),s(v,Lp),s(Lp,nb),s(v,ob),s(v,Tp),s(Tp,lb),s(v,rb),s(v,Hp),s(Hp,pb),s(v,ub),s(v,Kp),s(Kp,ib),s(v,cb),s(v,xn),s(xn,db),s(v,fb),u(e,Bf,p),u(e,zn,p),s(zn,vb),u(e,Qf,p),u(e,Mn,p),s(Mn,mb),u(e,Gf,p),u(e,Ln,p),s(Ln,kb),u(e,Ff,p),u(e,Rt,p),Rt.innerHTML=Rx,u(e,$f,p),u(e,bs,p),s(bs,Eb),s(bs,gp),s(gp,_b),s(bs,qb),u(e,Wf,p),u(e,ie,p),s(ie,bb),s(ie,Ip),s(Ip,Cb),s(ie,yb),s(ie,Ap),s(Ap,jb),s(ie,Pb),u(e,Xf,p),u(e,Tn,p),s(Tn,Z),s(Z,hb),s(Z,Rp),s(Rp,Sb),s(Z,Ob),s(Z,Up),s(Up,Db),s(Z,wb),s(Z,Cs),s(Cs,xb),s(Cs,Vp),s(Vp,zb),s(Z,Mb),u(e,Yf,p),u(e,Hn,p),s(Hn,Lb),u(e,Zf,p),u(e,Kn,p),s(Kn,Tb),u(e,ev,p),u(e,ce,p),s(ce,Hb),s(ce,Jp),s(Jp,Kb),s(ce,gb),s(ce,Np),s(Np,Ib),s(ce,Ab),u(e,sv,p),u(e,Ut,p),Ut.innerHTML=Ux,u(e,tv,p),u(e,gn,p),s(gn,Rb),u(e,av,p),u(e,h,p),s(h,Ub),s(h,Bp),s(Bp,Vb),s(h,Jb),s(h,Qp),s(Qp,Nb),s(h,Bb),s(h,Gp),s(Gp,Qb),s(h,Gb),s(h,Fp),s(Fp,Fb),s(h,$b),u(e,nv,p),u(e,Vt,p),Vt.innerHTML=Vx,u(e,ov,p),u(e,In,p),s(In,Wb),u(e,lv,p),u(e,An,p),s(An,Xb),u(e,rv,p),u(e,ys,p),s(ys,Yb),s(ys,Jt),s(Jt,Zb),s(ys,e5),u(e,pv,p),u(e,js,p),s(js,s5),s(js,$p),s($p,t5),s(js,a5),u(e,uv,p),u(e,Rn,p),s(Rn,n5),u(e,iv,p),u(e,de,p),s(de,Wp),s(Wp,o5),s(de,l5),s(de,Xp),s(Xp,r5),s(de,p5),s(de,Nt),s(Nt,u5),s(Nt,Yp),s(Yp,i5),s(Nt,c5),u(e,cv,p),u(e,Un,p),s(Un,d5),u(e,dv,p),u(e,Bt,p),Bt.innerHTML=Jx,u(e,fv,p),u(e,Ps,p),s(Ps,f5),s(Ps,Zp),s(Zp,v5),s(Ps,m5),u(e,vv,p),u(e,Qt,p),Qt.innerHTML=Nx,u(e,mv,p),u(e,Vn,p),s(Vn,k5),u(e,kv,p),u(e,hs,p),s(hs,Ge),s(Ge,E5),s(Ge,eu),s(eu,_5),s(Ge,q5),s(Ge,su),s(su,b5),s(Ge,C5),s(hs,y5),s(hs,fe),s(fe,j5),s(fe,tu),s(tu,P5),s(fe,h5),s(fe,au),s(au,S5),s(fe,O5),s(fe,nu),s(nu,D5),u(e,Ev,p),u(e,Gt,p),s(Gt,ou),s(ou,w5),s(Gt,x5),u(e,_v,p),u(e,Jn,p),s(Jn,z5),u(e,qv,p),u(e,Nn,p),s(Nn,M5),u(e,bv,p),u(e,Bn,p),s(Bn,L5),u(e,Cv,p),u(e,Qn,p),s(Qn,T5),u(e,yv,p),u(e,Fe,p),s(Fe,H5),s(Fe,lu),s(lu,K5),s(Fe,g5),s(Fe,ru),s(ru,I5),u(e,jv,p),u(e,Ft,p),Ft.innerHTML=Bx,u(e,Pv,p),u(e,$t,p),$t.innerHTML=Qx,u(e,hv,p),u(e,Gn,p),s(Gn,A5),u(e,Sv,p),u(e,Fn,p),s(Fn,R5),u(e,Ov,p),u(e,$n,p),s($n,U5),u(e,Dv,p),u(e,Ss,p),s(Ss,V5),s(Ss,pu),s(pu,J5),s(Ss,N5),u(e,wv,p),u(e,Wn,p),s(Wn,B5),u(e,xv,p),u(e,Os,p),s(Os,Q5),s(Os,Wt),s(Wt,G5),s(Os,F5),u(e,zv,p),u(e,Xt,p),Xt.innerHTML=Gx,u(e,Mv,p),u(e,ve,p),s(ve,$5),s(ve,uu),s(uu,W5),s(ve,X5),s(ve,Yt),s(Yt,Y5),s(ve,Z5),u(e,Lv,p),u(e,Xn,p),s(Xn,e4),u(e,Tv,p),u(e,Yn,p),s(Yn,s4),u(e,Hv,p),u(e,Ds,p),s(Ds,t4),s(Ds,Zt),s(Zt,a4),s(Ds,n4),u(e,Kv,p),u(e,ea,p),ea.innerHTML=Fx,u(e,gv,p),u(e,Zn,p),s(Zn,sa),s(sa,o4),s(sa,iu),s(iu,l4),s(sa,r4),u(e,Iv,p),u(e,eo,p),s(eo,p4),u(e,Av,p),u(e,so,p),s(so,u4),u(e,Rv,p),u(e,to,p),s(to,cu),s(cu,i4),u(e,Uv,p),u(e,ao,p),s(ao,c4),u(e,Vv,p),u(e,ws,p),s(ws,d4),s(ws,du),s(du,f4),s(ws,v4),u(e,Jv,p),u(e,me,p),s(me,m4),s(me,fu),s(fu,k4),s(me,E4),s(me,vu),s(vu,_4),s(me,q4),u(e,Nv,p),u(e,no,p),s(no,b4),u(e,Bv,p),u(e,ta,p),ta.innerHTML=$x,u(e,Qv,p),u(e,oo,p),s(oo,C4),u(e,Gv,p),u(e,aa,p),aa.innerHTML=Wx,u(e,Fv,p),u(e,S,p),s(S,y4),s(S,mu),s(mu,j4),s(S,P4),s(S,ku),s(ku,h4),s(S,S4),s(S,Eu),s(Eu,O4),s(S,D4),s(S,_u),s(_u,w4),s(S,x4),u(e,$v,p),u(e,lo,p),s(lo,qu),s(qu,z4),u(e,Wv,p),u(e,ro,p),s(ro,M4),u(e,Xv,p),u(e,ke,p),s(ke,L4),s(ke,bu),s(bu,T4),s(ke,H4),s(ke,Cu),s(Cu,K4),s(ke,g4),u(e,Yv,p),u(e,na,p),na.innerHTML=Xx,u(e,Zv,p),u(e,O,p),s(O,I4),s(O,yu),s(yu,A4),s(O,R4),s(O,ju),s(ju,U4),s(O,V4),s(O,Pu),s(Pu,J4),s(O,N4),s(O,hu),s(hu,B4),s(O,Q4),u(e,em,p),u(e,xs,p),s(xs,G4),s(xs,Su),s(Su,F4),s(xs,$4),u(e,sm,p),u(e,zs,p),s(zs,W4),s(zs,Ou),s(Ou,X4),s(zs,Y4),u(e,tm,p),u(e,po,p),s(po,Z4),u(e,am,p),u(e,Ee,p),s(Ee,e6),s(Ee,Du),s(Du,s6),s(Ee,t6),s(Ee,oa),s(oa,a6),s(Ee,n6),u(e,nm,p),u(e,uo,p),s(uo,o6),u(e,om,p),u(e,_e,p),s(_e,l6),s(_e,wu),s(wu,r6),s(_e,p6),s(_e,xu),s(xu,u6),s(_e,i6),u(e,lm,p),u(e,qe,p),s(qe,c6),s(qe,zu),s(zu,d6),s(qe,f6),s(qe,Mu),s(Mu,v6),s(qe,m6),u(e,rm,p),u(e,be,p),s(be,k6),s(be,Lu),s(Lu,E6),s(be,_6),s(be,Tu),s(Tu,q6),s(be,b6),u(e,pm,p),u(e,io,p),s(io,C6),u(e,um,p),u(e,la,p),la.innerHTML=Yx,u(e,im,p),u(e,co,p),s(co,Ms),s(Ms,y6),s(Ms,Hu),s(Hu,j6),s(Ms,P6),s(Ms,Ku),s(Ku,h6),u(e,cm,p),u(e,Ls,p),s(Ls,S6),s(Ls,gu),s(gu,O6),s(Ls,D6),u(e,dm,p),u(e,ra,p),ra.innerHTML=Zx,u(e,fm,p),u(e,Ce,p),s(Ce,w6),s(Ce,Iu),s(Iu,x6),s(Ce,z6),s(Ce,Au),s(Au,M6),s(Ce,L6),u(e,vm,p),u(e,pa,p),pa.innerHTML=ez,u(e,mm,p),u(e,fo,p),s(fo,T6),u(e,km,p),u(e,ye,p),s(ye,je),s(je,H6),s(je,Ru),s(Ru,K6),s(je,g6),s(je,Uu),s(Uu,I6),s(je,A6),s(je,Vu),s(Vu,T),s(T,R6),s(T,Ju),s(Ju,U6),s(T,V6),s(T,Nu),s(Nu,J6),s(T,N6),s(T,Bu),s(Bu,B6),s(T,Q6),s(T,Qu),s(Qu,G6),s(T,F6),s(ye,$6),s(ye,H),s(H,W6),s(H,Gu),s(Gu,X6),s(H,Y6),s(H,Fu),s(Fu,Z6),s(H,e7),s(H,$u),s($u,s7),s(H,t7),s(H,Wu),s(Wu,a7),s(H,n7),s(ye,o7),s(ye,$e),s($e,l7),s($e,Xu),s(Xu,r7),s($e,p7),s($e,Yu),s(Yu,u7),s($e,i7),u(e,Em,p),u(e,Pe,p),s(Pe,c7),s(Pe,Zu),s(Zu,d7),s(Pe,f7),s(Pe,ei),s(ei,v7),s(Pe,m7),u(e,_m,p),u(e,ua,p),ua.innerHTML=sz,u(e,qm,p),u(e,Ts,p),s(Ts,k7),s(Ts,si),s(si,E7),s(Ts,_7),u(e,bm,p),u(e,he,p),s(he,q7),s(he,ti),s(ti,b7),s(he,C7),s(he,ai),s(ai,y7),s(he,j7),u(e,Cm,p),u(e,ia,p),ia.innerHTML=tz,u(e,ym,p),u(e,vo,p),s(vo,P7),u(e,jm,p),u(e,mo,p),s(mo,h7),u(e,Pm,p),u(e,ko,p),s(ko,Se),s(Se,S7),s(Se,ni),s(ni,O7),s(Se,D7),s(Se,oi),s(oi,w7),s(Se,x7),s(Se,li),s(li,z7),u(e,hm,p),u(e,Oe,p),s(Oe,M7),s(Oe,ri),s(ri,L7),s(Oe,T7),s(Oe,pi),s(pi,H7),s(Oe,K7),u(e,Sm,p),u(e,Eo,p),s(Eo,g7),u(e,Om,p),u(e,ca,p),ca.innerHTML=az,u(e,Dm,p),u(e,_o,p),s(_o,I7),u(e,wm,p),u(e,qo,p),s(qo,We),s(We,A7),s(We,ui),s(ui,R7),s(We,U7),s(We,ii),s(ii,V7),s(We,J7),u(e,xm,p),u(e,bo,p),s(bo,N7),u(e,zm,p),u(e,Co,p),s(Co,B7),u(e,Mm,p),u(e,Hs,p),s(Hs,Q7),s(Hs,da),s(da,G7),s(Hs,F7),u(e,Lm,p),u(e,yo,p),s(yo,$7),u(e,Tm,p),u(e,jo,p),s(jo,W7),u(e,Hm,p),u(e,De,p),s(De,Po),s(Po,X7),s(Po,ci),s(ci,Y7),s(De,Z7),s(De,K),s(K,e9),s(K,di),s(di,s9),s(K,t9),s(K,fa),s(fa,a9),s(K,n9),s(K,fi),s(fi,o9),s(K,l9),s(K,vi),s(vi,r9),s(K,p9),s(De,u9),s(De,Xe),s(Xe,i9),s(Xe,mi),s(mi,c9),s(Xe,d9),s(Xe,va),s(va,f9),s(Xe,v9),u(e,Km,p),u(e,D,p),s(D,m9),s(D,ki),s(ki,k9),s(D,E9),s(D,Ei),s(Ei,_9),s(D,q9),s(D,_i),s(_i,b9),s(D,C9),s(D,qi),s(qi,y9),s(D,j9),u(e,gm,p),u(e,Ye,p),s(Ye,bi),s(bi,P9),s(Ye,h9),s(Ye,ma),s(ma,S9),s(Ye,O9),u(e,Im,p),u(e,ho,p),s(ho,D9),u(e,Am,p),u(e,N,p),s(N,w9),s(N,Ci),s(Ci,x9),s(N,z9),s(N,yi),s(yi,M9),s(N,L9),s(N,ji),s(ji,T9),s(N,H9),u(e,Rm,p),u(e,ka,p),ka.innerHTML=nz,u(e,Um,p),u(e,Ks,p),s(Ks,K9),s(Ks,Pi),s(Pi,g9),s(Ks,I9),u(e,Vm,p),u(e,So,p),s(So,A9),u(e,Jm,p),u(e,Ea,p),Ea.innerHTML=oz,u(e,Nm,p),u(e,gs,p),s(gs,R9),s(gs,hi),s(hi,U9),s(gs,V9),u(e,Bm,p),u(e,Oo,p),s(Oo,J9),u(e,Qm,p),u(e,Do,p),s(Do,_a),s(_a,N9),s(_a,Si),s(Si,B9),s(_a,Q9),u(e,Gm,p),u(e,wo,p),s(wo,G9),u(e,Fm,p),u(e,xo,p),s(xo,F9),u(e,$m,p),u(e,Is,p),s(Is,$9),s(Is,Oi),s(Oi,W9),s(Is,X9),u(e,Wm,p),u(e,qa,p),qa.innerHTML=lz,u(e,Xm,p),u(e,As,p),s(As,Y9),s(As,Di),s(Di,Z9),s(As,e8),u(e,Ym,p),u(e,ba,p),ba.innerHTML=rz,u(e,Zm,p),u(e,zo,p),s(zo,s8),u(e,e1,p),u(e,we,p),s(we,g),s(g,wi),s(wi,t8),s(g,a8),s(g,xi),s(xi,n8),s(g,o8),s(g,zi),s(zi,l8),s(g,r8),s(g,Mi),s(Mi,p8),s(g,u8),s(g,Li),s(Li,Ti),s(Ti,i8),s(we,c8),s(we,Ca),s(Ca,d8),s(Ca,Hi),s(Hi,f8),s(Ca,v8),s(we,m8),s(we,Mo),s(Mo,k8),s(Mo,Ki),s(Ki,E8),u(e,s1,p),u(e,Lo,p),s(Lo,_8),u(e,t1,p),u(e,Rs,p),s(Rs,To),s(To,q8),s(To,gi),s(gi,b8),s(Rs,C8),s(Rs,Ho),s(Ho,y8),s(Ho,Ii),s(Ii,j8),u(e,a1,p),u(e,_,p),s(_,P8),s(_,Ai),s(Ai,h8),s(_,S8),s(_,Ri),s(Ri,O8),s(_,D8),s(_,Ui),s(Ui,w8),s(_,x8),s(_,Vi),s(Vi,z8),s(_,M8),s(_,Ji),s(Ji,L8),s(_,T8),u(e,n1,p),u(e,Ko,p),s(Ko,H8),u(e,o1,p),u(e,go,p),s(go,K8),u(e,l1,p),u(e,Us,p),s(Us,g8),s(Us,Ni),s(Ni,I8),s(Us,A8),u(e,r1,p),u(e,ya,p),ya.innerHTML=pz,u(e,p1,p),u(e,xe,p),s(xe,R8),s(xe,Bi),s(Bi,U8),s(xe,V8),s(xe,Qi),s(Qi,J8),s(xe,N8),u(e,u1,p),u(e,Io,p),s(Io,B8),u(e,i1,p),u(e,B,p),s(B,ja),s(ja,Q8),s(ja,Gi),s(Gi,G8),s(ja,F8),s(B,$8),s(B,Fi),s(Fi,W8),s(B,X8),s(B,$i),s($i,Y8),s(B,Z8),s(B,Vs),s(Vs,e0),s(Vs,Wi),s(Wi,s0),s(Vs,t0),s(Vs,Xi),s(Xi,a0),u(e,c1,p),u(e,Js,p),s(Js,n0),s(Js,Yi),s(Yi,o0),s(Js,l0),u(e,d1,p),u(e,Ao,p),s(Ao,r0),u(e,f1,p),u(e,Ro,p),s(Ro,p0),u(e,v1,p),u(e,Uo,p),s(Uo,Ze),s(Ze,u0),s(Ze,Zi),s(Zi,i0),s(Ze,c0),s(Ze,ec),s(ec,d0),s(Ze,f0),u(e,m1,p),u(e,Vo,p),s(Vo,v0),u(e,k1,p),u(e,Ns,p),s(Ns,m0),s(Ns,sc),s(sc,k0),s(Ns,E0),u(e,E1,p),u(e,Q,p),s(Q,_0),s(Q,tc),s(tc,q0),s(Q,b0),s(Q,ac),s(ac,C0),s(Q,y0),s(Q,nc),s(nc,j0),s(Q,P0),u(e,_1,p),u(e,Jo,p),s(Jo,h0),u(e,q1,p),u(e,G,p),s(G,S0),s(G,oc),s(oc,O0),s(G,D0),s(G,lc),s(lc,w0),s(G,x0),s(G,rc),s(rc,z0),s(G,M0),u(e,b1,p),u(e,Bs,p),s(Bs,L0),s(Bs,pc),s(pc,T0),s(Bs,H0),u(e,C1,p),u(e,ze,p),s(ze,No),s(No,K0),s(No,Pa),s(Pa,Qs),s(Qs,uc),s(uc,g0),s(Qs,I0),s(Qs,ic),s(ic,A0),s(Qs,R0),s(Pa,U0),s(Pa,Gs),s(Gs,cc),s(cc,V0),s(Gs,J0),s(Gs,dc),s(dc,N0),s(Gs,B0),s(ze,Q0),s(ze,Fs),s(Fs,fc),s(fc,G0),s(Fs,F0),s(Fs,vc),s(vc,$0),s(Fs,W0),s(ze,X0),s(ze,q),s(q,mc),s(mc,Y0),s(q,Z0),s(q,kc),s(kc,eC),s(q,sC),s(q,Ec),s(Ec,tC),s(q,aC),s(q,_c),s(_c,nC),s(q,oC),s(q,qc),s(qc,lC),s(q,rC),s(q,bc),s(bc,pC),s(q,uC),u(e,y1,p),u(e,ha,p),ha.innerHTML=uz,u(e,j1,p),u(e,F,p),s(F,iC),s(F,Cc),s(Cc,cC),s(F,dC),s(F,yc),s(yc,fC),s(F,vC),s(F,jc),s(jc,mC),s(F,kC),u(e,P1,p),u(e,Sa,p),Sa.innerHTML=iz,u(e,h1,p),u(e,Bo,p),s(Bo,EC),u(e,S1,p),u(e,Qo,p),s(Qo,_C),u(e,O1,p),u(e,Go,p),s(Go,qC),u(e,D1,p),u(e,Fo,p),s(Fo,bC),u(e,w1,p),u(e,$,p),s($,CC),s($,Pc),s(Pc,yC),s($,jC),s($,hc),s(hc,PC),s($,hC),s($,Oa),s(Oa,SC),s($,OC),u(e,x1,p),u(e,$s,p),s($s,DC),s($s,Da),s(Da,wC),s($s,xC),u(e,z1,p),u(e,wa,p),s(wa,zC),s(wa,Sc),s(Sc,MC),u(e,M1,p),u(e,xa,p),xa.innerHTML=cz,u(e,L1,p),u(e,w,p),s(w,LC),s(w,Oc),s(Oc,TC),s(w,HC),s(w,Dc),s(Dc,KC),s(w,gC),s(w,wc),s(wc,IC),s(w,AC),s(w,xc),s(xc,RC),s(w,UC),u(e,T1,p),u(e,za,p),za.innerHTML=dz,u(e,H1,p),u(e,f,p),s(f,VC),s(f,zc),s(zc,JC),s(f,NC),s(f,Mc),s(Mc,BC),s(f,QC),s(f,Lc),s(Lc,GC),s(f,FC),s(f,Tc),s(Tc,$C),s(f,WC),s(f,Hc),s(Hc,XC),s(f,YC),s(f,Kc),s(Kc,ZC),s(f,ey),s(f,gc),s(gc,sy),s(f,ty),s(f,Ic),s(Ic,ay),s(f,ny),u(e,K1,p),u(e,Ma,p),Ma.innerHTML=fz,u(e,g1,p),u(e,x,p),s(x,oy),s(x,Ac),s(Ac,ly),s(x,ry),s(x,Rc),s(Rc,py),s(x,uy),s(x,Uc),s(Uc,iy),s(x,cy),s(x,Vc),s(Vc,dy),s(x,fy),u(e,I1,p),u(e,Ws,p),s(Ws,vy),s(Ws,La),s(La,my),s(Ws,ky),u(e,A1,p),u(e,R1,p),u(e,U1,p),u(e,$o,p),s($o,Ey),u(e,V1,p),u(e,Wo,p),s(Wo,es),s(es,_y),s(es,Jc),s(Jc,qy),s(es,by),s(es,Nc),s(Nc,Cy),s(es,yy),u(e,J1,p),u(e,Xs,p),s(Xs,jy),s(Xs,Bc),s(Bc,Py),s(Xs,hy),u(e,N1,p),u(e,Xo,p),s(Xo,Sy),u(e,B1,p),u(e,Yo,p),s(Yo,Ta),s(Ta,Oy),s(Ta,Ha),s(Ha,Dy),s(Ta,wy)},p:Ny,i:Ny,o:Ny,d(e){e&&t(ts),e&&t(Zc),e&&t(ee),e&&t(ed),e&&t(as),e&&t(sd),e&&t(Ra),e&&t(td),e&&t(ns),e&&t(ad),e&&t(nd),e&&t(od),e&&t(Ua),e&&t(ld),e&&t(Va),e&&t(rd),e&&t(Ja),e&&t(pd),e&&t(os),e&&t(ud),e&&t(ft),e&&t(id),e&&t(Na),e&&t(cd),e&&t(C),e&&t(dd),e&&t(ls),e&&t(fd),e&&t(Ba),e&&t(vd),e&&t(Qa),e&&t(md),e&&t(rs),e&&t(kd),e&&t(Et),e&&t(Ed),e&&t(ps),e&&t(_d),e&&t(Ga),e&&t(qd),e&&t(se),e&&t(bd),e&&t($a),e&&t(Cd),e&&t(Wa),e&&t(yd),e&&t(us),e&&t(jd),e&&t(Xa),e&&t(Pd),e&&t(Za),e&&t(hd),e&&t(_t),e&&t(Sd),e&&t(en),e&&t(Od),e&&t(sn),e&&t(Dd),e&&t(an),e&&t(wd),e&&t(nn),e&&t(xd),e&&t(on),e&&t(zd),e&&t(te),e&&t(Md),e&&t(ae),e&&t(Ld),e&&t(is),e&&t(Td),e&&t(A),e&&t(Hd),e&&t(rn),e&&t(Kd),e&&t(pn),e&&t(gd),e&&t(m),e&&t(Id),e&&t(un),e&&t(Ad),e&&t(yt),e&&t(Rd),e&&t(jt),e&&t(Ud),e&&t(Pt),e&&t(Vd),e&&t(ht),e&&t(Jd),e&&t(St),e&&t(Nd),e&&t(Ot),e&&t(Bd),e&&t(cs),e&&t(Qd),e&&t(Dt),e&&t(Gd),e&&t(k),e&&t(Fd),e&&t(cn),e&&t($d),e&&t(R),e&&t(Wd),e&&t(ne),e&&t(Xd),e&&t(wt),e&&t(Yd),e&&t(L),e&&t(Zd),e&&t(ds),e&&t(ef),e&&t(fs),e&&t(sf),e&&t(U),e&&t(tf),e&&t(xt),e&&t(af),e&&t(oe),e&&t(nf),e&&t(dn),e&&t(of),e&&t(vn),e&&t(lf),e&&t(mn),e&&t(rf),e&&t(V),e&&t(pf),e&&t(Y),e&&t(uf),e&&t(zt),e&&t(cf),e&&t(kn),e&&t(df),e&&t(vs),e&&t(ff),e&&t(Mt),e&&t(vf),e&&t(y),e&&t(mf),e&&t(Lt),e&&t(kf),e&&t(j),e&&t(Ef),e&&t(En),e&&t(_f),e&&t(_n),e&&t(qf),e&&t(qn),e&&t(bf),e&&t(bn),e&&t(Cf),e&&t(ms),e&&t(yf),e&&t(le),e&&t(jf),e&&t(Tt),e&&t(Pf),e&&t(re),e&&t(hf),e&&t(ks),e&&t(Sf),e&&t(P),e&&t(Of),e&&t(Cn),e&&t(Df),e&&t(Es),e&&t(wf),e&&t(J),e&&t(xf),e&&t(Ht),e&&t(zf),e&&t(yn),e&&t(Mf),e&&t(jn),e&&t(Lf),e&&t(Kt),e&&t(Tf),e&&t(_s),e&&t(Hf),e&&t(gt),e&&t(Kf),e&&t(Pn),e&&t(gf),e&&t(pe),e&&t(If),e&&t(hn),e&&t(Af),e&&t(Sn),e&&t(Rf),e&&t(qs),e&&t(Uf),e&&t(On),e&&t(Vf),e&&t(ue),e&&t(Jf),e&&t(At),e&&t(Nf),e&&t(wn),e&&t(Bf),e&&t(zn),e&&t(Qf),e&&t(Mn),e&&t(Gf),e&&t(Ln),e&&t(Ff),e&&t(Rt),e&&t($f),e&&t(bs),e&&t(Wf),e&&t(ie),e&&t(Xf),e&&t(Tn),e&&t(Yf),e&&t(Hn),e&&t(Zf),e&&t(Kn),e&&t(ev),e&&t(ce),e&&t(sv),e&&t(Ut),e&&t(tv),e&&t(gn),e&&t(av),e&&t(h),e&&t(nv),e&&t(Vt),e&&t(ov),e&&t(In),e&&t(lv),e&&t(An),e&&t(rv),e&&t(ys),e&&t(pv),e&&t(js),e&&t(uv),e&&t(Rn),e&&t(iv),e&&t(de),e&&t(cv),e&&t(Un),e&&t(dv),e&&t(Bt),e&&t(fv),e&&t(Ps),e&&t(vv),e&&t(Qt),e&&t(mv),e&&t(Vn),e&&t(kv),e&&t(hs),e&&t(Ev),e&&t(Gt),e&&t(_v),e&&t(Jn),e&&t(qv),e&&t(Nn),e&&t(bv),e&&t(Bn),e&&t(Cv),e&&t(Qn),e&&t(yv),e&&t(Fe),e&&t(jv),e&&t(Ft),e&&t(Pv),e&&t($t),e&&t(hv),e&&t(Gn),e&&t(Sv),e&&t(Fn),e&&t(Ov),e&&t($n),e&&t(Dv),e&&t(Ss),e&&t(wv),e&&t(Wn),e&&t(xv),e&&t(Os),e&&t(zv),e&&t(Xt),e&&t(Mv),e&&t(ve),e&&t(Lv),e&&t(Xn),e&&t(Tv),e&&t(Yn),e&&t(Hv),e&&t(Ds),e&&t(Kv),e&&t(ea),e&&t(gv),e&&t(Zn),e&&t(Iv),e&&t(eo),e&&t(Av),e&&t(so),e&&t(Rv),e&&t(to),e&&t(Uv),e&&t(ao),e&&t(Vv),e&&t(ws),e&&t(Jv),e&&t(me),e&&t(Nv),e&&t(no),e&&t(Bv),e&&t(ta),e&&t(Qv),e&&t(oo),e&&t(Gv),e&&t(aa),e&&t(Fv),e&&t(S),e&&t($v),e&&t(lo),e&&t(Wv),e&&t(ro),e&&t(Xv),e&&t(ke),e&&t(Yv),e&&t(na),e&&t(Zv),e&&t(O),e&&t(em),e&&t(xs),e&&t(sm),e&&t(zs),e&&t(tm),e&&t(po),e&&t(am),e&&t(Ee),e&&t(nm),e&&t(uo),e&&t(om),e&&t(_e),e&&t(lm),e&&t(qe),e&&t(rm),e&&t(be),e&&t(pm),e&&t(io),e&&t(um),e&&t(la),e&&t(im),e&&t(co),e&&t(cm),e&&t(Ls),e&&t(dm),e&&t(ra),e&&t(fm),e&&t(Ce),e&&t(vm),e&&t(pa),e&&t(mm),e&&t(fo),e&&t(km),e&&t(ye),e&&t(Em),e&&t(Pe),e&&t(_m),e&&t(ua),e&&t(qm),e&&t(Ts),e&&t(bm),e&&t(he),e&&t(Cm),e&&t(ia),e&&t(ym),e&&t(vo),e&&t(jm),e&&t(mo),e&&t(Pm),e&&t(ko),e&&t(hm),e&&t(Oe),e&&t(Sm),e&&t(Eo),e&&t(Om),e&&t(ca),e&&t(Dm),e&&t(_o),e&&t(wm),e&&t(qo),e&&t(xm),e&&t(bo),e&&t(zm),e&&t(Co),e&&t(Mm),e&&t(Hs),e&&t(Lm),e&&t(yo),e&&t(Tm),e&&t(jo),e&&t(Hm),e&&t(De),e&&t(Km),e&&t(D),e&&t(gm),e&&t(Ye),e&&t(Im),e&&t(ho),e&&t(Am),e&&t(N),e&&t(Rm),e&&t(ka),e&&t(Um),e&&t(Ks),e&&t(Vm),e&&t(So),e&&t(Jm),e&&t(Ea),e&&t(Nm),e&&t(gs),e&&t(Bm),e&&t(Oo),e&&t(Qm),e&&t(Do),e&&t(Gm),e&&t(wo),e&&t(Fm),e&&t(xo),e&&t($m),e&&t(Is),e&&t(Wm),e&&t(qa),e&&t(Xm),e&&t(As),e&&t(Ym),e&&t(ba),e&&t(Zm),e&&t(zo),e&&t(e1),e&&t(we),e&&t(s1),e&&t(Lo),e&&t(t1),e&&t(Rs),e&&t(a1),e&&t(_),e&&t(n1),e&&t(Ko),e&&t(o1),e&&t(go),e&&t(l1),e&&t(Us),e&&t(r1),e&&t(ya),e&&t(p1),e&&t(xe),e&&t(u1),e&&t(Io),e&&t(i1),e&&t(B),e&&t(c1),e&&t(Js),e&&t(d1),e&&t(Ao),e&&t(f1),e&&t(Ro),e&&t(v1),e&&t(Uo),e&&t(m1),e&&t(Vo),e&&t(k1),e&&t(Ns),e&&t(E1),e&&t(Q),e&&t(_1),e&&t(Jo),e&&t(q1),e&&t(G),e&&t(b1),e&&t(Bs),e&&t(C1),e&&t(ze),e&&t(y1),e&&t(ha),e&&t(j1),e&&t(F),e&&t(P1),e&&t(Sa),e&&t(h1),e&&t(Bo),e&&t(S1),e&&t(Qo),e&&t(O1),e&&t(Go),e&&t(D1),e&&t(Fo),e&&t(w1),e&&t($),e&&t(x1),e&&t($s),e&&t(z1),e&&t(wa),e&&t(M1),e&&t(xa),e&&t(L1),e&&t(w),e&&t(T1),e&&t(za),e&&t(H1),e&&t(f),e&&t(K1),e&&t(Ma),e&&t(g1),e&&t(x),e&&t(I1),e&&t(Ws),e&&t(A1),e&&t(R1),e&&t(U1),e&&t($o),e&&t(V1),e&&t(Wo),e&&t(J1),e&&t(Xs),e&&t(N1),e&&t(Xo),e&&t(B1),e&&t(Yo)}}}const uM={title:"Apprendre SvelteKit en créant un blog Markdown statique",date:"2021-12-14",categories:["blog","sveltekit"]};class iM extends nM{constructor(ts){super(),oM(this,ts,null,rM,lM,{})}}export{iM as default,uM as metadata};
